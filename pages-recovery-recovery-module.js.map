{"version":3,"sources":["webpack:///./src/app/pages/recovery/AuthGuard.service.ts","webpack:///./src/app/pages/recovery/mere.pipe.ts","webpack:///./src/app/pages/recovery/recovery-routing.module.ts","webpack:///./src/app/pages/recovery/recovery.component.css","webpack:///./src/app/pages/recovery/recovery.component.html","webpack:///./src/app/pages/recovery/recovery.component.ts","webpack:///./src/app/pages/recovery/recovery.module.ts","webpack:///./src/app/pages/recovery/split.pipe.ts"],"names":[],"mappings":"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","file":"pages-recovery-recovery-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { CanActivate,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot } from '@angular/router';\r\nimport { Auth } from \"../../shared/models/Auth.model\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private toaster: ToastrService) {}\r\n  auth: Auth;\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    this.auth = JSON.parse(sessionStorage.getItem(\"auth\"));\r\n    console.log(this.auth)\r\n    let b = false;\r\n    this.auth.modules.forEach(screen=>{\r\n      if(screen.modUrl.indexOf(\"recovery\")>=0){\r\n        b =  true;\r\n      }\r\n    })\r\n    if(!b){\r\n      this.toaster.error(\"Permission Denied\");\r\n    }\r\n    // ('Please Login to Continue');?\r\n    return true;\r\n  }\r\n}","import { Pipe,PipeTransform  } from '@angular/core';\r\n@Pipe({\r\n    name: 'merge'\r\n  })\r\n  export class MergePipe implements PipeTransform{\r\n    transform(arr1:string, arr2:string,arr3:string,arr4:string,arr5:string,arr6:string) {\r\n      var a=arr1.split(',');   \r\n      var b=arr2.split(',');\r\n      var c=arr3.split(',');\r\n      var d=arr4.split(',');\r\n      var e=arr5.split(',');\r\n      var f=arr6.split(',');\r\n      let arr = [];\r\n      a.forEach((item, i) => {\r\n        arr.push({ inst: a[i], trx: b[i],post:c[i],amt:d[i],typ:e[i],dt:f[i] });\r\n      });\r\n      return arr;\r\n    }\r\n   \r\n  }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {RecoveryComponent} from './recovery.component';\r\nimport { AuthGuard } from './AuthGuard.service';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: RecoveryComponent,canActivate: [AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RecoveryRoutingModule { }\r\n","module.exports = \"\\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n    line-height: 1;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  tr.mat-header-row {\\r\\n    height: 0px;\\r\\n}\\r\\n  \\r\\n  tr.mat-row {\\r\\n  height: 0px;\\r\\n}\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  color: rgba(0,0,0,.87);\\r\\n  font-size: 0.750rem;\\r\\n}\\r\\n  \\r\\n  /*.trx-table td:last-child {\\r\\n text-align: center;\\r\\n}\\r\\n*/\\r\\n  \\r\\n  .td-center {\\r\\n  text-align: right;\\r\\n}\\r\\n  \\r\\n  .td-right{\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light th:last-child {\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light th:first-child {\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light>th {\\r\\n  padding: .45rem 0rem;\\r\\n}\\r\\n  \\r\\n  th.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n  \\r\\n  .mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n  \\r\\n  th.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n}\\r\\n  \\r\\n  td,th{\\r\\n  padding-left: 16px !important;\\r\\n  width: 11% !important;\\r\\n}\\r\\n  \\r\\n  td:first-child, th:first-child{\\r\\n  padding-left: 16px !important;\\r\\n  width: 15% !important;\\r\\n}\\r\\n  \\r\\n  .w-20{\\r\\n  width: 20% !important;\\r\\n}\\r\\n  \\r\\n  th{\\r\\n  font-size: 12px;\\r\\n  font-weight: 700;\\r\\n}\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"leftSideBar\\\">\\r\\n          <h6><i class=\\\"fa fa-sliders fa-lg\\\"></i> Filter</h6>\\r\\n          <div class=\\\"selectedFilter\\\">\\r\\n            <ul>\\r\\n              <li *ngFor=\\\"let filter of filters\\\">{{filter.key}} : {{filter.value}}\\r\\n                <a (click)=\\\"deleteFilter(filter)\\\">\\r\\n                  <i class=\\\"fa fa-times\\\"></i>\\r\\n                </a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n          <div class=\\\"filtersWrap\\\">\\r\\n            <div class=\\\"filter\\\">\\r\\n              <a class=\\\"acc_trigger\\\">Organization</a>\\r\\n              <div class=\\\"collapse acc_container\\\" id=\\\"region\\\">\\r\\n                <div class=\\\"listmenu\\\">\\r\\n                  <ul class=\\\"sub-menu border-bottom pb-2\\\">\\r\\n                    <li *ngFor=\\\"let reg of organization\\\">\\r\\n                      <span class=\\\"nav-click\\\" style=\\\"width: 10%;margin-left: 90%;\\\"\\r\\n                        (click)=\\\"navClick($event.srcElement)\\\"></span>\\r\\n                      <span (click)=\\\"regionClick(reg)\\\">{{reg.regionName}}</span>\\r\\n                      <ul class=\\\"sub-menu\\\">\\r\\n                        <li *ngFor=\\\"let area of reg.areas\\\">\\r\\n                          <span class=\\\"nav-click\\\" style=\\\"width: 10%;margin-left: 90%;\\\"\\r\\n                            (click)=\\\"navClick($event.srcElement)\\\"></span>{{area.areaName}}\\r\\n                          <ul class=\\\"sub-menu\\\">\\r\\n                            <li *ngFor=\\\"let branch of area.branches\\\">\\r\\n                              <span class=\\\"nav-click\\\" style=\\\"width: 10%;margin-left: 90%;\\\"\\r\\n                                (click)=\\\"navClick($event.srcElement)\\\">\\r\\n                              </span>{{branch.branchName}}\\r\\n                              <ul class=\\\"sub-menu\\\">\\r\\n                                <li *ngFor=\\\"let port of branch.portfolio\\\" (click)=\\\"portfolioClick(port)\\\">\\r\\n                                  {{port.portfolioName}}</li>\\r\\n                              </ul>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"filter\\\"> <a class=\\\"acc_trigger\\\">Institution </a>\\r\\n              <div class=\\\"collapse acc_container\\\" id=\\\"country\\\">\\r\\n                <div class=\\\"pl-3 border-bottom pb-2\\\">\\r\\n                  <div class=\\\"checkbox mb-1\\\">\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                      <input type=\\\"checkbox\\\" id=\\\"filterEasyPaisa\\\" name=\\\"instEasyPaisa\\\" [ngModel]=\\\"filterEasyPaisa\\\"\\r\\n                        (ngModelChange)=\\\"onFilterCheckChange('Easy Paisa')\\\" class=\\\"custom-control-input\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"filterEasyPaisa\\\"> Easy Paisa</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"checkbox mb-1\\\">\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                      <input type=\\\"checkbox\\\" id=\\\"filterMobiCash\\\" name=\\\"filterMobiCash\\\" [ngModel]=\\\"filterMobiCash\\\"\\r\\n                        (ngModelChange)=\\\"onFilterCheckChange('MobiCash')\\\" class=\\\"custom-control-input\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"filterMobiCash\\\"> Mobi Cash</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"checkbox mb-1\\\">\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                      <input type=\\\"checkbox\\\" id=\\\"filterNadra\\\" name=\\\"filterNadra\\\" [ngModel]=\\\"filterNadra\\\"\\r\\n                        (ngModelChange)=\\\"onFilterCheckChange('Nadra')\\\" class=\\\"custom-control-input\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"filterNadra\\\"> Nadra</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"filter\\\"> <a class=\\\"acc_trigger\\\">Date Range (Due)</a>\\r\\n              <div class=\\\"collapse acc_container\\\">\\r\\n                <div class=\\\"pl-3 clearfix border-bottom pb-2\\\">\\r\\n                  <div class=\\\"cRow\\\">\\r\\n                    <div class=\\\"cCol1 clearfix  pt-0\\\">\\r\\n                      <label>From Date:</label>\\r\\n                      <div class=\\\"input-group date\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" [ngModel]=\\\"dueDateFrom\\\" name=\\\"dueDateForm\\\" #dueDateFrom\\r\\n                          (ngModelChange)=\\\"onDateFilterChange(dueDateFrom.value,'dueFrom')\\\"\\r\\n                          placeholder=\\\"DD / MM / YYYY\\\">\\r\\n                        <div class=\\\"input-group-append input-group-addon\\t\\\">\\r\\n                          <button class=\\\"input-group-text\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\"></i></button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"cCol1 clearfix pt-0\\\">\\r\\n                      <label>To Date:</label>\\r\\n                      <div class=\\\"input-group date\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" [ngModel]=\\\"dueDateTo\\\" name=\\\"dueDateTo\\\" #dueDateTo\\r\\n                          (ngModelChange)=\\\"onDateFilterChange(dueDateTo.value,'dueTo')\\\" placeholder=\\\"DD / MM / YYYY\\\">\\r\\n                        <div class=\\\"input-group-append input-group-addon\\t\\\">\\r\\n                          <button class=\\\"input-group-text\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\"></i></button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"filter\\\"> <a class=\\\"acc_trigger\\\">Date Range (Payment)</a>\\r\\n              <div class=\\\"collapse acc_container\\\">\\r\\n                <div class=\\\"pl-3 clearfix border-bottom pb-2\\\">\\r\\n                  <div class=\\\"cRow\\\">\\r\\n                    <div class=\\\"cCol1 clearfix  pt-0\\\">\\r\\n                      <label>From Date:</label>\\r\\n                      <div class=\\\"input-group date\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" [ngModel]=\\\"paymentDateFrom\\\" #paymentDateFrom\\r\\n                          (ngModelChange)=\\\"onDateFilterChange(paymentDateFrom.value,'paymentFrom')\\\"\\r\\n                          placeholder=\\\"DD / MM / YYYY\\\">\\r\\n                        <div class=\\\"input-group-append input-group-addon\\t\\\">\\r\\n                          <button class=\\\"input-group-text\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\"></i></button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"cCol1 clearfix pt-0\\\">\\r\\n                      <label>To Date:</label>\\r\\n                      <div class=\\\"input-group date\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" [ngModel]=\\\"paymentDateTo\\\" name=\\\"paymentDateTo\\\"\\r\\n                          #paymentDateTo (ngModelChange)=\\\"onDateFilterChange(paymentDateTo.value,'paymentTo')\\\"\\r\\n                          placeholder=\\\"DD / MM / YYYY\\\">\\r\\n                        <div class=\\\"input-group-append input-group-addon\\t\\\">\\r\\n                          <button class=\\\"input-group-text\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\"></i></button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"filter\\\"> <a class=\\\"acc_trigger\\\">Old Client ID</a>\\r\\n              <div class=\\\"collapse acc_container\\\">\\r\\n                <div class=\\\"pl-3 clearfix border-bottom pb-2\\\">\\r\\n                  <div class=\\\"cRow\\\">\\r\\n                    <div class=\\\"cCo11 clearfix pt-0\\\">\\r\\n                      <form class=\\\"form-inline searchForm\\\">\\r\\n                        <input class=\\\"form-control mr-2 form-control-sm\\\" type=\\\"text\\\" [ngModel]=\\\"oldClientId\\\"\\r\\n                          #oldClientId name=\\\"oldClientId\\\" placeholder=\\\"Search ID\\\" aria-label=\\\"Search\\\">\\r\\n                        <button class=\\\"btn btn-sm searchBtn\\\" (click)=\\\"onSearchOldClient(oldClientId.value)\\\"\\r\\n                          type=\\\"submit\\\">Search</button>\\r\\n                      </form>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"sidechecks mt-2\\\">\\r\\n              <div class=\\\"checkbox mb-1 mr-3 d-inline-block\\\">\\r\\n                <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                  <input type=\\\"checkbox\\\" id=\\\"checkbox9\\\" name=\\\"coBorrower\\\" [ngModel]=\\\"filterPosted\\\"\\r\\n                    (ngModelChange)=\\\"onFilterCheckChange('Posted')\\\" class=\\\"custom-control-input\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"checkbox9\\\"> Posted</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox mb-1 d-inline-block\\\">\\r\\n                <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                  <input type=\\\"checkbox\\\" id=\\\"checkbox10\\\" name=\\\"coBorrower\\\" [ngModel]=\\\"filterOverdue\\\"\\r\\n                    (ngModelChange)=\\\"onFilterCheckChange('Overdue')\\\" class=\\\"custom-control-input\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"checkbox10\\\"> Overdue</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\" *ngIf=\\\"allItems.length>0  || (this.auth.role == 'bm')\\\">\\r\\n              <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Search\\r\\n                  <i class=\\\"fa fa-search\\\"> </i>\\r\\n                </h6>\\r\\n              </div>\\r\\n              <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n\\r\\n                <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"col-sm-9\\\" style=\\\"float:left;\\\">\\r\\n                    <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                      <!-- <a  *ngIf=\\\"showFields\\\">\\r\\n                            <i class=\\\"fa fa-window-close\\\" (click)=\\\"cloaseField()\\\"> </i> (keyup)=\\\"applyFilter($event.target.value)\\\"\\r\\n                          </a> -->\\r\\n                      <input id=\\\"searchBox\\\" (keyup)=\\\"searchValue()\\\" autofocus matInput name=\\\"searchValue\\\"\\r\\n                        [(ngModel)]=\\\"searchVal\\\" placeholder=\\\"Search\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\" style=\\\"float:right;\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\r\\n                      style=\\\" background-color: #76b1e7; height: 31px; margin: 6px; \\\">Search</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n                <!-- <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search for names..\\\" title=\\\"Type in a name\\\"> -->\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-6\\\" *ngIf=\\\"auth.role != 'bm' && auth.role != 'bdo'\\\">\\r\\n              <form [formGroup]=\\\"branchForm\\\" (ngSubmit)=\\\"onSubmitBranchForm()\\\">\\r\\n                <ng-select *ngIf=\\\"auth.role != 'bm' && auth.role != 'bdo'\\\" [items]=\\\"brnchs\\\" required\\r\\n                  (change)=\\\"onSelectBranch($event)\\\" bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\"\\r\\n                  placeholder=\\\"Select Branch:\\\" formControlName=\\\"branch\\\">\\r\\n                </ng-select>\\r\\n\\r\\n\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" multiTemplateDataRows matSort>\\r\\n              <!--(matSortChange)=\\\"sortData($event)\\\">-->\\r\\n\\r\\n              <ng-container matColumnDef=\\\"frstNm\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Client Name</th>\\r\\n                <td class=\\\"tableRow\\\" mat-cell *matCellDef=\\\"let element\\\"> <a class=\\\"userImg\\\"><img\\r\\n                      src=\\\"assets/images/client2.png\\\" alt=\\\"\\\"><span>{{element.frstNm+\\\" \\\"+element.lastNm}}</span></a>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"clntSeq\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Client ID </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.clntSeq}} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"prd\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product(s)</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.prd}} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"bdo\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> BDO</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bdo}} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"totalDue\\\">\\r\\n                <th class=\\\"td-center\\\" mat-header-cell *matHeaderCellDef>Total Due </th>\\r\\n                <td class=\\\"td-center\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.totalDue | currency:'PKR':''}} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"totalRecv\\\">\\r\\n                <th class=\\\"td-center\\\" mat-header-cell *matHeaderCellDef> Total Paid </th>\\r\\n                <td class=\\\"td-center\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.totalRecv | currency:'PKR':''}}\\r\\n                </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"totalremain\\\">\\r\\n                <th class=\\\"td-center\\\" mat-header-cell *matHeaderCellDef> Total Remaining </th>\\r\\n                <td class=\\\"td-center\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                  {{element.totalDue-element.totalRecv | currency:'PKR':''}} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"nextDue\\\">\\r\\n                <th class=\\\"td-right\\\" mat-header-cell *matHeaderCellDef> Due Date </th>\\r\\n                <td class=\\\"td-right\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.nextDue | date :'dd-MM-yyyy' }} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"status\\\">\\r\\n                <th class=\\\"td-right\\\" mat-header-cell *matHeaderCellDef> Status </th>\\r\\n                <td class=\\\"td-right\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.status }} </td>\\r\\n              </ng-container>\\r\\n\\r\\n\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> <a *ngIf=\\\"element.totaldue-element.totalpaid!=0\\\" href=\\\"#\\\"\\r\\n                    data-toggle=\\\"modal\\\" (click)=\\\"openApplyPayment(element)\\\" class=\\\"iconBtn\\\"><img\\r\\n                      src=\\\"assets/images/rscheck.png\\\" alt=\\\"\\\"></a>\\r\\n                  <a *ngIf=\\\"element.totalpaid==0 && role=='admin'\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"disgardApp(element)\\\" class=\\\"iconBtn\\\"><img src=\\\"assets/images/crose-icon.png\\\" alt=\\\"\\\"></a>\\r\\n                </td>\\r\\n\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"expandedDetail\\\">\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\r\\n                  <div class=\\\"example-element-detail\\\"\\r\\n                    [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\r\\n\\r\\n                    <table>\\r\\n\\r\\n                      <tr>\\r\\n                        <th>Inst. No</th>\\r\\n                        <th>Product</th>\\r\\n                        <th>Principal Due </th>\\r\\n                        <th>Charges Due </th>\\r\\n                        <th>Total Due </th>\\r\\n                        <th>Due Date</th>\\r\\n                        <th>Paid Amt.</th>\\r\\n                        <th>Paid Date</th>\\r\\n                        <th>Institution</th>\\r\\n                        <th>Instrument / Trans. Seq</th>\\r\\n                        <th>Status</th>\\r\\n                        <th style=\\\"min-width: 100px; display: inline-flex;\\\"> <span data-toggle=\\\"tooltip\\\"\\r\\n                            title=\\\"Pay Recovery\\\">\\r\\n                            <button class=\\\"customButtonForAnchors\\\" appNoDblClick\\r\\n                              *ngIf=\\\"element.totaldue-element.totalpaid!=0\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\"\\r\\n                              (click)=\\\"openApplyPayment(element)\\\"><img src=\\\"assets/images/rscheck.png\\\" alt=\\\"\\\">\\r\\n                            </button></span>\\r\\n                          <button data-toggle=\\\"tooltip\\\" title=\\\"JV History\\\"\\r\\n                            (click)=\\\"revoceryVoucherHistry(element.clntSeq)\\\" class=\\\"customButtonForAnchors\\\"><i\\r\\n                              class=\\\"fa fa-history\\\"></i></button>\\r\\n                          <button *ngIf=\\\"auth.role=='admin' || auth.role == 'bm'\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\"\\r\\n                            (click)=\\\"onExcessRecoverClick(element)\\\" class=\\\"customButtonForAnchors\\\"><i\\r\\n                              class=\\\"fa fa-money\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n                        </th>\\r\\n\\r\\n                      </tr>\\r\\n\\r\\n                      <tr *ngFor=\\\"let re of element.recoverySub;\\\">\\r\\n                        <td>{{re.instNum}}</td>\\r\\n                        <td>{{re.prd}}</td>\\r\\n                        <td>{{re.ppalAmtDue | currency:'PKR':''}}</td>\\r\\n                        <td><a href=\\\"#\\\" data-toggle=\\\"modal\\\" (click)=\\\"onCharges(re.paySchedDtlSeq)\\\">\\r\\n                            <span>{{re.totChrgDue | currency:'PKR':''}}</span></a></td>\\r\\n                        <td>{{re.ppalAmtDue+re.totChrgDue | currency:'PKR':''}}</td>\\r\\n                        <td>{{re.dueDt | date :'dd-MM-yyyy'}}</td>\\r\\n                        <td>\\r\\n                          <table class=\\\"thead-light thead-blue\\\">\\r\\n                            <tr *ngFor=\\\"let p of re.pymtAmt | split:','\\\">\\r\\n                              <td style=\\\"border:none\\\">{{p | currency:'PKR':''}}</td>\\r\\n                            </tr>\\r\\n                          </table>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          <table class=\\\"thead-light thead-blue\\\">\\r\\n                            <tr *ngFor=\\\"let p of re.pymtDt| split:','\\\">\\r\\n                              <td style=\\\"border:none\\\">{{p | date :'dd-MM-yyyy'}}</td>\\r\\n                            </tr>\\r\\n                          </table>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          <table class=\\\"thead-light thead-blue \\\">\\r\\n                            <tr *ngFor=\\\"let p of re.rcvryTyp| split:','\\\">\\r\\n                              <td style=\\\"border:none\\\">{{p}}</td>\\r\\n                            </tr>\\r\\n                          </table>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          <table class=\\\"thead-light thead-blue trx-table\\\">\\r\\n                            <div>\\r\\n                              <tr *ngFor=\\\"let p of re.instr| merge:re.trxSeq:re.post:re.trxPymt:re.pymtType:re.pymtDt\\\">\\r\\n                                <td style=\\\"border:none\\\"\\r\\n                                  *ngIf=\\\"(last==p.trx) &&  ((p.post==0) || (p.post==1 && (role==='admin' || role ==='ho'))); else notpost\\\">\\r\\n                                  {{p.inst}} <b *ngIf=\\\"p.trx!=''\\\">/</b><a data-toggle=\\\"modal\\\"\\r\\n                                    (click)=\\\"openAdjustPayment(element,p.trx,p.amt,p.inst,p.typ,p.dt)\\\"> {{p.trx}}</a>\\r\\n                                </td>\\r\\n                                <ng-template #notpost>\\r\\n                                  {{p.inst}} <b>/</b> {{p.trx}}\\r\\n                                  <a *ngIf=\\\"p.typ === '161'\\\" (click)=\\\"postedReport(p.trx)\\\" class=\\\"iconBtn\\\"\\r\\n                                    data-toggle=\\\"tooltip\\\" title=\\\"Print\\\"><img src=\\\"assets/images/print-icon.png\\\"\\r\\n                                      alt=\\\"\\\"></a>\\r\\n                                </ng-template>\\r\\n                              </tr>\\r\\n                            </div>\\r\\n\\r\\n                          </table>\\r\\n                        </td>\\r\\n                        <td>{{re.sts}}</td>\\r\\n                        <td></td>\\r\\n\\r\\n                      </tr>\\r\\n\\r\\n\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\" class=\\\"example-element-row\\\"\\r\\n                [class.example-expanded-row]=\\\"expandedElement === element\\\" (click)=\\\"expandFunction(element)\\\">\\r\\n              </tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\r\\n\\r\\n\\r\\n            </table>\\r\\n            <mat-paginator [length]=\\\"datalength\\\" [pageSizeOptions]=\\\"[15]\\\"></mat-paginator>\\r\\n          </div>\\r\\n          <!-- \\r\\n              \\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <table class=\\\"table record\\\" id=\\\"myTable\\\" style=\\\"font-size:11px\\\">\\r\\n                <thead class=\\\"thead-light thead-blue\\\">\\r\\n                  <tr>\\r\\n                    <th width=\\\"15%\\\" style=\\\"text-align:center\\\">Client</th>\\r\\n                    <th>Loan Id</th>\\r\\n                    <th>Total Due </th>\\r\\n                    <th>Total Paid</th>\\r\\n                    <th>Status</th>\\r\\n                    <th>Action</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let recovery of pagedItems\\\">\\r\\n                  <tr class=\\\"tableRow\\\" >\\r\\n                    <td>\\r\\n                      <div class=\\\"filter\\\"> <a class=\\\"acc_trigger\\\" style=\\\"border:none; padding:0px; padding-right:10px; float:left\\\"></a></div>\\r\\n                      <a class=\\\"userImg\\\"><img src=\\\"assets/images/client2.png\\\" alt=\\\"\\\"><span>{{recovery.frstNm}}\\r\\n                          {{recovery.lastNm}}<br><sup>{{recovery.oldClntId}}</sup></span></a>\\r\\n                    </td>\\r\\n                    <td>{{recovery.loanId}}</td>\\r\\n                    <td></td>\\r\\n                    <td></td>\\r\\n                    <td>{{recovery.recoverySub[0].refCd}}</td>\\r\\n                    <td><a href=\\\"#\\\" data-toggle=\\\"modal\\\" (click)=\\\"openApplyPayment(recovery,0)\\\" class=\\\"iconBtn\\\"><img src=\\\"assets/images/rscheck.png\\\" alt=\\\"\\\"></a></td>  \\r\\n                  </tr>\\r\\n                 \\r\\n                  <tr class=\\\" collapse acc_container collapseLogic\\\">\\r\\n                    <table >\\r\\n                    \\r\\n                        <tr>\\r\\n                          <th>inst.#</th>\\r\\n                          <th>Total Due </th>\\r\\n                          <th>Total Due </th>\\r\\n                          <th>Total Due </th>\\r\\n                          <th>Due Date</th>\\r\\n                          <th>Paid Amt.</th>\\r\\n                          <th>Paid Date</th>\\r\\n                          <th>Institution</th>\\r\\n                          <th>Instr.#</th>\\r\\n                          <th>Status</th>\\r\\n                          \\r\\n                        </tr>\\r\\n               \\r\\n                        <tr *ngFor=\\\"let re of recovery.recoverySub | slice:1; let i = index\\\">\\r\\n                          <td>{{re.instNum}}</td>\\r\\n                          <td>{{re.ppalAmtDue}}</td>\\r\\n                          <td>{{re.totChrgDue}}</td>\\r\\n                          <td>{{re.totalDueAmount}}</td>\\r\\n                          <td>{{re.dueDt | date :'dd-MM-yyyy'}}</td>\\r\\n                          <td>{{re.pymtAmt}}</td>\\r\\n                          <td>{{re.pymtDt | date :'dd-MM-yyyy'}}</td>\\r\\n                          <td>{{re.rcvryTyp}}</td>\\r\\n                          <td>{{re.instr}}</td>\\r\\n                          <td>{{re.refCd}}</td>\\r\\n                          \\r\\n                        </tr>\\r\\n                  \\r\\n                    \\r\\n                        </table>\\r\\n                  </tr>\\r\\n  \\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            -->\\r\\n          <!-- <nav aria-label=\\\"Page navigation \\\">\\r\\n              <ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\r\\n                <li class=\\\"page-item disabled\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </nav> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<div class=\\\"modal fade\\\" id=\\\"ApplyPayment\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog mymodal big\\\">\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Apply Payment</h5>\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"applyPayment\\\" (ngSubmit)=\\\"onApplyPaymentSubmit()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"clientId\\\" />\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Client ID:\\\" formControlName=\\\"clntId\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.clntId.errors?.required\\\">\\r\\n                  Client Id <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Client Name:\\\" formControlName=\\\"clientNm\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.clientNm.errors?.required\\\">\\r\\n                  Client Name <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Product:\\\" formControlName=\\\"prd\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.prd.errors?.required\\\">\\r\\n                  branch name is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Remaining Amount:\\\" formControlName=\\\"totaldue\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.totaldue.errors?.required\\\">\\r\\n                  branch name is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"cCol2 \\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Payment Mode:\\\" (selectionChange)=\\\"onRecoveryChange()\\\"\\r\\n                  formControlName=\\\"rcvryTypsSeq\\\" name=\\\"rcvryTypsSeq\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                  <mat-option *ngFor=\\\"let edu of tempInstituteArray\\\" [value]=\\\"edu\\\">\\r\\n                    {{edu.typStr}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.rcvryTypsSeq.errors?.required\\\">\\r\\n                  Payment Mode is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\" *ngIf=\\\"!isCash\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Instrument Number:\\\" formControlName=\\\"instr\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.instr.errors?.required\\\">\\r\\n                  instrument number is <strong>required</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.instr.errors?.maxlength\\\">\\r\\n                  instrument number length should be <strong>20 characters</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.instr.errors?.minlength\\\">\\r\\n                  instrument number length should be <strong>20 characters</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.instr.errors?.pattern\\\">\\r\\n                  only number are <strong>allowed</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\" *ngIf=\\\"!isCash\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput required name=\\\"pymtDt\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" id=\\\"pymtDt\\\"\\r\\n                  formControlName=\\\"pymtDt\\\" disabled readonly placeholder=\\\"Slip Date:\\\" [matDatepicker]=\\\"picker1\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.pymtDt.errors?.required\\\">\\r\\n                  Slip Date is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Payment Amount:\\\" pattern=\\\"^-?[\\\\d]+(?:e-?\\\\d+)?$\\\"\\r\\n                  formControlName=\\\"pymtAmt\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.pymtAmt.errors?.required\\\">\\r\\n                  Payment Amount is <strong>required</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.pymtAmt.errors?.paymtamterror\\\">\\r\\n                  Payment Amount is <strong>Greater then Due Amount</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.pymtAmt.errors?.pattern\\\">\\r\\n                  Payment Amount is <strong>Invalid</strong>\\r\\n                </mat-error>\\r\\n\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"cCol2\\\">\\r\\n\\r\\n              <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"post\\\">Post</mat-checkbox>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"onApplyPaymentSubmit()\\\" class=\\\"btn btn-primary btn-min\\\"\\r\\n            [disabled]=\\\"!applyPayment.valid || disbFlg\\\">Ok</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"AdjustPayment\\\" role=\\\"dialog\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\r\\n  <div class=\\\"modal-dialog mymodal bigger\\\">\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Adjust Payment</h5>\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"adjustPayment\\\" (ngSubmit)=\\\"onAdjustPaymentSubmit()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"trxId\\\" />\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Client Id:\\\" formControlName=\\\"clntId\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fadjustPayment.clntId.errors?.required\\\">\\r\\n                  Client Id <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Client Name:\\\" formControlName=\\\"clientNm\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fadjustPayment.clientNm.errors?.required\\\">\\r\\n                  Client Name <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Product:\\\" formControlName=\\\"prd\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fApplyPayment.totaldue.errors?.required\\\">\\r\\n                  branch name is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Remaining Amount:\\\" formControlName=\\\"totaldue\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fadjustPayment.totaldue.errors?.required\\\">\\r\\n                  branch name is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol3\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Reversal Reason:\\\" formControlName=\\\"chngRsnKey\\\" name=\\\"chngRsnKey\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\" (selectionChange)=\\\"onSelectionChanged($event)\\\">\\r\\n                  <mat-option *ngFor=\\\"let edu of revaslReasnsList\\\" [value]=\\\"edu.codeKey\\\">\\r\\n                    {{edu.codeValue}}\\r\\n                  </mat-option>\\r\\n                  <!-- <mat-error *ngIf=\\\"fadjustPayment.chngRsnKey.errors?.required && fadjustPayment.chngRsnKey.touched\\\">\\r\\n                    Remarks are <strong>required</strong>\\r\\n                  </mat-error> -->\\r\\n                </mat-select>\\r\\n                <mat-hint class=\\\"text-danger font-14\\\"\\r\\n                  *ngIf=\\\"fadjustPayment.chngRsnKey.errors?.required && fadjustPayment.chngRsnKey.touched\\\">\\r\\n                  Reversal Reason is <strong>required</strong>\\r\\n                </mat-hint>\\r\\n\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Remarks:\\\" formControlName=\\\"chngRsnCmnt\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fadjustPayment.chngRsnCmnt.errors?.required && fadjustPayment.chngRsnCmnt.touched\\\">\\r\\n                  Remarks are <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Payment Amount:\\\" pattern=\\\"^-?[\\\\d.]+(?:e-?\\\\d+)?$\\\"\\r\\n                  formControlName=\\\"pymtAmt\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"fadjustPayment.pymtAmt.errors?.required\\\">\\r\\n                  Payment Amount is <strong>required</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fadjustPayment.pymtAmt.errors?.paymtamterror\\\">\\r\\n                  Payment Amount is <strong>Greater then Due Amount</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fadjustPayment.pymtAmt.errors?.pattern\\\">\\r\\n                  Payment Amount is <strong>Invalid</strong>\\r\\n                </mat-error>\\r\\n\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button appNoDblClick type=\\\"button\\\" (click)=\\\"onAdjustPaymentSubmit()\\\"\\r\\n            [disabled]=\\\"!adjustPayment.valid || disbFlg\\\" class=\\\"btn btn-primary btn-min\\\">Ok</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"chargesdetails\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog mymodal\\\">\\r\\n\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Charges Detail</h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th><b>Charge Type</b></th>\\r\\n                <th><b>Amount</b></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let code of chargesDetails\\\">\\r\\n                <td>{{code.chrgTyp}}/-</td>\\r\\n                <td>{{code.amt}}/-</td>\\r\\n              </tr>\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer smmodal-footer text-center\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Ok</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"disgardApp\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog mymodal\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Defered Application</h5>\\r\\n      </div>\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"disgardForm\\\" (ngSubmit)=\\\"onSubmitDisgardApp()\\\">\\r\\n        <input type=\\\"hidden\\\" formControlName=\\\"loanAppSeq\\\" />\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol6\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"cmnt\\\" placeholder=\\\"Remarks:\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Ok</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"jvHistory\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog mymodal\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Revocery jv History</h5>\\r\\n      </div>\\r\\n      <table>\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n          <tr>\\r\\n            <th>JV ID</th>\\r\\n            <th>JV Date</th>\\r\\n            <th>JV Type</th>\\r\\n            <th>JV Description</th>\\r\\n            <th>Credit</th>\\r\\n            <th>Debit</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let jv of history\\\">\\r\\n            <td>{{jv.hdrId}}</td>\\r\\n            <td>{{jv.jvDt}}</td>\\r\\n            <td>{{jv.Desc}}</td>\\r\\n            <td>{{jv.accDesc}}</td>\\r\\n            <td>{{jv.debit}}</td>\\r\\n            <td>{{jv.credit}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"exxcess_recovery\\\" role=\\\"dialog\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\r\\n  <div class=\\\"modal-dialog mymodal big\\\">\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Add Excess Revocery</h5>\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"excessPayment\\\" (ngSubmit)=\\\"onExcessRecoverSubmitt()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"clientId\\\" />\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Client ID:\\\" formControlName=\\\"clntId\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"ef.clntId.errors?.required\\\">\\r\\n                  Client Id <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Client Name:\\\" formControlName=\\\"clientNm\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"ef.clientNm.errors?.required\\\">\\r\\n                  Client Name <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Product:\\\" formControlName=\\\"prd\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"ef.prd.errors?.required\\\">\\r\\n                  branch name is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Remaining Amount:\\\" formControlName=\\\"totaldue\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"ef.totaldue.errors?.required\\\">\\r\\n                  branch name is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"cCol2 \\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Payment Mode:\\\" (selectionChange)=\\\"onPaymentModeChange()\\\"\\r\\n                  formControlName=\\\"rcvryTypsSeq\\\" name=\\\"rcvryTypsSeq\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                  <mat-option *ngFor=\\\"let edu of tempInstituteArray\\\" [value]=\\\"edu\\\">\\r\\n                    {{edu.typStr}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"ef.rcvryTypsSeq.errors?.required\\\">\\r\\n                  Payment Mode is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\" *ngIf=\\\"!isCash\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Instrument Number:\\\" formControlName=\\\"instr\\\"\\r\\n                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"ef.instr.errors?.required\\\">\\r\\n                  instrument number is <strong>required</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"ef.instr.errors?.maxlength\\\">\\r\\n                  instrument number length should be <strong>20 characters</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"ef.instr.errors?.minlength\\\">\\r\\n                  instrument number length should be <strong>20 characters</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"ef.instr.errors?.pattern\\\">\\r\\n                  only number are <strong>allowed</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\" *ngIf=\\\"!isCash\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput required name=\\\"pymtDt\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" id=\\\"pymtDt\\\"\\r\\n                  formControlName=\\\"pymtDt\\\" disabled readonly placeholder=\\\"Slip Date:\\\" [matDatepicker]=\\\"picker1\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                <mat-error *ngIf=\\\"ef.pymtDt.errors?.required\\\">\\r\\n                  Slip Date is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"cCol2\\\">\\r\\n              <mat-form-field>\\r\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Payment Amount:\\\" pattern=\\\"^-?[\\\\d]+(?:e-?\\\\d+)?$\\\"\\r\\n                  formControlName=\\\"pymtAmt\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-error *ngIf=\\\"ef.pymtAmt.errors?.required\\\">\\r\\n                  Payment Amount is <strong>required</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"ef.pymtAmt.errors?.paymtamterror\\\">\\r\\n                  Payment Amount is <strong>Greater then Due Amount</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"ef.pymtAmt.errors?.pattern\\\">\\r\\n                  Payment Amount is <strong>Invalid</strong>\\r\\n                </mat-error>\\r\\n\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"cCol2\\\">\\r\\n\\r\\n              <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"post\\\">Post</mat-checkbox>\\r\\n\\r\\n\\r\\n            </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"onExcessRecoverSubmitt()\\\" class=\\\"btn btn-primary btn-min\\\"\\r\\n            [disabled]=\\\"!excessPayment.valid || excessDisable\\\">Ok</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <ngx-spinner\\r\\n    bdColor = \\\"rgba(51, 51, 51, 0.8)\\\"\\r\\n    size = \\\"medium\\\"\\r\\n    color = \\\"#ffffff\\\"\\r\\n    type = \\\"ball-newton-cradle\\\"></ngx-spinner> -->\\r\\n<!-- <script>\\r\\n    $(document).ready(function () {\\r\\n      $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\r\\n    });\\r\\n  </script>\\r\\n  <script type=\\\"text/javascript\\\">\\r\\n    $(document).ready(function () {\\r\\n      $('.acc_trigger').toggleClass('inactive-header');\\r\\n  \\r\\n      $('.acc_trigger:first').addClass('active-header').next().show();\\r\\n      $('.acc_trigger').click(function () {\\r\\n        if ($(this).next().is(':hidden')) {\\r\\n          $('.active-header').toggleClass('active-header').toggleClass('inactive-header').next().slideToggle().toggleClass('open-content');\\r\\n          $(this).toggleClass('active-header').toggleClass('inactive-header');\\r\\n          $(this).next().slideToggle().toggleClass('open-content');\\r\\n        }\\r\\n  \\r\\n        else {\\r\\n          $(this).toggleClass('active-header').toggleClass('inactive-header');\\r\\n          $(this).next().slideToggle().toggleClass('open-content');\\r\\n        }\\r\\n      });\\r\\n  \\r\\n  \\r\\n      $('.tableRow').click(function () {\\r\\n        if ($(this).next().is(':hidden')) {\\r\\n          $('.active-header1').toggleClass('active-header1').toggleClass('inactive-header1').parents(\\\"tr:first\\\").next().slideToggle().toggleClass('open-content');\\r\\n          $(this).children(\\\":first\\\").children(\\\":first\\\").children(\\\":first\\\").toggleClass('active-header1').toggleClass('inactive-header1');\\r\\n          $(this).next().slideToggle().toggleClass('open-content');\\r\\n        }\\r\\n  \\r\\n        else {\\r\\n          $(this).children(\\\":first\\\").children(\\\":first\\\").children(\\\":first\\\").toggleClass('active-header1').toggleClass('inactive-header1');\\r\\n          $(this).next().slideToggle().toggleClass('open-content');\\r\\n        }\\r\\n      });\\r\\n      return false;\\r\\n    });\\r\\n  </script>\\r\\n  <script>\\r\\n    $(\\\".searchshow\\\").click(function () {\\r\\n      $(\\\".mysearchbox\\\").addClass(\\\"intro\\\");\\r\\n    });\\r\\n    $(\\\".remove-search\\\").click(function () {\\r\\n      $(\\\".mysearchbox\\\").removeClass(\\\"intro\\\");\\r\\n    });\\r\\n  \\r\\n  \\r\\n    function myFunction() {\\r\\n      var input, filter, table, tr, td, i;\\r\\n      input = document.getElementById(\\\"myInput\\\");\\r\\n      filter = input.value.toUpperCase();\\r\\n      table = document.getElementById(\\\"myTable\\\");\\r\\n      tr = table.getElementsByTagName(\\\"tr\\\");\\r\\n      for (i = 0; i < tr.length; i++) {\\r\\n        td = tr[i].getElementsByTagName(\\\"td\\\")[0];\\r\\n        if (td) {\\r\\n          if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\\r\\n            tr[i].style.display = \\\"\\\";\\r\\n          } else {\\r\\n            tr[i].style.display = \\\"none\\\";\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  </script>\\r\\n  <script>\\r\\n  \\r\\n    $('.listmenu ul li:has(ul.sub-menu)').prepend('<span class=\\\"nav-click\\\" />');\\r\\n    $(function ($) {\\r\\n      $('.listmenu .nav-click').click(function () {\\r\\n        var parent = $(this).parent();\\r\\n        if (parent.hasClass('toparrow')) {\\r\\n          $(\\\".sub-menu:first\\\", parent).hide(300);\\r\\n          parent.removeClass('toparrow');\\r\\n        } else {\\r\\n          $(\\\".sub-menu:first\\\", parent).show(300);\\r\\n          parent.addClass('toparrow');\\r\\n        }\\r\\n      });\\r\\n    });\\r\\n  </script> -->\"","import { Component, Inject, LOCALE_ID, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonService } from '../../shared/services/common.service';\r\nimport { RecoveryService } from '../../shared/services/recovery.service';\r\nimport { MyErrorStateMatcher } from '../../shared/helpers/MyErrorStateMatcher.helper';\r\nimport { ApplyPayment, Recovery, AdjustPayment } from '../../shared/models/recovery.model';\r\nimport { formatDate } from '@angular/common';\r\nimport { PRODUCTS2 } from '../../shared/mocks/mock_common_codes';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { RecoverySub } from '../../shared/models/recovery.subModel';\r\nimport { Observable, of, merge } from 'rxjs';\r\nimport * as REF_CD_GRP_KEYS from '../../shared/models/REF_CODE_GRP_KEYS.mocks';\r\nimport { MatTableDataSource, MatSort, Sort, MatPaginator, PageEvent } from '@angular/material';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { SplitPipe } from './split.pipe';\r\nimport { MergePipe } from './mere.pipe';\r\nimport { map, tap, concatAll } from 'rxjs/operators';\r\nimport { DisbursementService } from 'src/app/shared/services/disbursement.service';\r\nimport { DatePipe } from '@angular/common'\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\n// import {default as _rollupMoment} from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { CommonCode } from 'src/app/shared/models/commonCode.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-recovery',\r\n  templateUrl: './recovery.component.html',\r\n  styleUrls: ['./recovery.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class RecoveryComponent implements OnInit {\r\n  pageEvent: PageEvent;\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  role: any = this.auth.role;\r\n  columnsToDisplay: string[] = ['frstNm', 'clntSeq', 'prd', 'bdo', 'totalDue', 'totalRecv', 'totalremain', 'nextDue', 'status'];\r\n  expandedElement: Recovery;\r\n  applyPayment: FormGroup;\r\n  excessPayment: FormGroup;\r\n  adjustPayment: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  submitted = false;\r\n  test = 1233;\r\n  filters: any[] = [];\r\n\r\n  allItems: Recovery[] = [];\r\n  beforefiltereItems: Recovery[] = [];\r\n  // pager object\r\n  pager: any = {};\r\n  // paged items\r\n  pagedItems: any = [];\r\n  organization: any;\r\n  institution: any;\r\n  now: any;\r\n  filterEasyPaisa: boolean;\r\n  filterMobiCash: boolean;\r\n  filterNadra: boolean;\r\n  filterPosted: boolean;\r\n  filterOverdue: boolean;\r\n  dueDateTo: string;\r\n  dueDateFrom: string;\r\n  paymentDateFrom: string;\r\n  paymentDateTo: string;\r\n  oldClientId: string;\r\n  recovery: Recovery;\r\n  tempInstituteArray: any[] = [];\r\n  dataSource: any;\r\n  chargesDetails: any[] = [];\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  scheduleForm: FormGroup;\r\n  isCash: boolean = false;\r\n  disgardForm: FormGroup;\r\n  history: any[] = [];\r\n  last: number;\r\n  branchForm: FormGroup;\r\n  onBranchSelection: boolean = false;\r\n  isCount = true;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  // applyFilter(filterValue: string) {\r\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  // }\r\n  searchVal = \"\";\r\n  applyFilter(filterValue: string) {\r\n    // console.log(filterValue)\r\n    // console.log(filterValue.trim().toLowerCase().length)\r\n    this.filterValue = filterValue;\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      // this.dataSource.sort = this.sort;\r\n      this.datalength = this.countBeforeFilter;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      // this.lastPageIndex = 0;\r\n      return;\r\n    }\r\n    this.getFilteredData(filterValue.trim().toLowerCase());\r\n  }\r\n  searchValue() {\r\n    this.filterValue = this.searchVal.trim();\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      // this.dataSource.sort = this.sort;\r\n      this.datalength = this.countBeforeFilter;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      console.log(this.dataSource)\r\n      return;\r\n    }\r\n  }\r\n\r\n\r\n  filterValue: any = \"\";\r\n  constructor(private router: Router,\r\n    private recoveryService: RecoveryService,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private commonService: CommonService, private disbursementService: DisbursementService, public datepipe: DatePipe,\r\n    private toaster: ToastrService) {\r\n    this.minDate = new Date();\r\n    this.maxDate = new Date();\r\n    // this.minDate.setDate(this.maxDate.getDate() - 30);\r\n    this.now = new Date();\r\n    let month: any;\r\n    if ((this.now.getMonth() + 1) < 10) {\r\n      month = '0' + (this.now.getMonth() + 1);\r\n    } else {\r\n      month = '' + (this.now.getMonth() + 1);\r\n    }\r\n    let day: any;\r\n    if ((this.now.getDate() + 1) < 10) {\r\n      day = '0' + (this.now.getDate());\r\n    } else {\r\n      day = '' + (this.now.getDate());\r\n    }\r\n    const year: any = this.now.getFullYear();\r\n    const currentDate: any = year + '-' + month + '-' + day;\r\n\r\n    this.scheduleForm = this.fb.group({\r\n      frstInstDt: [new Date(), Validators.required],\r\n    });\r\n\r\n    this.disgardForm = this.fb.group({\r\n      loanAppSeq: ['', Validators.required],\r\n      cmnt: ['', Validators.required],\r\n    });\r\n    //\r\n    // $(document).ready(function () {\r\n    //   $('.acc_trigger').toggleClass('inactive-header');\r\n    //   $('.acc_trigger').click(function () {\r\n    //     if ($(this).next().is(':hidden')) {\r\n    //       $('.active-header').toggleClass('active-header').toggleClass('inactive-header').next().slideToggle().toggleClass('open-content');\r\n    //       $(this).toggleClass('active-header').toggleClass('inactive-header');\r\n    //       $(this).next().slideToggle().toggleClass('open-content');\r\n    //     } else {\r\n    //       $(this).toggleClass('active-header').toggleClass('inactive-header');\r\n    //       $(this).next().slideToggle().toggleClass('open-content');\r\n    //     }\r\n    //   });\r\n    //\r\n    //   return false;\r\n    // });\r\n    // this.loadScript();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.applyPayment = this.fb.group({\r\n      branchNm: [{ value: '', disabled: true }, Validators.required],\r\n      prd: [{ value: '', disabled: true }, Validators.required],\r\n      clientNm: [{ value: '', disabled: true }, Validators.required],\r\n      clntId: [{ value: '', disabled: true }, Validators.required],\r\n      installmentAmountDue: [{ value: '', disabled: true }, Validators.required],\r\n      rcvryTypsSeq: ['', Validators.required],\r\n      instr: ['', Validators.compose([Validators.required, Validators.maxLength(20), Validators.pattern('^[0-9]+$')])],\r\n      pymtDt: [new Date(), Validators.required],\r\n      pymtAmt: ['', Validators.required, this.validate.bind(this)],\r\n      clientId: [''],\r\n      totaldue: [{ value: '', disabled: true }],\r\n      post: [''],\r\n    });\r\n    this.excessPayment = this.fb.group({\r\n      branchNm: [{ value: '', disabled: true }, Validators.required],\r\n      prd: [{ value: '', disabled: true }, Validators.required],\r\n      clientNm: [{ value: '', disabled: true }, Validators.required],\r\n      clntId: [{ value: '', disabled: true }, Validators.required],\r\n      installmentAmountDue: [{ value: '', disabled: true }, Validators.required],\r\n      rcvryTypsSeq: ['', Validators.required],\r\n      instr: ['', Validators.compose([Validators.required, Validators.maxLength(20), Validators.pattern('^[0-9]+$')])],\r\n      pymtDt: [new Date(), Validators.required],\r\n      pymtAmt: ['', Validators.required],\r\n      clientId: [''],\r\n      totaldue: [{ value: '', disabled: true }],\r\n      post: [''],\r\n    });\r\n\r\n    this.adjustPayment = this.fb.group({\r\n      prd: [{ value: '', disabled: true }],\r\n      clientNm: [{ value: '', disabled: true }],\r\n      clntId: [{ value: '', disabled: true }],\r\n      rcvryTypsSeq: new FormControl({ value: \"\", disabled: true }),\r\n      instr: new FormControl({ value: \"\", disabled: true }),\r\n      adjPymtDt: new FormControl({ value: \"\", disabled: true }),\r\n      pymtAmt: new FormControl({ value: \"\", disabled: true }),//, this.validate.bind(this)),\r\n      totaldue: [{ value: '', disabled: true }],\r\n      trxId: [''],\r\n      rcvryReverRea: [''],\r\n      post: [''],\r\n      chngRsnKey: new FormControl('', Validators.required),\r\n      chngRsnCmnt: new FormControl('', Validators.required),\r\n    });\r\n    this.loadLovs();\r\n\r\n    this.branchForm = this.fb.group({\r\n      branch: null,\r\n    });\r\n\r\n    // this.branchForm = this.fb.group({\r\n    //   branch: [this.auth.emp_branch],\r\n    // });\r\n\r\n    // this.dataSource.sort = this.sort;\r\n\r\n    // this.recoveries$ = this.allItems.includes('MobiCash');\r\n  }\r\n  onSelectBranch() {\r\n    console.log(this.branchForm.controls['branch'].value);\r\n    this.getAllItems();\r\n  }\r\n  brnchs: any = [];\r\n  ngAfterViewInit() {\r\n    if (this.auth.role != 'bm' && this.auth.role != 'bdo') {\r\n      this.toaster.info('Please Select Branch', 'Information')\r\n      this.commonService.getBrnchsForUsr().subscribe((res) => {\r\n        this.brnchs = res;\r\n      })\r\n    } else {\r\n      this.getAllItems();\r\n    }\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => this.loadRecoveryPage())\r\n      )\r\n      .subscribe();\r\n  }\r\n  lastPageIndex = 0; dataBeforeFilter; countBeforeFilter; lastPageIndexBeforeFilter;\r\n  loadRecoveryPage() {\r\n    this.isCount = false;\r\n    if (this.paginator.pageIndex < this.lastPageIndex)\r\n      return\r\n    if (this.dataSource.paginator.length == this.dataSource.data.length)\r\n      return;\r\n    if (((this.paginator.pageIndex + 1) * this.paginator.pageSize) - this.dataSource.data.length > 0) {\r\n      setTimeout(() => { this.spinner.show() }, 5);\r\n      this.recoveryService.getPagedRecoveries(this.paginator.pageIndex + 1, this.paginator.pageSize, this.filterValue, this.branchForm.controls['branch'].value, this.isCount).subscribe((data) => {\r\n        this.allItems = data.data;\r\n\r\n        if (this.allItems.length <= 0 && this.branchForm.controls['branch'].value != 0) {\r\n          this.toaster.info('No Data Found Against This Branch', 'Information')\r\n        };\r\n\r\n\r\n        this.dataSource.data = this.dataSource.data.concat(this.allItems);\r\n        this.lastPageIndex = this.lastPageIndex + 1;\r\n        data.count = this.datalength;\r\n        this.datalength = 0;\r\n        setTimeout(() => { this.datalength = data.count; }, 10);\r\n\r\n        this.spinner.hide();\r\n\r\n        if (this.filterValue.length == 0) {\r\n          this.dataBeforeFilter = this.dataSource.data;\r\n          this.countBeforeFilter = data.count;\r\n          this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n        }\r\n        // this.setPage(1);\r\n      }, error => {\r\n        this.spinner.hide();\r\n        console.log(error)\r\n      });\r\n    }\r\n  }\r\n  getFilteredData(filterValue) {\r\n    this.paginator.pageIndex = 0;\r\n    this.isCount = true;\r\n    setTimeout(() => { this.spinner.show() }, 5);\r\n    this.recoveryService.getPagedRecoveries(this.paginator.pageIndex + 1, this.paginator.pageSize, filterValue, this.branchForm.controls['branch'].value, this.isCount).subscribe((data) => {\r\n      this.allItems = data.data;\r\n      this.spinner.hide();\r\n      if (this.allItems.length <= 0 && this.branchForm.controls['branch'].value != 0) {\r\n        this.toaster.info('No Data Found Against This Search', 'Information')\r\n      };\r\n\r\n      this.dataSource = new MatTableDataSource(data.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.datalength = 0;\r\n      setTimeout(() => { this.datalength = data.count; }, 10);\r\n\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      console.log('err All Loans Service');\r\n      console.log('err', error);\r\n    });\r\n  }\r\n  validate(control: AbstractControl) {\r\n    let pymtAmt = control;\r\n    let totaldue = control.parent.get('totaldue') as FormControl;\r\n    return of(pymtAmt.value > totaldue.value).pipe(\r\n      map(result => result ? { paymtamterror: true } : null)\r\n    );\r\n\r\n  }\r\n\r\n  // sortData(sort: Sort) {\r\n  //   const data = this.dataSource.slice();\r\n  //   if (!sort.active || sort.direction === '') {\r\n  //     this.dataSource = data;\r\n  //     return;\r\n  //   }\r\n\r\n  //   this.dataSource = data.sort((a, b) => {\r\n  //     const isAsc = sort.direction === 'asc';\r\n  //     switch (sort.active) {\r\n  //       case 'name': return compare(a.name, b.name, isAsc);\r\n  //       case 'calories': return compare(a.calories, b.calories, isAsc);\r\n  //       case 'fat': return compare(a.fat, b.fat, isAsc);\r\n  //       case 'carbs': return compare(a.carbs, b.carbs, isAsc);\r\n  //       case 'protein': return compare(a.protein, b.protein, isAsc);\r\n  //       default: return 0;\r\n  //     }\r\n  //   });\r\n  //   function compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  //     return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n  onRecoveryChange() {\r\n    const pymtDt = this.applyPayment.get('pymtDt');\r\n    const instr = this.applyPayment.get('instr');\r\n    if (this.applyPayment.get('rcvryTypsSeq').value.typId === '0001') {\r\n      this.isCash = true;\r\n      pymtDt.clearValidators();\r\n      instr.clearValidators();\r\n    } else {\r\n      this.isCash = false;\r\n      instr.setValidators(Validators.compose([Validators.required, Validators.maxLength(20), Validators.pattern('^[0-9]+$')]));\r\n      pymtDt.setValidators(Validators.required);\r\n    }\r\n    pymtDt.updateValueAndValidity();\r\n    instr.updateValueAndValidity();\r\n  }\r\n\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.commonService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n    // this.dataSource = this.pagedItems;\r\n\r\n\r\n  }\r\n  get fApplyPayment() {\r\n    return this.applyPayment.controls;\r\n  }\r\n  get fadjustPayment() {\r\n    return this.adjustPayment.controls;\r\n  }\r\n  get ef() {\r\n    return this.excessPayment.controls;\r\n  }\r\n\r\n\r\n  getAllItems() {\r\n    this.isCount = true;\r\n    this.allItems = [];\r\n    this.dataSource = new MatTableDataSource(this.allItems);\r\n    this.paginator.pageIndex = 0;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.filterValue = '';\r\n    this.searchVal = '';\r\n    this.lastPageIndex = 0;\r\n    if (this.branchForm.controls['branch'].value == null || this.branchForm.controls['branch'].value == 0) {\r\n      this.onBranchSelection = false;\r\n      this.dataSource = null;\r\n      this.datalength = 0;\r\n      if (this.auth.role != 'bm' && this.auth.role != 'bdo')\r\n        return\r\n    }\r\n    setTimeout(() => { this.spinner.show() }, 5);\r\n    this.recoveryService.getPagedRecoveries(this.paginator.pageIndex + 1, this.paginator.pageSize, this.filterValue, this.branchForm.controls['branch'].value, this.isCount).subscribe((data) => {\r\n      this.allItems = data.data;\r\n\r\n      this.spinner.hide();\r\n\r\n      if (this.allItems.length <= 0 && this.branchForm.controls['branch'].value != 0) {\r\n        this.toaster.info('No Data Found Against This Branch', 'Information')\r\n      };\r\n      /*\r\n      let clntSeq;\r\n      data.forEach((r: Recovery) => {\r\n        r.recoverySub = [];\r\n        if (clntSeq !== r.clntSeq) {\r\n          data.forEach(r2 => {\r\n            if (r2.clntSeq === r.clntSeq) {\r\n              r.recoverySub.push(new RecoverySub(r2));\r\n            }\r\n          });\r\n          this.allItems.push(r);\r\n        }\r\n        clntSeq = r.clntSeq;\r\n      });\r\n\r\n      this.allItems.forEach((r: Recovery) => {\r\n        let totaldue: number = 0;\r\n        let totalpaid: number = 0;\r\n        let v = 0;\r\n        r.recoverySub.forEach((s: RecoverySub) => {\r\n          totaldue = +totaldue + +s.totalDueAmount;\r\n          let toArray = s.pymtAmt === null ? null : s.pymtAmt.split(\",\");\r\n\r\n          toArray.forEach(p => {\r\n            totalpaid = +totalpaid + +p;\r\n          });\r\n        });\r\n\r\n        r.totalpaid = totalpaid;\r\n        r.totaldue = totaldue;\r\n      });*/\r\n\r\n      this.dataSource = new MatTableDataSource(this.allItems);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      // this.dataSource.paginator.p\r\n      this.datalength = data.count;\r\n\r\n      this.dataBeforeFilter = this.dataSource.data;\r\n      this.countBeforeFilter = data.count;\r\n      this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error);\r\n    });\r\n  }\r\n  datalength = 0;\r\n\r\n  removeDuplicates(myArr, prop) {\r\n    return myArr.filter((obj, pos, arr) => {\r\n      return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;\r\n    });\r\n  }\r\n\r\n  openApplyPayment(recovery: Recovery) {\r\n\r\n    this.recoveryService.getClntRecoveryTypes(recovery.clntSeq).subscribe((data => {\r\n      this.tempInstituteArray = data;\r\n    }));\r\n\r\n    this.recovery = recovery;\r\n    this.applyPayment.reset();\r\n\r\n    let v = 0;\r\n    let inst: string = \"\";\r\n    let cur_amt = 0;\r\n\r\n    recovery.recoverySub.forEach((s: RecoverySub) => {\r\n      let totalpaid: number = 0;\r\n      let toArray = s.pymtAmt === null ? null : s.pymtAmt.split(\",\");\r\n      toArray.forEach(p => {\r\n        totalpaid = +totalpaid + +p;\r\n      });\r\n\r\n      console.log(totalpaid)\r\n      if (s.dueDt == inst && v == 1) {\r\n        cur_amt = cur_amt + (s.ppalAmtDue + s.totChrgDue) - totalpaid;\r\n        v = 2;\r\n      } else if ((s.ppalAmtDue + s.totChrgDue) > totalpaid && v == 0) {\r\n        cur_amt = cur_amt + (s.ppalAmtDue + s.totChrgDue) - totalpaid;\r\n        console.log(cur_amt)\r\n        v = 1;\r\n        inst = s.dueDt;\r\n      }\r\n    });\r\n\r\n    this.applyPayment.patchValue({\r\n      prd: recovery.prd,\r\n      clientNm: recovery.frstNm + ' ' + recovery.lastNm,\r\n      clientId: recovery.clntSeq,\r\n      clntId: recovery.clntSeq,\r\n      totaldue: recovery.totalDue - recovery.totalRecv,\r\n      pymtAmt: cur_amt,\r\n      pymtDt: new Date()\r\n\r\n    });\r\n    (<any>$('#ApplyPayment')).modal('show');\r\n  }\r\n  revaslReasnsList: CommonCode[];\r\n  openAdjustPayment(recovery: Recovery, trx: number, amt: number, inst: string, type: number, dt: string) {\r\n\r\n    this.recoveryService.getClntRecoveryTypes(recovery.clntSeq).subscribe((data => {\r\n      this.tempInstituteArray = data;\r\n    }));\r\n\r\n    this.recovery = null;\r\n    this.recovery = recovery;\r\n    this.adjustPayment.reset();\r\n    (<any>$('#AdjustPayment')).modal('show');\r\n    // this.commonService.getValuesByRefCdGRp('0358').subscribe(d=>{\r\n    //   this.revaslReasnsList = d;\r\n    // }\r\n    // ); \r\n    this.commonService.getValues('0338').subscribe(d => {\r\n      this.revaslReasnsList = d;\r\n      console.log(this.revaslReasnsList)\r\n    }\r\n    );\r\n\r\n    this.adjustPayment.patchValue({\r\n      prd: recovery.prd,\r\n      clientNm: recovery.frstNm + ' ' + recovery.lastNm,\r\n      clntId: recovery.clntSeq,\r\n      totaldue: recovery.totalDue - recovery.totalRecv,\r\n      trxId: trx,\r\n      rcvryTypsSeq: +type,\r\n      instr: inst,\r\n      adjPymtDt: new Date(dt),// new Date(this.datepipe.transform(dt, \"MM/dd/yyyy\")),\r\n      pymtAmt: amt,\r\n      chngRsnKey: [],\r\n      chngRsnCmnt: [],\r\n    });\r\n  }\r\n  onAdjustPaymentSubmit() {\r\n    if (!this.adjustPayment.valid) {\r\n      this.toaster.error(\"Enter Missing Fields\", \"Error\")\r\n      // return;\r\n    } else {\r\n      const result: AdjustPayment = Object.assign({}, this.adjustPayment.value);\r\n      console.log(result);\r\n      (<any>$('#AdjustPayment')).modal('hide');\r\n      result.pymtAmt = '0';\r\n      this.recoveryService.adjustPayment(result).subscribe(d => {\r\n        this.toaster.success(\"Reverted Successfully\", \"Success\")\r\n        this.recovery.recoverySub = d;\r\n        let totalpaid: number = 0;\r\n        this.recovery.recoverySub.forEach((s: RecoverySub) => {\r\n          let toArray = s.pymtAmt === null ? null : s.pymtAmt.split(\",\");\r\n          toArray.forEach(p => {\r\n            totalpaid = +totalpaid + +p;\r\n          });\r\n\r\n        });\r\n        this.recovery.totalRecv = totalpaid;\r\n\r\n      }, (error) => {\r\n        if (error.status == 500) {\r\n          this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n        } else if (error) {\r\n          this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n        }\r\n      });\r\n    }\r\n  }\r\n  disbFlg = false;\r\n  onApplyPaymentSubmit() {\r\n    this.disbFlg = true;\r\n    const result: any = Object.assign({}, this.applyPayment.value);\r\n    let isCash: boolean = result.rcvryTypsSeq.typId === '0001';\r\n    result.pymtDt = this.commonService.formatDate(result.pymtDt);\r\n    result.rcvryTypsSeq = result.rcvryTypsSeq.typSeq;\r\n    this.recoveryService.applyPayment(result).subscribe(d => {\r\n      (<any>$('#ApplyPayment')).modal('hide');\r\n      this.recovery.recoverySub = d.recovery;\r\n      let totalpaid: number = 0;\r\n      let v: number = 0;\r\n      this.recovery.recoverySub.forEach((s: RecoverySub) => {\r\n        let toArray = s.pymtAmt === null ? null : s.pymtAmt.split(\",\");\r\n        let payed: number = 0;\r\n        toArray.forEach(p => {\r\n          totalpaid = +totalpaid + +p;\r\n          payed = +payed + +p;\r\n        });\r\n        if ((s.ppalAmtDue + s.totChrgDue) > totalpaid && v == 0) {\r\n          this.recovery.nextDue = s.dueDt;\r\n        }\r\n        this.disbFlg = false;\r\n\r\n      }, error => {\r\n        this.spinner.hide();\r\n        if (error.status == 500) {\r\n          this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n        } else if (error) {\r\n          this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n        }\r\n        (<any>$('#ApplyPayment')).modal('hide');\r\n        this.disbFlg = false;\r\n      });\r\n\r\n      this.recovery.totalRecv = totalpaid;\r\n      if (result.post && isCash) {\r\n        this.postedReport(d.trxSeq);\r\n      }\r\n      if (this.recovery.totalDue - totalpaid == 0) {\r\n        const index = this.allItems.findIndex(r => r.clntSeq === this.recovery.clntSeq)\r\n        this.allItems.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  loadLovs() {\r\n    // this.commonService.getValues('GENDER').subscribe((res) => {\r\n    //   this.gender = res;\r\n    // }, (error) => {\r\n    //   console.log('err', error);\r\n    // });\r\n    //\r\n    // this.commonService.getValues('INSTITUTION').subscribe((res) => {\r\n    //   this.institution = res;\r\n    // }, (error) => {\r\n    //   console.log('err', error);\r\n    // });\r\n\r\n    // this.commonService.getAllFilters().subscribe((res) => {\r\n\r\n    //   this.organization = res.organization;\r\n    //   // this.geography = res.geography;\r\n    // }, (error) => {\r\n    //   console.log('err', error);\r\n    // });\r\n  }\r\n  navClick(element) {\r\n    const parent = $(element).parent();\r\n    if (parent.hasClass('toparrow')) {\r\n      $('.sub-menu:first', parent).hide(300);\r\n      parent.removeClass('toparrow');\r\n    } else {\r\n      $('.sub-menu:first', parent).show(300);\r\n      parent.addClass('toparrow');\r\n    }\r\n  }\r\n  deleteFilterValue(value) {\r\n    this.filters.forEach((filter, index) => {\r\n      if (filter.value === value) {\r\n        this.filters.splice(index, 1);\r\n      }\r\n    });\r\n    this.setPage(0);\r\n  }\r\n  deleteFilter(filter: any) {\r\n    const index = this.filters.indexOf(filter, 0);\r\n    if (index > -1) {\r\n      this.filters.splice(index, 1);\r\n    }\r\n    // if (filter.key === 'Gender') {\r\n    //   this.genderSelected = '';\r\n    //   this.allItems = this.disbs;\r\n    //   this.setPage(0);\r\n    // }\r\n    // if (filter.type === 'geography') {\r\n    //   this.allItems = this.disbs;\r\n    //   this.setPage(0);\r\n    //   if (this.genderSelected !== '') {\r\n    //     this.genderFilter();\r\n    //   }\r\n    // }\r\n  }\r\n  appendFilter(key, value) {\r\n    let found = false;\r\n    for (let i = 0; i < this.filters.length; i++) {\r\n      if (this.filters[i].type === key) {\r\n        found = true;\r\n        this.filters[i].key = key;\r\n        this.filters[i].value = value;\r\n      }\r\n    }\r\n    if (!found) {\r\n      this.filters.push({ key: key, value: value, type: key });\r\n    }\r\n  }\r\n\r\n  portfolioClick(port) {\r\n    this.appendFilter('Organization', port.portfolioName);\r\n  }\r\n\r\n  onFilterCheckChange(event) {\r\n    switch (event) {\r\n      case 'Easy Paisa':\r\n        this.filterEasyPaisa = !this.filterEasyPaisa;\r\n        if (this.filterEasyPaisa) {\r\n          this.filterAllItems(event, 'Institution');\r\n          this.appendFilter('Institution', event);\r\n        } else {\r\n          this.allItems = this.beforefiltereItems;\r\n          this.deleteFilterValue(event);\r\n        }\r\n        break;\r\n      case 'MobiCash':\r\n        this.filterMobiCash = !this.filterMobiCash;\r\n        if (this.filterMobiCash) {\r\n          this.filterAllItems(event, 'Institution');\r\n          this.appendFilter('Institution', event);\r\n        } else {\r\n          this.allItems = this.beforefiltereItems;\r\n          this.deleteFilterValue(event);\r\n        }\r\n        break;\r\n      case 'Nadra':\r\n        this.filterNadra = !this.filterNadra;\r\n        if (this.filterNadra) {\r\n          this.filterAllItems(event, 'Institution');\r\n          this.appendFilter('Institution', event);\r\n        } else {\r\n          this.allItems = this.beforefiltereItems;\r\n          this.deleteFilterValue(event);\r\n        }\r\n        break;\r\n      case 'Overdue':\r\n        this.filterOverdue = !this.filterOverdue;\r\n        if (this.filterOverdue) {\r\n          this.filterAllItems(event, 'Status');\r\n          this.appendFilter('Status', event);\r\n        } else {\r\n          this.allItems = this.beforefiltereItems;\r\n          this.deleteFilterValue(event);\r\n        }\r\n        break;\r\n      case 'Posted':\r\n        this.filterPosted = !this.filterPosted;\r\n        if (this.filterPosted) {\r\n          this.filterAllItems(event, 'Status');\r\n          this.appendFilter('Status', event);\r\n        } else {\r\n          this.allItems = this.beforefiltereItems;\r\n          this.deleteFilterValue(event);\r\n        }\r\n        break;\r\n      default:\r\n        this.getAllItems();\r\n        break;\r\n    }\r\n    if (!this.filterNadra && !this.filterEasyPaisa && !this.filterMobiCash && !this.filterPosted && !this.filterOverdue) {\r\n      this.getAllItems();\r\n    }\r\n  }\r\n  filterAllItems(event, filterName) {\r\n    //update\r\n    /*\r\n    this.beforefiltereItems = this.allItems;\r\n    if (filterName === 'Institution') {\r\n      this.allItems = this.allItems.filter(\r\n        r => r.recoverySub.find((rs => rs.rcvryTyp === event)));\r\n    } else if (filterName === 'Status') {\r\n      this.allItems = this.allItems.filter(\r\n        r => r.recoverySub.find((rs => rs.refCd === event))\r\n      );\r\n    } else if (filterName === 'clientOldId') {\r\n      // this.allItems = this.allItems.filter(r => r.paySchedDtlSeq === event);\r\n    }\r\n    // this.setPage(0);\r\n    this.dataSource = new MatTableDataSource(this.allItems);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    console.log(this.allItems);\r\n    */\r\n  }\r\n  onSearchOldClient(event) {\r\n    this.oldClientId = event;\r\n    this.filterAllItems(this.oldClientId, 'clientOldId');\r\n    this.appendFilter('Client Id', event);\r\n  }\r\n  onDateFilterChange(event, s) {\r\n\r\n    switch (s) {\r\n      case 'dueFrom':\r\n        this.dueDateFrom = this.commonService.formatDate(event);\r\n        console.log('dueFrom' + this.dueDateFrom);\r\n        break;\r\n      case 'dueTo':\r\n        this.dueDateTo = this.commonService.formatDate(event);\r\n        console.log('dueTo' + this.dueDateTo);\r\n        break;\r\n      case 'paymentFrom':\r\n        this.paymentDateFrom = this.commonService.formatDate(event);\r\n        console.log('paymentFrom' + this.paymentDateFrom);\r\n        break;\r\n      case 'paymentTo':\r\n        this.paymentDateTo = this.commonService.formatDate(event);\r\n        console.log('paymentTo' + this.paymentDateTo);\r\n        break;\r\n    }\r\n  }\r\n  onCharges(number) {\r\n    (<any>$('#chargesdetails')).modal('show');\r\n    this.disbursementService.getPaymenrScheduleDetail(number).subscribe(d => {\r\n      this.chargesDetails = d;\r\n      this.chargesDetails.forEach((as: any, index) => {\r\n        this.chargesDetails[index].chrgTyp = as.chargesTypesDTO.chrgTyp;\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  bulkPosting() {\r\n    this.recoveryService.bulkPosting().subscribe((data) => {\r\n\r\n    });\r\n  }\r\n  generateSchedule() {\r\n    (<any>$('#generatemodal')).modal('show');\r\n  }\r\n\r\n  disgardApp(recovery: Recovery) {\r\n    (<any>$('#disgardApp')).modal('show');\r\n    this.disgardForm = this.fb.group({\r\n      //update\r\n      // loanAppSeq: [recovery.loanId, Validators.required],\r\n      cmnt: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmitDisgardApp() {\r\n    (<any>$('#disgardApp')).modal('hide');\r\n    this.disgardForm.value.cmnt == null ? \" \" : this.disgardForm.value.cmnt;\r\n    this.recoveryService.deleteApplication(this.disgardForm.value).subscribe(() => {\r\n      //update \r\n      const index = 0//this.allItems.findIndex(r => r.loanId === this.disgardForm.value.loanAppSeq);\r\n      this.allItems.splice(index, 1);\r\n      // this.dataSource = this.allItems;\r\n      // this.setPage(0);\r\n      this.dataSource = new MatTableDataSource(this.allItems);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => console.log('There was an error: ', error));\r\n\r\n  }\r\n\r\n  postedReport(trx: string) {\r\n    this.recoveryService.getPostedReport(trx, 0).subscribe((response) => {\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    });\r\n  }\r\n\r\n  expandFunction(element: Recovery) {\r\n    if (this.expandedElement === element) {\r\n      this.expandedElement = null;\r\n    } else {\r\n      this.recoveryService.getSingleRecovery(element.clntSeq).subscribe(d => {\r\n        element.recoverySub = d;\r\n        let recoveries: number[] = [];\r\n        element.recoverySub.forEach((r, i) => {\r\n          if (r.trxSeq != \"\") {\r\n            let test: number[] = r.trxSeq.split(\",\").map(Number);\r\n            let sorted = test.sort((a, b) => a - b);\r\n            recoveries = recoveries.concat(test);\r\n            this.last = sorted[sorted.length - 1];\r\n          }\r\n        });\r\n\r\n        // let sorted = recoveries.sort((a, b) => a - b);\r\n        // this.last=sorted[sorted.length - 1];\r\n        this.expandedElement = element\r\n      });\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  showFields = false;\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n\r\n  onSelectionChanged(w) {\r\n    console.log(w);\r\n    if (this.adjustPayment.controls['chngRsnKey'].value == 1485) {\r\n      console.log(this.adjustPayment.controls['chngRsnKey'].value)\r\n      this.adjustPayment.get('rcvryTypsSeq').disable();\r\n      this.adjustPayment.get('instr').disable();\r\n      this.adjustPayment.get('adjPymtDt').disable();\r\n      this.adjustPayment.get('pymtAmt').disable();\r\n    } else {\r\n      this.adjustPayment.get('rcvryTypsSeq').enable();\r\n      this.adjustPayment.get('instr').enable();\r\n      this.adjustPayment.get('adjPymtDt').enable();\r\n      this.adjustPayment.get('pymtAmt').disable();\r\n    }\r\n  }\r\n\r\n\r\n  revoceryVoucherHistry(clntSeq: number) {\r\n    this.history = null;\r\n    this.recoveryService.getJvHistory(clntSeq).subscribe((data => {\r\n      this.history = data;\r\n    }));\r\n    (<any>$('#jvHistory')).modal('show');\r\n  }\r\n  onExcessRecoverClick(recovery: Recovery) {\r\n    this.recoveryService.getClntRecoveryTypes(recovery.clntSeq).subscribe((data => {\r\n      this.tempInstituteArray = data;\r\n    }));\r\n    this.recovery = recovery;\r\n    this.excessPayment.reset();\r\n    (<any>$('#exxcess_recovery')).modal('show');\r\n    console.log(this.excessPayment.controls);\r\n    this.excessPayment.patchValue({\r\n      prd: recovery.prd,\r\n      clientNm: recovery.frstNm + ' ' + recovery.lastNm,\r\n      clientId: recovery.clntSeq,\r\n      clntId: recovery.clntSeq,\r\n      totaldue: recovery.totalDue - recovery.totalRecv,\r\n      pymtAmt: 0,\r\n      pymtDt: new Date()\r\n\r\n    });\r\n  }\r\n  onPaymentModeChange() {\r\n    const pymtDt = this.excessPayment.get('pymtDt');\r\n    const instr = this.excessPayment.get('instr');\r\n    if (this.excessPayment.get('rcvryTypsSeq').value.typId === '0001') {\r\n      this.isCash = true;\r\n      pymtDt.clearValidators();\r\n      instr.clearValidators();\r\n    } else {\r\n      this.isCash = false;\r\n      instr.setValidators(Validators.compose([Validators.required, Validators.maxLength(20), Validators.pattern('^[0-9]+$')]));\r\n      pymtDt.setValidators(Validators.required);\r\n    }\r\n    pymtDt.updateValueAndValidity();\r\n    instr.updateValueAndValidity();\r\n  }\r\n  excessDisable = false;\r\n  onExcessRecoverSubmitt() {\r\n    this.spinner.show();\r\n    this.excessDisable = true;\r\n    const result: any = Object.assign({}, this.excessPayment.value);\r\n    let isCash: boolean = result.rcvryTypsSeq.typId === '0001';\r\n    result.pymtDt = this.commonService.formatDate(result.pymtDt);\r\n    result.rcvryTypsSeq = result.rcvryTypsSeq.typSeq;\r\n    this.recoveryService.payExcessRecovery(result).subscribe(d => {\r\n      this.excessDisable = false; this.spinner.hide();\r\n      (<any>$('#exxcess_recovery')).modal('hide');\r\n      if (result.post && isCash) {\r\n        this.postedReport(d.trxSeq);\r\n      }\r\n\r\n\r\n    }, error => {\r\n      (<any>$('#exxcess_recovery')).modal('hide');\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n      this.excessDisable = false;\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\n\r\nimport { RecoveryRoutingModule } from './recovery-routing.module';\r\nimport { RecoveryComponent } from './recovery.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AppRoutingModule } from '../../app-routing.module';\r\n\r\nimport {\r\n  MatButtonModule, MatCardModule,\r\n  MatDatepickerModule, MatExpansionModule,\r\n  MatInputModule,\r\n  MatNativeDateModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatTableModule,\r\n  MatCheckboxModule,\r\n  MatSortModule,\r\n  MatPaginatorModule\r\n} from '@angular/material';\r\nimport { SplitPipe } from './split.pipe';\r\nimport { MergePipe } from './mere.pipe';\r\nimport { AuthGuard } from './AuthGuard.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RecoveryRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    MatExpansionModule, MatTableModule, MatCheckboxModule, MatSortModule,\r\n    MatPaginatorModule, MatSortModule, SharedModule\r\n  ],\r\n  declarations: [RecoveryComponent, SplitPipe, MergePipe],\r\n  providers: [DatePipe, AuthGuard]\r\n})\r\nexport class RecoveryModule { }\r\n","import { Pipe,PipeTransform  } from '@angular/core';\r\n@Pipe({\r\n    name: 'split'\r\n  })\r\n  export class SplitPipe implements PipeTransform {\r\n    transform(val:string, params:string):string[] {\r\n      return val.split(params);\r\n    }\r\n  }"],"sourceRoot":""}