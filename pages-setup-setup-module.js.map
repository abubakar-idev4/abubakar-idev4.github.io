{"version":3,"sources":["webpack:///./src/app/pages/setup/AuthGuard.service.ts","webpack:///./src/app/pages/setup/address-type/address-type.component.css","webpack:///./src/app/pages/setup/address-type/address-type.component.html","webpack:///./src/app/pages/setup/address-type/address-type.component.ts","webpack:///./src/app/pages/setup/answer/answer.component.css","webpack:///./src/app/pages/setup/answer/answer.component.html","webpack:///./src/app/pages/setup/answer/answer.component.ts","webpack:///./src/app/pages/setup/approval-workflow/add-workflow/add-workflow.component.css","webpack:///./src/app/pages/setup/approval-workflow/add-workflow/add-workflow.component.html","webpack:///./src/app/pages/setup/approval-workflow/add-workflow/add-workflow.component.ts","webpack:///./src/app/pages/setup/approval-workflow/approval-workflow.component.css","webpack:///./src/app/pages/setup/approval-workflow/approval-workflow.component.html","webpack:///./src/app/pages/setup/approval-workflow/approval-workflow.component.ts","webpack:///./src/app/pages/setup/business-activity/business-activity.component.css","webpack:///./src/app/pages/setup/business-activity/business-activity.component.html","webpack:///./src/app/pages/setup/business-activity/business-activity.component.ts","webpack:///./src/app/pages/setup/business-sector/business-sector.component.css","webpack:///./src/app/pages/setup/business-sector/business-sector.component.html","webpack:///./src/app/pages/setup/business-sector/business-sector.component.ts","webpack:///./src/app/pages/setup/city/city.component.css","webpack:///./src/app/pages/setup/city/city.component.html","webpack:///./src/app/pages/setup/city/city.component.ts","webpack:///./src/app/pages/setup/common-code-values/common-code-values.component.css","webpack:///./src/app/pages/setup/common-code-values/common-code-values.component.html","webpack:///./src/app/pages/setup/common-code-values/common-code-values.component.ts","webpack:///./src/app/pages/setup/common-code/common-code.component.css","webpack:///./src/app/pages/setup/common-code/common-code.component.html","webpack:///./src/app/pages/setup/common-code/common-code.component.ts","webpack:///./src/app/pages/setup/file-loader/file-loader.component.css","webpack:///./src/app/pages/setup/file-loader/file-loader.component.html","webpack:///./src/app/pages/setup/file-loader/file-loader.component.ts","webpack:///./src/app/pages/setup/health-insurance-plan/health-insurance-plan.component.css","webpack:///./src/app/pages/setup/health-insurance-plan/health-insurance-plan.component.html","webpack:///./src/app/pages/setup/health-insurance-plan/health-insurance-plan.component.ts","webpack:///./src/app/pages/setup/products/product-by-seq/product-by-seq.component.css","webpack:///./src/app/pages/setup/products/product-by-seq/product-by-seq.component.html","webpack:///./src/app/pages/setup/products/product-by-seq/product-by-seq.component.ts","webpack:///./src/app/pages/setup/products/products.component.css","webpack:///./src/app/pages/setup/products/products.component.html","webpack:///./src/app/pages/setup/products/products.component.ts","webpack:///./src/app/pages/setup/question/question.component.css","webpack:///./src/app/pages/setup/question/question.component.html","webpack:///./src/app/pages/setup/question/question.component.ts","webpack:///./src/app/pages/setup/questionnaire/questionnaire.component.css","webpack:///./src/app/pages/setup/questionnaire/questionnaire.component.html","webpack:///./src/app/pages/setup/questionnaire/questionnaire.component.ts","webpack:///./src/app/pages/setup/rules/add-rule/add-rule.component.css","webpack:///./src/app/pages/setup/rules/add-rule/add-rule.component.html","webpack:///./src/app/pages/setup/rules/add-rule/add-rule.component.ts","webpack:///./src/app/pages/setup/rules/rules.component.css","webpack:///./src/app/pages/setup/rules/rules.component.html","webpack:///./src/app/pages/setup/rules/rules.component.ts","webpack:///./src/app/pages/setup/setup.component.css","webpack:///./src/app/pages/setup/setup.component.html","webpack:///./src/app/pages/setup/setup.component.ts","webpack:///./src/app/pages/setup/setup.module.ts","webpack:///./src/app/pages/setup/tags/tags.component.css","webpack:///./src/app/pages/setup/tags/tags.component.html","webpack:///./src/app/pages/setup/tags/tags.component.ts","webpack:///./src/app/pages/setup/types/charge-types/charge-types.component.css","webpack:///./src/app/pages/setup/types/charge-types/charge-types.component.html","webpack:///./src/app/pages/setup/types/charge-types/charge-types.component.ts","webpack:///./src/app/pages/setup/types/expense-types/expense-types.component.css","webpack:///./src/app/pages/setup/types/expense-types/expense-types.component.html","webpack:///./src/app/pages/setup/types/expense-types/expense-types.component.ts","webpack:///./src/app/pages/setup/types/payment-types/payment-types.component.css","webpack:///./src/app/pages/setup/types/payment-types/payment-types.component.html","webpack:///./src/app/pages/setup/types/payment-types/payment-types.component.ts","webpack:///./src/app/pages/setup/types/recovery-types/recovery-types.component.css","webpack:///./src/app/pages/setup/types/recovery-types/recovery-types.component.html","webpack:///./src/app/pages/setup/types/recovery-types/recovery-types.component.ts","webpack:///./src/app/pages/setup/user-managment/user-managment.component.css","webpack:///./src/app/pages/setup/user-managment/user-managment.component.html","webpack:///./src/app/pages/setup/user-managment/user-managment.component.ts","webpack:///./src/app/shared/helpers/MyErrorStateMatcher.helper.ts","webpack:///./src/app/shared/mocks/rules.mocks.ts","webpack:///./src/app/shared/models/Answer.model.ts","webpack:///./src/app/shared/models/Question.model.ts","webpack:///./src/app/shared/models/Rule.model.ts","webpack:///./src/app/shared/models/business-activity.model.ts","webpack:///./src/app/shared/models/business-sector.model.ts","webpack:///./src/app/shared/models/city.model.ts","webpack:///./src/app/shared/models/health-insurance-plan.model.ts","webpack:///./src/app/shared/models/questionnaire.model.ts","webpack:///./src/app/shared/models/tag.model.ts","webpack:///./src/app/shared/services/answer.service.ts","webpack:///./src/app/shared/services/business-activity.service.ts","webpack:///./src/app/shared/services/business-sector.service.ts","webpack:///./src/app/shared/services/city.service.ts","webpack:///./src/app/shared/services/health-insurance-plan.service.ts","webpack:///./src/app/shared/services/paymentTypes.service.ts","webpack:///./src/app/shared/services/question.service.ts","webpack:///./src/app/shared/services/questionnaire.service.ts","webpack:///./src/app/shared/services/rules.service.ts","webpack:///./src/app/shared/services/tags.service.ts","webpack:///./src/app/shared/services/user-managementservice.ts"],"names":[],"mappings":"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","file":"pages-setup-setup-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { Auth } from \"../../shared/models/Auth.model\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private toaster: ToastrService) { }\r\n  auth: Auth;\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    this.auth = JSON.parse(sessionStorage.getItem(\"auth\"));\r\n    let b = false;\r\n    this.auth.modules.forEach(screen => {\r\n      if (screen.modUrl.indexOf(\"setup\") >= 0) {\r\n        b = true;\r\n      }\r\n    })\r\n    if (!b)\r\n      this.toaster.error(\"Permission Denied\");\r\n    // ('Please Login to Continue');?\r\n    return b;\r\n  }\r\n\r\n}","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Region Type <i class=\\\"fa fa-search\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"addItem()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Code</th>\\r\\n                <th>Description</th>\\r\\n                <th>TRANS DATE</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n              <tr *ngFor=\\\"let code of pagedItems\\\">\\r\\n                <td>{{code.refCd}}</td>\\r\\n                <td>{{code.refCdCmnt}}</td>\\r\\n                <td>{{code.lastUpdDt | date: 'yyyy-MM-dd'}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"editItem(code.refCdSeq)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(code.refCdSeq)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <!-- <a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n                </td>\\r\\n              </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"back\\\">\\r\\n            <a routerLink=\\\"/setup\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n          </div>\\r\\n          <nav aria-label=\\\"Page navigation \\\">\\r\\n            <ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\r\\n              <li class=\\\"page-item disabled\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog mymodal\\\">\\r\\n\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Add Region Type</h5>\\r\\n      </div>\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"commonCodeValueForm\\\" (ngSubmit)=\\\"onCommonCodeValueSubmit()\\\" >\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol3-col\\\">\\r\\n              <label>Code:</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"valueCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.valueCode.errors }\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"cCol3-col\\\">\\r\\n              <label>Name:</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"valueName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.valueName.errors }\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"cCol3-col\\\">\\r\\n              <label>Description:</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"valueDescription\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.valueDescription.errors }\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"submitted && f.valueCode.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n          <i  class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n          <strong *ngIf=\\\"f.valueCode.errors.required\\\">Please Enter Group Value Code</strong>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"submitted && f.valueName.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n          <i  class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n          <strong *ngIf=\\\"f.valueName.errors\\\">Please Enter Group Value Name</strong>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"submitted && f.valueDescription.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n          <i  class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n          <strong *ngIf=\\\"f.valueDescription.errors\\\">Please Enter Group Value Description</strong>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button  class=\\\"btn btn-primary\\\">Ok</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {DataService} from '../../../shared/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-address-type',\r\n  templateUrl: './address-type.component.html',\r\n  styleUrls: ['./address-type.component.css']\r\n})\r\nexport class AddressTypeComponent implements OnInit {\r\n//commonCodeValueList: any = [];\r\n  commonCodeValueForm: FormGroup;\r\n  submitted = false;\r\n  // array of all items to be paged\r\n  private allItems: any = [];\r\n  // pager objecte\r\n  pager: any = {};\r\n  // paged items\r\n  pagedItems: any = [];\r\n  constructor(private router:Router,private DataService:DataService, private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.commonCodeValueForm = this.formBuilder.group({\r\n      groupKey: [sessionStorage.getItem(\"clickCommonCode\")],\r\n      formSaveKey: ['add'],\r\n      valueCode: ['', Validators.required],\r\n      valueName: ['', Validators.required],\r\n      valueDescription: ['', Validators.required]\r\n    });\r\n    this.DataService.getCommonCodeValue(sessionStorage.getItem(\"clickCommonCode\")).subscribe((data) =>{\r\n      console.log(data);\r\n      this.allItems  = data;\r\n      // initialize to page 1\r\n      this.setPage(1);\r\n    },(error)  => {\r\n      console.log(\"err\");\r\n      console.log(\"err\", error);\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.commonCodeValueForm.controls; }\r\n  onCommonCodeValueSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.commonCodeValueForm.invalid) {\r\n      return;\r\n    }\r\n    let formValue: any = this.commonCodeValueForm.value;\r\n    console.log(formValue.formSaveKey);\r\n    if(formValue.formSaveKey === \"add\"){\r\n      this.DataService.addCommonCodeValue(formValue).subscribe((data: any) =>{\r\n        (<any>$(\"#businessector\")).modal('hide');\r\n        this.pagedItems.push(data.group);\r\n        console.log(data);\r\n        sessionStorage.setItem(\"groupKey\",data['refCdSeq']);\r\n      },(error)  => {\r\n        console.log(\"err\", error);\r\n      });\r\n    }else if(formValue.formSaveKey === \"update\"){\r\n      this.DataService.updateCommonCodeValue(formValue).subscribe((data: any) =>{\r\n        (<any>$(\"#businessector\")).modal('hide');\r\n        this.pagedItems.splice(this.pagedItems.indexOf(data.group['refCdSeq']), 1);\r\n        this.pagedItems.push(data.group);\r\n        //console.log(data.group['refCdSeq']);\r\n        sessionStorage.setItem(\"groupKey\",data['refCdSeq']);\r\n      },(error)  => {\r\n        console.log(\"err\", error);\r\n      });\r\n      //console.log(formValue.groupSaveKey);\r\n    }\r\n    //this.DataService.formValue.groupSaveKey(formValue).subscribe((data) =>{\r\n\r\n    return false;\r\n  }\r\n  //pagenation\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.DataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n  //delete\r\n  deleteItem(passedId) {\r\n    this.DataService.delCommonCodeValue(passedId).subscribe(result => {\r\n      this.pagedItems.splice(this.pagedItems.indexOf(passedId), 1);\r\n      console.log(this.pagedItems);\r\n    }, error => console.log('There was an error: ', error));\r\n  }\r\n  //add\r\n  addItem() {\r\n    this.submitted = false;\r\n    (<any>$(\"#businessector\")).modal('show');\r\n    this.commonCodeValueForm = this.formBuilder.group({\r\n      groupKey: [sessionStorage.getItem(\"clickCommonCode\")],\r\n      formSaveKey: ['add'],\r\n      valueCode: ['', Validators.required],\r\n      valueName: ['', Validators.required],\r\n      valueDescription: ['', Validators.required]\r\n    });\r\n  }\r\n  //edit\r\n  editItem(passedId) {\r\n    console.log('edit');\r\n    this.DataService.editCommonCodeValue(passedId).subscribe((result: any) => {\r\n      console.log(result);\r\n      (<any>$(\"#businessector\")).modal('show');\r\n      this.commonCodeValueForm = this.formBuilder.group({\r\n        groupKey: [result.refCdGrpKey],\r\n        codeValueSeq:[result.refCdSeq],\r\n        formSaveKey: ['update'],\r\n        valueCode: [result.refCd],\r\n        valueName: [result.refCdCmnt],\r\n        valueDescription: [result.refCdDscr]\r\n      });\r\n    }, error => console.log('There was an error: ', error));\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"mysearchbox\\\">\\r\\n              <h6 class=\\\"d-inline-block searchshow\\\">Answer\\r\\n                <!-- <i class=\\\"fa fa-search\\\"></i> -->\\r\\n              </h6>\\r\\n              <div class=\\\"mysearch\\\">\\r\\n                <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                 <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6 addBtn\\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#businessector\\\" (click)=\\\"onAddNewClick()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n          </div>\\r\\n          <div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n            <div class=\\\"modal-dialog big mymodal\\\"> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n              <!-- Modal content-->\\r\\n              <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                  <h5 class=\\\"modal-title\\\">Answer</h5>\\r\\n                </div>\\r\\n                <form [formGroup]=\\\"answerForm\\\" (ngSubmit)=\\\"addAnswerSubmit()\\\">\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                <ul class=\\\"infolist\\\">\\r\\n                </ul>\\r\\n                  <div class=\\\"cRow\\\">\\r\\n                      <div class=\\\"cCol2\\\">\\r\\n                          <label>Answer</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"answrStr\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.answrStr.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.answrStr.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"form.answrStr.errors.required\\\">Answer String is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n \\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                            <label>Answer Score</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"answrScore\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.answrScore.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && form.answrScore.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"form.answrScore.errors.required\\\">Answer Score is required</div>\\r\\n                            </div>\\r\\n                          </div>      \\r\\n                    <div class=\\\"cCol2\\\">\\r\\n                        <label>Status:</label>\\r\\n                        <select type=\\\"\\\" formControlName=\\\"answrStsKey\\\"class=\\\"form-control\\\"  id=\\\"status\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.answrStsKey.errors }\\\">\\r\\n                            <option *ngFor=\\\"let status of statusArray\\\" [value]=\\\"status.codeKey\\\" >{{status.codeValue}}</option>\\r\\n                          </select>\\r\\n                        <div *ngIf=\\\"submitted && form.answrStsKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.answrStsKey.errors.required\\\">Status is required</div>\\r\\n                        </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer text-center\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" (click)=\\\"addAnswerSubmit()\\\">Ok</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n              <th>Answer ID</th>\\r\\n              <th>Answer Text</th>\\r\\n              <th>Score</th>\\r\\n              <th>Status</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n</thead>\\r\\n<tbody>\\t\\r\\n  <tr *ngFor=\\\"let answer of answers\\\">\\r\\n    <td>{{answer.answrId}}</td> \\r\\n    <td>{{answer.answrStr}}</td>\\r\\n    <td>{{answer.answrScore}}</td>\\r\\n    <td>{{findValueByKey(answer.answrStsKey)}}</td>\\r\\n    <td>\\t\\t\\t\\t\\t\\t\\r\\n      <a  class=\\\"iconBtn\\\" (click)=\\\"onEdit(answer)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n      <a  class=\\\"iconBtn delBtn\\\" (click)=\\\"onDelete(answer.answrSeq)\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n      <!-- <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n    </td>\\r\\n  </tr>\\r\\n</tbody>\\r\\n</table>\\r\\n      </div>\\t\\r\\n      <!-- <div class=\\\"back\\\">\\r\\n        <a href=\\\"setup.html\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n      </div> -->\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AnswerService } from '../../../shared/services/answer.service';\r\nimport { CommonService } from '../../../shared/services/common.service';\r\nimport { Answer } from '../../../shared/models/Answer.model';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-answer',\r\n  templateUrl: './answer.component.html',\r\n  styleUrls: ['./answer.component.css']\r\n})\r\nexport class AnswerComponent implements OnInit {\r\n\r\n  public answerForm: FormGroup;\r\n  submitted = false;\r\n\r\n  statusArray : any[];\r\n  public answers: Answer[];\r\n  public addAnswer: Answer = new Answer();\r\n  public isEdit: Boolean = false;\r\n  constructor(private formBuilder: FormBuilder,private answerService: AnswerService, private commonService: CommonService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n\r\n    this.answerForm = this.formBuilder.group({  \r\n      answrStr: ['', Validators.required],\r\n      answrScore: ['', Validators.required],\r\n      answrStsKey: ['', Validators.required],\r\n  });\r\n\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );   \r\n    this.answerService.getAnswers(sessionStorage.getItem('qstSeq')).subscribe(data => this.answers = data);\r\n  }\r\n\r\n  get form() \r\n  { \r\n    return this.answerForm.controls; \r\n  }\r\n\r\n  onAddNewClick() {\r\n    this.isEdit = false;\r\n    this.answerForm.reset();\r\n    this.addAnswer = new Answer();\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n  \r\n  addAnswerSubmit(){\r\n    this.submitted = true;\r\n    if (this.answerForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.addAnswer.answrStr= this.answerForm.value.answrStr;\r\n    this.addAnswer.answrScore= this.answerForm.value.answrScore;\r\n    this.addAnswer.answrStsKey= this.answerForm.value.answrStsKey;\r\n    this.addAnswer.qstSeq= parseInt(sessionStorage.getItem('qstSeq'));\r\n\r\n    (<any>$('#businessector')).modal('hide');\r\n    console.log(this.addAnswer);\r\n    if(this.isEdit) {\r\n      this.answerService.updateAnswer(this.addAnswer).subscribe(data => {\r\n        this.addAnswer = data;\r\n        this.answerService.getAnswers(sessionStorage.getItem('qstSeq')).subscribe(data => this.answers = data);\r\n      });\r\n    }\r\n    else {\r\n      this.answerService.addAnswer(this.addAnswer).subscribe(data => {\r\n        this.addAnswer = data;\r\n        this.answerService.getAnswers(sessionStorage.getItem('qstSeq')).subscribe(data => this.answers = data);\r\n      }); \r\n    }         \r\n  }\r\n\r\n  onEdit(answer){\r\n    this.isEdit = true;\r\n    this.answerForm.patchValue(answer);\r\n    console.log(answer);\r\n    this.addAnswer = answer;\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n\r\n  onDelete(answer) { \r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this Answer?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.answerService.deleteAnswer(answer).subscribe(data => {\r\n          this.answerService.getAnswers(sessionStorage.getItem('qstSeq')).subscribe(data => this.answers = data);\r\n        }); \r\n      }\r\n    });\r\n    console.log(answer);  \r\n  }\r\n  findValueByKey(key) {\r\n    let status = '';\r\n    if (this.statusArray) {\r\n      this.statusArray.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n      <h6 class=\\\"mt-3\\\">Approval Workflow</h6>\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"approvalWorkflowForm\\\" (ngSubmit)=\\\"onApprovalWorkSubmit()\\\" >\\r\\n     <div class=\\\"cRow\\\">\\r\\n          <div class=\\\"cCol1\\\">\\r\\n            <label>Wokflow ID:</label>\\r\\n            <input type=\\\"text\\\" value=\\\"123456\\\" class=\\\"form-control\\\" formControlName=\\\"workflowId\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.workflowId.errors }\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"cCol1\\\">\\r\\n            <label>Description:</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"cCol1\\\">\\r\\n            <label>Object:</label>\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"objectKey\\\">\\r\\n              <option value=\\\"1\\\" [selected] =\\\"1\\\">Object 1</option>\\r\\n              <option value=\\\"2\\\">Object 2</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"cCol1\\\">\\r\\n            <label>Status:</label>\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"statusKey\\\">\\r\\n              <option value=\\\"1\\\" [selected] =\\\"1\\\">Active</option>\\r\\n              <option value=\\\"2\\\">Pending</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      \\r\\n      <div class=\\\"cRow\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"cCol6\\\">\\r\\n\\t\\t\\t\\t\\t<label>Rule Criteria:</label>\\r\\n          <button type=\\\"button\\\" class=\\\"btn pull-right btn-dots\\\" data-toggle=\\\"modal\\\" data-target=\\\"#cmmoncodes\\\"></button>\\r\\n\\t\\t\\t\\t\\t <textarea class=\\\"form-control\\\" formControlName=\\\"ruleCriteria\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.ruleCriteria.errors }\\\"></textarea>\\r\\n                     <div class=\\\"modal fade\\\" id=\\\"cmmoncodes\\\" role=\\\"dialog\\\">\\r\\n                        <div class=\\\"modal-dialog mymodal big\\\"> \\r\\n                        <!-- Modal content-->\\r\\n                        <div class=\\\"modal-content\\\">\\r\\n                          <div class=\\\"modal-header\\\">\\r\\n                            <h5 class=\\\"modal-title\\\">Rule Condition</h5>\\r\\n                          </div>\\r\\n                          <div class=\\\"modal-body\\\">\\r\\n                            <div class=\\\"p10\\\">\\r\\n        \\t\\t\\t<div class=\\\"row\\\">\\r\\n        \\t<div class=\\\"col-md-3 mb-2\\\">\\r\\n            \\t<div class=\\\"filter noborder\\\">\\r\\n                    <h6 class=\\\"border-title\\\">Data Items</h6>\\r\\n                \\t<a href=\\\"#.\\\" class=\\\"acc_trigger inactive-header active-header\\\">Client</a>\\r\\n                    <div class=\\\"collapse acc_container\\\" style=\\\"display: block;\\\">\\r\\n                    \\t <div class=\\\"listmenu\\\">\\r\\n                            <ul>\\r\\n                              \\t<li>Gender</li>\\r\\n                                <li>Merital Status</li>\\r\\n                            </ul>\\r\\n                         </div>\\r\\n                    </div>\\r\\n                    <a class=\\\"acc_trigger inactive-header\\\">Credit Information</a>\\r\\n                    <div class=\\\"collapse acc_container\\\">\\r\\n                    \\t <div class=\\\"listmenu\\\">\\r\\n                            <ul>\\r\\n                              \\t<li>Approved Amount</li>\\r\\n                                <li>Requested Amount</li>\\r\\n                            </ul>\\r\\n                         </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-9 mt-3\\\">\\r\\n            \\t<div class=\\\"cRow\\\">\\r\\n            \\t<textarea formControlName=\\\"approvalCriteria\\\" class=\\\"form-control large\\\" placeholder=\\\"Days to complete < 8\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>        \\r\\n                </div>\\r\\n                          </div> \\r\\n                          <div class=\\\"modal-footer text-center\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" (click)=\\\"onCriteriaClick()\\\" data-dismiss=\\\"modal\\\">Ok</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n      \\r\\n      <div class=\\\"pt-1 mt-3\\\">\\r\\n        <label>Select Approver:</label>\\r\\n      </div>\\r\\n      <div class=\\\"checkbox mb-1\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"checkbox1\\\" class=\\\"custom-control-input\\\" formControlName=\\\"isRegionalManager\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"checkbox1\\\"> Regional Manager</label>\\r\\n            </div>\\r\\n      </div>\\r\\n      <div class=\\\"checkbox mb-1\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"checkbox2\\\" class=\\\"custom-control-input\\\" formControlName=\\\"isAreaManager\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"checkbox2\\\"> Area Manager</label>\\r\\n            </div>\\r\\n      </div>\\r\\n      <div class=\\\"checkbox mb-1\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"checkbox3\\\" class=\\\"custom-control-input\\\" formControlName=\\\"isBranchManager\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"checkbox3\\\"> Branch Manager</label>\\r\\n            </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"submitted && f.workflowId.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n         <i  class=\\\"fa fa-exclamation-circle\\\"></i>  \\r\\n         <strong *ngIf=\\\"f.workflowId.errors.required\\\">Please Enter Wokflow ID</strong>\\r\\n       </div>\\r\\n       <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n         <i  class=\\\"fa fa-exclamation-circle\\\"></i>  \\r\\n         <strong *ngIf=\\\"f.description.errors.required\\\">Please Enter Description</strong>\\r\\n       </div>\\r\\n       <div *ngIf=\\\"submitted && f.ruleCriteria.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n         <i  class=\\\"fa fa-exclamation-circle\\\"></i>  \\r\\n         <strong *ngIf=\\\"f.ruleCriteria.errors.required\\\">Please Enter Rule Criteria</strong>\\r\\n       </div>\\r\\n      <div class=\\\"mt-5\\\">\\r\\n      <button  class=\\\"btn btn-primary\\\">Continue</button>\\r\\n      <button class=\\\"btn btn-default btn-min\\\">Save</button>\\r\\n    </div>\\r\\n    </form>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../../../shared/services/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-workflow',\r\n  templateUrl: './add-workflow.component.html',\r\n  styleUrls: ['./add-workflow.component.css']\r\n})\r\nexport class AddWorkflowComponent implements OnInit {\r\n\tapprovalWorkflowForm: FormGroup;\r\n    submitted = false;\r\n\tmodel: any = {};\r\n\t// array of all items to be paged\r\n    private allItems: any = [];\r\n    // pager object\r\n    pager: any = {};\r\n    // paged items\r\n    pagedItems: any = [];\r\n  constructor(private router:Router,private DataService:DataService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\tthis.approvalWorkflowForm = this.formBuilder.group({\r\n\t\tworkflowId: ['', Validators.required],\r\n\t\tdescription: ['', Validators.required],\r\n\t\tobjectKey: ['1'],\r\n\t\tstatusKey: ['1'],\r\n\t\truleCriteria: ['', Validators.required],\r\n\t\tisRegionalManager: [false],\r\n\t\tisAreaManager: [false],\r\n\t\tisBranchManager: [false],\r\n\t\tapprovalCriteria: [''],\r\n\t});\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.approvalWorkflowForm.controls; }\r\n  onApprovalWorkSubmit(){\r\n\t  this.submitted = true;\r\n \r\n        // stop here if form is invalid\r\n        if (this.approvalWorkflowForm.invalid) {\r\n            return;\r\n        }\r\n\t\tlet formValue: any = this.approvalWorkflowForm.value;\r\n\tthis.DataService.addAprovalWorkflow(formValue).subscribe((data) =>{\r\n    //let usr = JSON.parse(data);\r\n\tconsole.log(data);\r\n    this.router.navigate([\"setup/approval-workflow\"]);\r\n    },(error)  => {\r\n        console.log(\"err\", error);   \r\n        //this.addToast({title:'Error', msg:error._body, timeout: 3000, theme:'default', position:'bottom-right', type:'error', closeOther:true})\r\n      });\r\n    return false;\r\n  }\r\n  onCriteriaClick(){\r\n    let formValue: any = this.approvalWorkflowForm.value;\r\n    this.approvalWorkflowForm = this.formBuilder.group({\r\n            workflowId: [formValue['workflowId'], Validators.required],\r\n            description: [formValue['description'], Validators.required],\r\n            objectKey: [formValue['objectKey']],\r\n            statusKey: [formValue['statusKey']],\r\n\t\t\truleCriteria: [formValue['approvalCriteria'], Validators.required],\r\n\t\t\tisRegionalManager: [formValue['isRegionalManager']],\r\n\t\t\tisAreaManager: [formValue['isAreaManager']],\r\n\t\t\tisBranchManager: [formValue['isBranchManager']],\r\n            approvalCriteria: [''],\r\n\r\n        });\r\n  //console.log(formValue['ruleCriteriafun']);\r\n  }\r\n  \r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<main class=\\\"main\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"leftSideBar\\\">\\r\\n\\t\\t\\t\\t\\t<h6><i class=\\\"fa fa-sliders fa-lg\\\"></i> Setup</h6>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"leftmenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul>\\r\\n\\t\\t                 \\t<li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/setup\\\">Common Codes</a></li>\\r\\n\\t\\t                     <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/setup/organization\\\">Organization</a></li>\\r\\n\\t\\t                    \\r\\n\\t\\t                     <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/setup/geography\\\">Geography</a></li>\\r\\n\\t\\t                     <!-- <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/setup/approval-workflow\\\">Approval Workflow</a></li> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/setup/communication-workflow\\\">Communication Workflow</a></li>\\r\\n\\t\\t\\r\\n\\t\\t                     <li><a href=\\\"#\\\">Products</a></li>\\r\\n\\t\\t                     <li><a href=\\\"#\\\">Rules</a></li>\\r\\n\\t\\t                     <li><a href=\\\"#\\\">User Management</a></li>\\r\\n\\t\\t                 </ul>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"content mb-md-5\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"mysearchbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h6 class=\\\"d-inline-block searchshow\\\">Approval Workflow <i class=\\\"fa fa-search\\\"> </i></h6>\\r\\n                            <div class=\\\"mysearch\\\">\\r\\n                            \\t<a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                            \\t <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                            </div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"col-sm-6 addBtn\\\">\\r\\n                         <a class=\\\"btn btn-primary btn-sm\\\" routerLink=\\\"/setup/approval-workflow/add-workflow\\\"><i class=\\\"fa fa-plus\\\"></i> Add</a>\\r\\n        </div>\\r\\n        \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Workflow  ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Rule name</th>\\r\\n                            <th>Object</th>\\r\\n                            <th>Criteria</th>\\r\\n                            <th>Status</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody>\\t\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let approval of pagedItems\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{approval.aprvlWfSeq}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{approval.aprvlWfNm}}</td>\\r\\n                            <td>{{approval.aprvlWfSeq}}</td>\\r\\n                            <td>{{approval.aprvlWfRulStr}}</td>\\r\\n                            <td class=\\\"colorGreen\\\">{{approval.aprvlWfStsKey}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n                            \\t<a routerLink=\\\"/setup/approval-workflow/add-workflow{{approval.aprvlWfSeq}}\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                                <a (click)=\\\"deleteItem(approval.aprvlWfSeq)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n                       \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n                       \\r\\n                        <!--<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>4</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>Description will here</td>\\r\\n                            <td>Client</td>\\r\\n                            <td>Create Date = Current Date</td>\\r\\n                            <td class=\\\"colorRed\\\">Disable</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n                            \\t<a routerLink=\\\"/setup/approval-workflow/add-workflow\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                                <a href=\\\"#\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>-->\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<nav aria-label=\\\"Page navigation \\\">\\r\\n\\t\\t\\t\\t<ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\r\\n\\t\\t\\t\\t\\t<li class=\\\"page-item disabled\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li class=\\\"page-item\\\" *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</nav>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n                </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</main>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../../shared/services/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-approval-workflow',\r\n  templateUrl: './approval-workflow.component.html',\r\n  styleUrls: ['./approval-workflow.component.css']\r\n})\r\nexport class ApprovalWorkflowComponent implements OnInit {\r\n\t// array of all items to be paged\r\n    private allItems: any = [];\r\n    // pager object\r\n    pager: any = {};\r\n    // paged items\r\n    pagedItems: any = [];\r\n  constructor(private router:Router,private DataService:DataService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\t  this.DataService.getAprovalWorkflow().subscribe((data) =>{\r\n          console.log(data);\r\n          this.allItems  = data;\r\n\t\t  // initialize to page 1\r\n\t\t  this.setPage(1);\r\n        },(error)  => {\r\n          console.log(\"err\");\r\n          console.log(\"err\", error);\r\n        });\r\n  }\r\n  //pagenation\r\n  setPage(page: number) {\r\n\t// get pager object from service\r\n\tthis.pager = this.DataService.getPager(this.allItems.length, page);\r\n\r\n\t// get current page of items\r\n\tthis.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n  //delete\r\n  deleteItem(passedId) {\r\n    this.DataService.delAprovalWorkflow(passedId).subscribe(result => {\r\n\t\tthis.pagedItems.splice(this.pagedItems.indexOf(passedId), 1);\r\n\t\tconsole.log(this.pagedItems)\r\n    }, error => console.log('There was an error: ', error));\r\n  }\r\n  \r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"mysearchbox\\\">\\r\\n              <h6 class=\\\"d-inline-block searchshow\\\">Business Activity\\r\\n                <!-- <i class=\\\"fa fa-search\\\"></i> -->\\r\\n              </h6>\\r\\n              <div class=\\\"mysearch\\\">\\r\\n                <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                 <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6 addBtn\\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#businessector\\\" (click)=\\\"onAddNewClick()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n          </div>\\r\\n          <div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n            <div class=\\\"modal-dialog big mymodal\\\"> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n              <!-- Modal content-->\\r\\n              <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                  <h5 class=\\\"modal-title\\\">Business Activity</h5>\\r\\n                </div>\\r\\n                <form [formGroup]=\\\"businessActivityForm\\\" (ngSubmit)=\\\"addBusinessActivitySubmit()\\\">\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                <ul class=\\\"infolist\\\">\\r\\n                </ul>\\r\\n                  <div class=\\\"cRow\\\">\\r\\n                      <div class=\\\"cCol2\\\">\\r\\n                          <label>Business Activity Name</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"bizActyNm\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.bizActyNm.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.bizActyNm.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"form.bizActyNm.errors.required\\\">Business Activity Name is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                            <label>Sort Order</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"bizActySortOrdr\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.bizActySortOrdr.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && form.bizActySortOrdr.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"form.bizActySortOrdr.errors.required\\\">Sort Order is required</div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n  \\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                        <label>Status:</label>\\r\\n                        <select type=\\\"\\\" formControlName=\\\"bizActyStsKey\\\"class=\\\"form-control\\\"  id=\\\"status\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.bizActyStsKey.errors }\\\">\\r\\n                            <option *ngFor=\\\"let status of statusArray\\\" [value]=\\\"status.codeKey\\\" >{{status.codeValue}}</option>\\r\\n                          </select>\\r\\n                        <div *ngIf=\\\"submitted && form.bizActyStsKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.bizActyStsKey.errors.required\\\">Status is required</div>\\r\\n                        </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer text-center\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" (click)=\\\"addBusinessActivitySubmit()\\\">Ok</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n              <th>Business Activity ID</th>\\r\\n              <th>Business Activity Name</th>\\r\\n              <th>Sort Order</th>\\r\\n              <th>Status</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n</thead>\\r\\n<tbody>\\t\\r\\n  <tr *ngFor=\\\"let businessActivity of businessActivities\\\">\\r\\n    <td>{{businessActivity.bizActyId}}</td> \\r\\n    <td>{{businessActivity.bizActyNm}}</td>\\r\\n    <td>{{businessActivity.bizActySortOrdr}}</td>\\r\\n    <td>{{findValueByKey(businessActivity.bizActyStsKey)}}</td>\\r\\n    <td>\\t\\t\\t\\t\\t\\t\\r\\n      <a  class=\\\"iconBtn\\\" (click)=\\\"onEdit(businessActivity)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n      <a  class=\\\"iconBtn delBtn\\\" (click)=\\\"onDelete(businessActivity.bizActySeq)\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n      <!-- <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n    </td>\\r\\n  </tr>\\r\\n</tbody>\\r\\n</table>\\r\\n      </div>\\t\\r\\n      <!-- <div class=\\\"back\\\">\\r\\n        <a href=\\\"setup.html\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n      </div> -->\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BusinessActivityService } from '../../../shared/services/business-activity.service';\r\nimport { CommonService } from '../../../shared/services/common.service';\r\nimport { BusinessActivity } from '../../../shared/models/business-activity.model';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-business-activity',\r\n  templateUrl: './business-activity.component.html',\r\n  styleUrls: ['./business-activity.component.css']\r\n})\r\nexport class BusinessActivityComponent implements OnInit {\r\n\r\n  public businessActivityForm: FormGroup;\r\n  submitted = false;\r\n\r\n  statusArray : any[];\r\n  public businessActivities: BusinessActivity[];\r\n  public addBusinessActivity: BusinessActivity = new BusinessActivity();\r\n  public isEdit: Boolean = false;\r\n  constructor(private formBuilder: FormBuilder,private businessActivityService: BusinessActivityService, private commonService: CommonService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n\r\n    this.businessActivityForm = this.formBuilder.group({  \r\n      bizActyNm: ['', Validators.required],\r\n      bizActyStsKey: ['', Validators.required],\r\n      bizActySortOrdr: ['', Validators.required],\r\n      });\r\n\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );   \r\n    this.businessActivityService.getBusinessActivities(sessionStorage.getItem('bizSectSeq')).subscribe(data => this.businessActivities = data);\r\n  }\r\n\r\n  get form() \r\n  { \r\n    return this.businessActivityForm.controls; \r\n  }\r\n\r\n  onAddNewClick() {\r\n    this.isEdit = false;\r\n    this.businessActivityForm.reset();\r\n    this.addBusinessActivity = new BusinessActivity();\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n  \r\n  addBusinessActivitySubmit(){\r\n    this.submitted = true;\r\n    if (this.businessActivityForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.addBusinessActivity.bizActyNm= this.businessActivityForm.value.bizActyNm;\r\n    this.addBusinessActivity.bizActyStsKey= this.businessActivityForm.value.bizActyStsKey;\r\n    this.addBusinessActivity.bizActySortOrdr= this.businessActivityForm.value.bizActySortOrdr;\r\n    this.addBusinessActivity.bizSectSeq= parseInt(sessionStorage.getItem('bizSectSeq'));\r\n\r\n    (<any>$('#businessector')).modal('hide');\r\n    console.log(this.addBusinessActivity);\r\n    if(this.isEdit) {\r\n      this.businessActivityService.updateBusinessActivity(this.addBusinessActivity).subscribe(data => {\r\n        this.addBusinessActivity = data;\r\n        this.businessActivityService.getBusinessActivities(sessionStorage.getItem('bizSectSeq')).subscribe(data => this.businessActivities = data);\r\n      });\r\n    }\r\n    else {\r\n      this.businessActivityService.addBusinessActivity(this.addBusinessActivity).subscribe(data => {\r\n        this.addBusinessActivity = data;\r\n        this.businessActivityService.getBusinessActivities(sessionStorage.getItem('bizSectSeq')).subscribe(data => this.businessActivities = data);\r\n      }); \r\n    }         \r\n  }\r\n\r\n  onEdit(businessActivity){\r\n    this.isEdit = true;\r\n    this.businessActivityForm.patchValue(businessActivity);\r\n    console.log(businessActivity);\r\n    this.addBusinessActivity = businessActivity;\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n\r\n  onDelete(businessActivity) { \r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this Business Activity?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.businessActivityService.deleteBusinessActivity(businessActivity).subscribe(data => {\r\n          this.businessActivityService.getBusinessActivities(sessionStorage.getItem('bizSectSeq')).subscribe(data => this.businessActivities = data);\r\n        }); \r\n      }\r\n    });\r\n    console.log(businessActivity);  \r\n  }\r\n  findValueByKey(key) {\r\n    let status = '';\r\n    if (this.statusArray) {\r\n      this.statusArray.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"mysearchbox\\\">\\r\\n              <h6 class=\\\"d-inline-block searchshow\\\">Business Sector\\r\\n                <!-- <i class=\\\"fa fa-search\\\"></i> -->\\r\\n              </h6>\\r\\n              <div class=\\\"mysearch\\\">\\r\\n                <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                 <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6 addBtn\\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#businessector\\\" (click)=\\\"onAddNewClick()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n          </div>\\r\\n          <div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n            <div class=\\\"modal-dialog big mymodal\\\"> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n              <!-- Modal content-->\\r\\n              <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                  <h5 class=\\\"modal-title\\\">Business Sector</h5>\\r\\n                </div>\\r\\n                <form [formGroup]=\\\"businessSectorForm\\\" (ngSubmit)=\\\"addBusinessSectorSubmit()\\\">\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                <ul class=\\\"infolist\\\">\\r\\n                </ul>\\r\\n                  <div class=\\\"cRow\\\">\\r\\n                      <div class=\\\"cCol2\\\">\\r\\n                          <label>Business Sector Name</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"bizSectNm\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.bizSectNm.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.bizSectNm.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"form.bizSectNm.errors.required\\\">Business Sector Name is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                            <label>Sort Order</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"bizSectSortOrdr\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.bizSectSortOrdr.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && form.bizSectSortOrdr.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"form.bizSectSortOrdr.errors.required\\\">Sort Order is required</div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n  \\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                        <label>Status:</label>\\r\\n                        <select type=\\\"\\\" formControlName=\\\"bizSectStsKey\\\"class=\\\"form-control\\\"  id=\\\"status\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.bizSectStsKey.errors }\\\">\\r\\n                            <option *ngFor=\\\"let status of statusArray\\\" [value]=\\\"status.codeKey\\\" >{{status.codeValue}}</option>\\r\\n                          </select>\\r\\n                        <div *ngIf=\\\"submitted && form.bizSectStsKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.bizSectStsKey.errors.required\\\">Status is required</div>\\r\\n                        </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer text-center\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" (click)=\\\"addBusinessSectorSubmit()\\\">Ok</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n              <th>Business Sector ID</th>\\r\\n              <th>Business Sector Name</th>\\r\\n              <th>Sort Order</th>\\r\\n              <th>Status</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n</thead>\\r\\n<tbody>\\t\\r\\n  <tr *ngFor=\\\"let businessSector of businessSectors\\\">\\r\\n    <td>{{businessSector.bizSectId}}</td> \\r\\n    <td><a [routerLink]=\\\"['/setup/business-activity']\\\" (click)=\\\"onClick(businessSector.bizSectSeq)\\\" >{{businessSector.bizSectNm}}</a></td>\\r\\n    <td>{{businessSector.bizSectSortOrdr}}</td> \\r\\n    <td>{{findValueByKey(businessSector.bizSectStsKey)}}</td>\\r\\n    <td>\\t\\t\\t\\t\\t\\t\\r\\n      <a  class=\\\"iconBtn\\\" (click)=\\\"onEdit(businessSector)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n      <a  class=\\\"iconBtn delBtn\\\" (click)=\\\"onDelete(businessSector.bizSectSeq)\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n      <!-- <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n    </td>\\r\\n  </tr>\\r\\n</tbody>\\r\\n</table>\\r\\n      </div>\\t\\r\\n      <!-- <div class=\\\"back\\\">\\r\\n        <a href=\\\"setup.html\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n      </div> -->\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BusinessSectorService } from '../../../shared/services/business-sector.service';\r\nimport { CommonService } from '../../../shared/services/common.service';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\nimport { BusinessSector } from '../../../shared/models/business-sector.model';\r\n\r\n@Component({\r\n  selector: 'app-business-sector',\r\n  templateUrl: './business-sector.component.html',\r\n  styleUrls: ['./business-sector.component.css']\r\n})\r\nexport class BusinessSectorComponent implements OnInit {\r\n\r\n  public businessSectorForm: FormGroup;\r\n  submitted = false;\r\n\r\n  statusArray : any[];\r\n  public businessSectors: BusinessSector[];\r\n  public addBusinessSector: BusinessSector = new BusinessSector();\r\n  public isEdit: Boolean = false;\r\n  constructor(private formBuilder: FormBuilder,private businessSectorService: BusinessSectorService, private commonService: CommonService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n\r\n    this.businessSectorForm = this.formBuilder.group({  \r\n      bizSectNm: ['', Validators.required],\r\n      bizSectStsKey: ['', Validators.required],\r\n      bizSectSortOrdr: ['', Validators.required],\r\n  });\r\n\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );   \r\n    this.businessSectorService.getBusinessSectors().subscribe(data => this.businessSectors = data);\r\n  }\r\n\r\n  get form() \r\n  { \r\n    return this.businessSectorForm.controls; \r\n  }\r\n\r\n  onClick(key)\r\n  {\r\n    sessionStorage.setItem('bizSectSeq', JSON.stringify(key));\r\n  }\r\n  \r\n  onAddNewClick() {\r\n    this.isEdit = false;\r\n    this.businessSectorForm.reset();\r\n    this.addBusinessSector = new BusinessSector();\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n  \r\n  addBusinessSectorSubmit(){\r\n    this.submitted = true;\r\n    if (this.businessSectorForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.addBusinessSector.bizSectNm= this.businessSectorForm.value.bizSectNm;\r\n    this.addBusinessSector.bizSectStsKey= this.businessSectorForm.value.bizSectStsKey;\r\n    this.addBusinessSector.bizSectSortOrdr= this.businessSectorForm.value.bizSectSortOrdr;\r\n\r\n    (<any>$('#businessector')).modal('hide');\r\n    console.log(this.addBusinessSector);\r\n    if(this.isEdit) {\r\n      this.businessSectorService.updateBusinessSector(this.addBusinessSector).subscribe(data => {\r\n        this.addBusinessSector = data;\r\n        this.businessSectorService.getBusinessSectors().subscribe(data => this.businessSectors = data);\r\n      });\r\n    }\r\n    else {\r\n      this.businessSectorService.addBusinessSector(this.addBusinessSector).subscribe(data => {\r\n        this.addBusinessSector = data;\r\n        this.businessSectorService.getBusinessSectors().subscribe(data => this.businessSectors = data);\r\n      }); \r\n    }         \r\n  }\r\n\r\n  onEdit(businessSector){\r\n    this.isEdit = true;\r\n    this.businessSectorForm.patchValue(businessSector);\r\n    console.log(businessSector);\r\n    this.addBusinessSector = businessSector;\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n\r\n  onDelete(businessSector) { \r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this BusinessSector?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.businessSectorService.deleteBusinessSector(businessSector).subscribe(data => {\r\n          this.businessSectorService.getBusinessSectors().subscribe(data => this.businessSectors = data);\r\n        }); \r\n      }\r\n    });\r\n    console.log(businessSector);  \r\n  }\r\n  findValueByKey(key) {\r\n    let status = '';\r\n    if (this.statusArray) {\r\n      this.statusArray.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n    line-height: 1;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  tr.mat-header-row {\\r\\n    height: 1.5px;\\r\\n}\\r\\n  \\r\\n  tr.mat-row {\\r\\n  height: 1.5px;\\r\\n}\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  color: rgba(0,0,0,.87);\\r\\n  font-size: 0.750rem;\\r\\n}\\r\\n  \\r\\n  .trx-table td:last-child {\\r\\n text-align: center;\\r\\n}\\r\\n  \\r\\n  .td-center {\\r\\n  text-align: right;\\r\\n}\\r\\n  \\r\\n  .td-right{\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light th:last-child {\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light th:first-child {\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light>th {\\r\\n  padding: .45rem 0rem;\\r\\n}\\r\\n  \\r\\n  th.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n  \\r\\n  .mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n  \\r\\n  th.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n}\\r\\n  \\r\\n  td,th{\\r\\n  padding-left: 16px !important;\\r\\n  width: 11% !important;\\r\\n}\\r\\n  \\r\\n  td:first-child, th:first-child{\\r\\n  padding-left: 16px !important;\\r\\n  width: 15% !important;\\r\\n}\\r\\n  \\r\\n  .w-20{\\r\\n  width: 20% !important;\\r\\n}\\r\\n  \\r\\n  th{\\r\\n  font-size: 12px;\\r\\n  font-weight: 700;\\r\\n}\\r\\n  \\r\\n  th:last-child{\\r\\n  text-align: right;\\r\\n}\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Search\\r\\n                  <i class=\\\"fa fa-search\\\"> </i>\\r\\n                </h6>\\r\\n              </div>\\r\\n              <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n                <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"col-sm-10\\\" style=\\\"float:left;\\\">\\r\\n                    <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                      <input id=\\\"searchBox\\\" (keyup)=\\\"searchValue()\\\" autofocus matInput name=\\\"searchValue\\\"\\r\\n                        [(ngModel)]=\\\"searchVal\\\" placeholder=\\\"Search\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\" style=\\\"float:right;\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\">Search</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"openCityModal()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n\\r\\n\\r\\n              <div class=\\\"modal fade\\\" id=\\\"AssignLocation\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog bigger mymodal\\\">\\r\\n                  <!-- Modal content-->\\r\\n                  <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                      <h5 class=\\\"modal-title\\\">Assign Location </h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                      <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table last-left\\\" id=\\\"myTable1\\\" style=\\\"text-align:left\\\">\\r\\n                          <thead class=\\\"thead-light last-left\\\">\\r\\n                            <tr>\\r\\n                              <th></th>\\r\\n                              <th>Province</th>\\r\\n                              <th>District</th>\\r\\n                              <th>Tehseel</th>\\r\\n                              <th width=\\\"20%\\\">UC</th>\\r\\n\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                              <tr *ngFor=\\\"let location of ucs\\\">\\r\\n                                  <th><input type=\\\"checkbox\\\" [checked]=\\\"location.checked\\\" value=\\\"{{location.checked}}\\\"\\r\\n                                    (click)=\\\"changeRadioStatus($event, location)\\\"></th>\\r\\n                                  <th>{{location.provinceName}}</th>\\r\\n                                  <th>{{location.districtName}}</th>\\r\\n                                  <th>{{location.tehsilName}}</th>\\r\\n                                  <th width=\\\"20%\\\">{{location.ucName}}</th>\\r\\n    \\r\\n                                </tr>\\r\\n                            \\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"modal-footer text-center pt-0\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Ok</button>\\r\\n                      <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button> -->\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"modal fade\\\" id=\\\"addprduct\\\" role=\\\"dialog\\\">\\r\\n                <form (ngSubmit)=\\\"addCityForm()\\\" #cityForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"modal-dialog big mymodal\\\">\\r\\n\\r\\n                    <!-- Modal content-->\\r\\n                    <div class=\\\"modal-content text-left\\\">\\r\\n                      <div class=\\\"modal-header\\\">\\r\\n                        <h5 class=\\\"modal-title\\\">Add City</h5>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-body\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol1\\\"></div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input matInput type=\\\"text\\\" value=\\\"\\\" required id=\\\"CityName\\\" name=\\\"cityName\\\" [(ngModel)]=\\\"city.cityNm\\\"\\r\\n                                maxlength=\\\"15\\\" #cityName=\\\"ngModel\\\" (keypress)=\\\"alphaNumeric($event)\\\" placeholder=\\\"City Name:\\\">\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol4\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input matInput type=\\\"text\\\" value=\\\"\\\" required id=\\\"Description\\\" name=\\\"description\\\"\\r\\n                                [(ngModel)]=\\\"city.cityCmnt\\\" maxlength=\\\"15\\\" #description=\\\"ngModel\\\" (keypress)=\\\"alphaNumeric($event)\\\"\\r\\n                                placeholder=\\\"Description:\\\">\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-footer text-center\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\" [disabled]=\\\"!cityForm.valid\\\" >Ok</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n            <!---- DATA TABLES---->\\r\\n\\r\\n            <div class=\\\"table-responsive mb-md-5\\\">\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" multiTemplateDataRows matSort>\\r\\n  \\r\\n                <!-- Reference Id Column -->\\r\\n                <ng-container matColumnDef=\\\"cityCode\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>City Code</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let city\\\">{{city.cityCd}}</td>\\r\\n                </ng-container>\\r\\n  \\r\\n                <!-- Description Column -->\\r\\n                <ng-container matColumnDef=\\\"cityName\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>City Name</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let city\\\">{{city.cityNm}}</td>\\r\\n                </ng-container>\\r\\n  \\r\\n                <!-- Category Column -->\\r\\n                <ng-container matColumnDef=\\\"desc\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let city\\\">{{(city.cityCmnt == null)? \\\"\\\": city.cityCmnt}}</td>\\r\\n                </ng-container>\\r\\n  \\r\\n                <!-- Action Column -->\\r\\n                <ng-container matColumnDef=\\\"action\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let city\\\">\\r\\n                      <a class=\\\"iconBtn\\\" (click)=\\\"openUcModal(city)\\\"><img src=\\\"assets/images/uc.png\\\"\\r\\n                        alt=\\\"\\\"></a>\\r\\n                    <a (click)=\\\"openCityModalToEdit(city)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <!-- <a (click)=\\\"deleteItem(1)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>  -->\\r\\n                    <a class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </ng-container>\\r\\n  \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n              </table>\\r\\n  \\r\\n              <mat-paginator [length]=\\\"datalength\\\"  [pageSizeOptions]=\\\"[10, 15, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n\\r\\n          <!-- <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>City Code</th>\\r\\n                  <th>City Name</th>\\r\\n                  <th>Description</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let city of cities\\\">\\r\\n                  <td>{{city.cityCd}}</td>\\r\\n                  <td>{{city.cityNm}} </td>\\r\\n                  <td>{{(city.cityCmnt == null)? \\\"\\\": city.cityCmnt}}</td>\\r\\n                  <td>\\r\\n                    <a class=\\\"iconBtn\\\" (click)=\\\"openUcModal(city)\\\"><img src=\\\"assets/images/uc.png\\\"\\r\\n                        alt=\\\"\\\"></a>\\r\\n                    <a (click)=\\\"openCityModalToEdit(city)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                     <a (click)=\\\"deleteItem(1)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a> \\r\\n                    <a class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                \\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport swal from \"sweetalert2\";\r\nimport { CommonService } from '../../../shared/services/common.service';\r\nimport { CityService } from '../../../shared/services/city.service';\r\nimport { City } from '../../../shared/models/city.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UC } from '../../../shared/models/UC.model';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { merge } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrls: ['./city.component.css']\r\n})\r\nexport class CityComponent implements OnInit {\r\n  \r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: any;\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.filterValue = filterValue;\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.datalength = this.countBeforeFilter;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      return;\r\n    }\r\n    this.getFilteredData(filterValue.trim().toLowerCase())\r\n  }\r\n\r\n  searchValue() {\r\n    this.filterValue = this.searchVal.trim();\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      this.datalength = 0;\r\n      setTimeout(() => { this.datalength = this.countBeforeFilter; }, 200);\r\n      return;\r\n    }\r\n  }\r\n\r\n  dataSource: any;\r\n  datalength: Number = 0;\r\n  lastPageIndex = 0;\r\n  dataBeforeFilter; \r\n  countBeforeFilter;\r\n  lastPageIndexBeforeFilter;\r\n\r\n  filterValue: any = \"\";\r\n  searchVal = \"\";\r\n  isCount: boolean = true;\r\n\r\n\r\n  isEdit = false;\r\n  city: City = new City();\r\n  cities: City[] = [];\r\n  ucs:UC[]=[];\r\n  constructor(private cityService: CityService, private toaster: ToastrService,\r\n    private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit() {\r\n    this.displayedColumns = ['cityCode', 'cityName', 'desc', 'action'];\r\n    this.getAllCities();\r\n    this.getAllUCs();\r\n  }\r\n  getAllUCs(){\r\n    this.spinner.show();\r\n    this.cityService.getAllUcs().subscribe(res => {\r\n      this.spinner.hide();\r\n      this.ucs = res;\r\n      this.ucs.forEach(element => {\r\n        element.checked = false;\r\n      });\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error)\r\n    })\r\n  }\r\n  cityUcs : any[] = [];\r\n  openUcModal(city){\r\n    this.city = city;\r\n    this.ucs.forEach(element => {\r\n      element.checked = false;\r\n    });\r\n    this.getUcsForCity();\r\n    \r\n    (<any>$('#AssignLocation')).modal('show');\r\n  }\r\n  getUcsForCity(){\r\n    this.cityService.getUcsForCity(this.city.citySeq).subscribe(res => {\r\n      this.spinner.hide();\r\n      this.cityUcs = res;\r\n      this.cityUcs.forEach(cityuc=>{\r\n        this.ucs.forEach(element => {\r\n          if(cityuc.ucSeq == element.ucSeq){\r\n            element.checked = true;\r\n            element.cityUcRelSeq = cityuc.cityUcRelSeq;\r\n          }\r\n        });\r\n      })\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error)\r\n    })\r\n  }\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => this.loadNextPage())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n\r\n  getAllCities() {\r\n    this.isCount = true;\r\n    this.spinner.show();\r\n    this.cities = [];\r\n    this.dataSource = new MatTableDataSource(this.cities);\r\n    this.paginator.pageIndex = 0;\r\n    this.lastPageIndex = 0;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.searchVal = '';\r\n    this.filterValue = '';\r\n\r\n    this.cityService.getCities(this.paginator.pageIndex, 10, \"\",this.isCount).subscribe(res => {\r\n      this.spinner.hide();\r\n      this.cities = res.cities;\r\n\r\n      this.dataSource = new MatTableDataSource(this.cities);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = res.count;\r\n  \r\n        this.dataBeforeFilter = this.dataSource.data;\r\n        this.countBeforeFilter = res.count;\r\n        this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  loadNextPage(){\r\n    this.isCount = false;\r\n    if (this.paginator.pageIndex < this.lastPageIndex)\r\n    return\r\n    if (this.dataSource.paginator.length == this.dataSource.data.length)\r\n    return;\r\n    if (((this.paginator.pageIndex + 1) * this.paginator.pageSize) - this.dataSource.data.length > 0) {\r\n      this.spinner.show();\r\n      this.cityService.getCities(this.paginator.pageIndex, this.paginator.pageSize, this.filterValue, this.isCount).subscribe(data => {\r\n        this.spinner.hide();\r\n        this.cities = data.cities;\r\n        this.lastPageIndex = this.lastPageIndex + 1;\r\n        this.dataSource.data = this.dataSource.data.concat(data.cities);\r\n\r\n        data.count = this.datalength; \r\n        this.datalength = 0;\r\n        setTimeout(() => { this.datalength = data.count; }, 200);\r\n\r\n        if (this.filterValue.length == 0) {\r\n          this.dataBeforeFilter = this.dataSource.data;\r\n          this.countBeforeFilter = data.count;\r\n          this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n        }\r\n      }, error =>{\r\n          this.spinner.hide();\r\n          console.log('err', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  getFilteredData(filterValue:string){\r\n    this.isCount = true;\r\n      this.paginator.pageIndex = 0;\r\n      this.spinner.show();\r\n      this.cityService.getCities(this.paginator.pageIndex, this.paginator.pageSize, filterValue, this.isCount).subscribe(data => {\r\n        this.cities = data.cities;\r\n        this.spinner.hide();\r\n        if (this.cities.length <= 0) {\r\n          this.toaster.info('No Data Found Against This Search', 'Information')\r\n        };\r\n  \r\n        this.dataSource = new MatTableDataSource(this.cities);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n      }, error =>{\r\n        this.spinner.hide();\r\n        console.log('err', error);\r\n        });\r\n  }\r\n  openCityModal() {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.city = new City();\r\n    this.isEdit = false;\r\n  }\r\n  openCityModalToEdit(city) {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.city = city;\r\n    this.isEdit = true;\r\n  }\r\n\r\n  addCityForm() {\r\n    if (!this.isEdit) {\r\n      this.spinner.show();\r\n      this.cityService.addCity(this.city).subscribe(res => {\r\n        this.getAllCities();\r\n        (<any>$('#addprduct')).modal('hide');\r\n      }, error => {\r\n        this.spinner.hide();\r\n        console.log(error)\r\n      })\r\n    } else {\r\n      this.spinner.show();\r\n      this.cityService.editCity(this.city).subscribe(res => {\r\n        this.getAllCities();\r\n        (<any>$('#addprduct')).modal('hide');\r\n      }, error => {\r\n        this.spinner.hide();\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n  changeRadioStatus(event, uc){\r\n    console.log(uc)\r\n    console.log(event)\r\n    uc.citySeq = this.city.citySeq;\r\n    // alert(uc.checked);\r\n    if(event.target.checked == true){\r\n      this.cityService.addCityUcRel(uc).subscribe(res => {\r\n        uc = res;\r\n      });\r\n    }else{\r\n      this.cityService.deleteCityUcRel(uc.cityUcRelSeq).subscribe(res => {\r\n      });\r\n    }\r\n\r\n  }\r\n  deleteItem(city) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this city?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.cityService.deleteCity(city.citySeq).subscribe(res => {\r\n          this.getAllCities();\r\n          swal(\r\n            'Deleted!',\r\n            'City has been deleted.',\r\n            'success'\r\n          );\r\n        }, error => {\r\n          this.spinner.hide();\r\n          console.log(error)\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  alphaNumeric(event: any) {\r\n    const pattern = /[0-9a-zA-Z / ]/;\r\n\r\n    const inputChar = String.fromCharCode(event.charCode);\r\n    if (event.charCode != 8 && !pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  showFields = false;\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n  closeField() {\r\n    this.showFields = false;\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.mat-cell, .mat-header-cell {\\r\\n  font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n  width: 100%;\\r\\n  }\\r\\n  \\r\\n  th.mat-header-cell {\\r\\n      vertical-align: middle;\\r\\n  }\\r\\n  \"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Common Code Values\\r\\n                  <i class=\\\"fa fa-search\\\"> </i>\\r\\n                </h6>\\r\\n              </div>\\r\\n              <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n                <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"col-sm-10\\\" style=\\\"float:left;\\\">\\r\\n                    <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n                <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"addItem()\\\">\\r\\n                  <i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>Code</th>\\r\\n                  <th>Description</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Sort Order</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let code of pagedItems\\\">\\r\\n                  <td>{{code.refCd}}</td>\\r\\n                  <td>{{code.refCdDscr}}</td>\\r\\n                  <td >{{code.activeFlg ? 'Active': 'In Active' }}</td>\\r\\n                  <td>{{code.sortOrder}}</td>\\r\\n                  <td>\\r\\n                    <a (click)=\\\"editItem(code.refCdSeq)\\\" class=\\\"iconBtn\\\">\\r\\n                      <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                    </a>\\r\\n                    <a (click)=\\\"deleteItem(code.refCdSeq)\\\" class=\\\"iconBtn delBtn\\\">\\r\\n                      <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                    </a>\\r\\n                    <a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n\\r\\n\\r\\n          <!---- DATA TABLES---->\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" multiTemplateDataRows matSort>\\r\\n\\r\\n              <!-- Code Column -->\\r\\n              <ng-container matColumnDef=\\\"refCd\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\\r\\n                <td mat-cell *matCellDef=\\\"let cmncod\\\">{{cmncod.refCd}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!--Description Column -->\\r\\n              <ng-container matColumnDef=\\\"refCdDscr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\r\\n                <td mat-cell *matCellDef=\\\"let cmncod\\\">{{cmncod.refCdDscr}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Status Column -->\\r\\n              <ng-container matColumnDef=\\\"activeFlg\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\r\\n                <td mat-cell *matCellDef=\\\"let cmncod\\\">{{cmncod.activeFlg ? 'Active': 'In Active' }}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Sort Order Column -->\\r\\n              <ng-container matColumnDef=\\\"sortOrder\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Sort Order</th>\\r\\n                <td mat-cell *matCellDef=\\\"let cmncod\\\">{{cmncod.sortOrder}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Action Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let cmncod\\\">\\r\\n                  <a (click)=\\\"editItem(cmncod.refCdSeq)\\\" class=\\\"iconBtn\\\">\\r\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                  </a>\\r\\n                  <a (click)=\\\"deleteItem(cmncod.refCdSeq)\\\" class=\\\"iconBtn delBtn\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[10, 20]\\\" showFirstLastButtons>\\r\\n            </mat-paginator>\\r\\n          </div>\\r\\n          <div class=\\\"back\\\">\\r\\n            <a routerLink=\\\"/setup\\\" class=\\\"btn btn-primary btn-min\\\">\\r\\n              <i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n          </div>\\r\\n          <nav aria-label=\\\"Page navigation \\\">\\r\\n            <ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\r\\n              <li class=\\\"page-item disabled\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog mymodal\\\">\\r\\n\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Add Common Code Value</h5>\\r\\n      </div>\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"commonCodeValueForm\\\" (ngSubmit)=\\\"onCommonCodeValueSubmit()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <!-- <div class=\\\"cCol3-col\\\">\\r\\n              <label>Code:</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"valueCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.valueCode.errors }\\\"\\r\\n              />\\r\\n            </div> -->\\r\\n            <div class=\\\"cCol3-col\\\">\\r\\n              <mat-form-field>\\r\\n                <input (keypress)=\\\"keyPress($event)\\\" type=\\\"text\\\" matInput maxlength=\\\"250\\\"\\r\\n                  formControlName=\\\"valueDescription\\\" placeholder=\\\"Description:\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol3-col\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Status\\\" formControlName=\\\"activeStatus\\\" required>\\r\\n                  <mat-option value=\\\"true\\\">Active</mat-option>\\r\\n                  <mat-option value=\\\"false\\\">In Active</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"cCol3-col\\\">\\r\\n              <mat-form-field>\\r\\n                <input (keypress)=\\\"onlyNumbers($event)\\\" type=\\\"text\\\" matInput maxlength=\\\"3\\\" pattern=\\\"([0-9]\\\\s*)+\\\"\\r\\n                  formControlName=\\\"sortOrder\\\" placeholder=\\\"Sort Order:\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"commonCodeValueForm.invalid\\\">Ok</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataService } from '../../../shared/services/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n\tselector: 'app-common-code-values',\r\n\ttemplateUrl: './common-code-values.component.html',\r\n\tstyleUrls: ['./common-code-values.component.css']\r\n})\r\nexport class CommonCodeValuesComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: any;\r\n  dataSource: any;\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n        this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\t//commonCodeValueList: any = [];\r\n\tcommonCodeValueForm: FormGroup;\r\n\tsubmitted = false;\r\n  showFields = false;\r\n\t// array of all items to be paged\r\n\tprivate allItems: any = [];\r\n\t// pager objecte\r\n\tpager: any = {};\r\n\t// paged items\r\n\tpagedItems: any = [];\r\n\tconstructor(private router: Router, private DataService: DataService, private formBuilder: FormBuilder,\r\n\t\tprivate spinner: NgxSpinnerService, private toaster: ToastrService) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n    this.displayedColumns = ['refCd', 'refCdDscr', 'activeFlg', 'sortOrder', 'action'];\r\n\t\tthis.commonCodeValueForm = this.formBuilder.group({\r\n\t\t\tgroupKey: [sessionStorage.getItem(\"clickCommonCode\")],\r\n\t\t\tformSaveKey: ['add'],\r\n\t\t\tvalueDescription: ['', Validators.required],\r\n\t\t\tactiveStatus: ['', Validators.required],\r\n\t\t\tsortOrder: ['', Validators.required],\r\n\t\t});\r\n\t\tthis.listing(1);\r\n\t}\r\n\tlisting(page:number) {\r\n\t\tthis.spinner.show();\r\n\t\tthis.DataService.getCommonCodeValue(sessionStorage.getItem(\"clickCommonCode\")).subscribe((data) => {\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.spinner.hide();\r\n\t\t\tthis.allItems = data;\r\n\t\t\t// initialize to page 1\r\n\t\t\tthis.setPage(page);\r\n      this.dataSource = new MatTableDataSource(this.allItems);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n\t\t}, (error) => {\r\n\t\t\tthis.spinner.hide();\r\n\t\t\tconsole.log(\"err\");\r\n\t\t\tconsole.log(\"err\", error);\r\n\t\t});\r\n\t}\r\n\t// convenience getter for easy access to form fields\r\n\tget f() { return this.commonCodeValueForm.controls; }\r\n\tonCommonCodeValueSubmit() {\r\n\t\tthis.submitted = true;\r\n\t\t// stop here if form is invalid\r\n\t\tif (this.commonCodeValueForm.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.spinner.show();\r\n\t\tlet formValue: any = this.commonCodeValueForm.value;\r\n\t\tconsole.log(formValue.formSaveKey);\r\n\t\tif (formValue.formSaveKey === \"add\") {\r\n\t\t\tthis.DataService.addCommonCodeValue(formValue).subscribe((data) => {\r\n\t\t\t\t(<any>$(\"#businessector\")).modal('hide');\r\n\t\t\t\t// this.pagedItems.splice(0, 0, data.group);\r\n\t\t\t\t// this.pagedItems.push(data.group);\r\n\t\t\t\t// this.allItems.push(data.group);\r\n\t\t\t\tthis.listing(1);\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tthis.spinner.hide();\r\n\t\t\t\tsessionStorage.setItem(\"groupKey\", data['refCdSeq']);\r\n\t\t\t}, (error) => {\r\n\t\t\t\tthis.spinner.hide();\r\n\t\t\t\tconsole.log(\"err\", error);\r\n\t\t\t});\r\n\t\t} else if (formValue.formSaveKey === \"update\") {\r\n\t\t\tthis.DataService.updateCommonCodeValue(formValue).subscribe((data) => {\r\n\t\t\t\t(<any>$(\"#businessector\")).modal('hide');\r\n\t\t\t\tthis.spinner.hide();\r\n\t\t\t\tthis.listing(this.pager.currentPage);\r\n\t\t\t\t//this.pagedItems.splice(this.pagedItems.indexOf(data.group['refCdSeq']), 1);\r\n\t\t\t\t//this.pagedItems.push(data.group);\r\n\t\t\t\t//console.log(data.group['refCdSeq']);\r\n\t\t\t\tsessionStorage.setItem(\"groupKey\", data['refCdSeq']);\r\n\t\t\t}, (error) => {\r\n\t\t\t\tthis.spinner.hide();\r\n\t\t\t\tconsole.log(\"err\", error);\r\n\t\t\t});\r\n\t\t\t//console.log(formValue.groupSaveKey);\r\n\t\t}\r\n\t\t//this.DataService.formValue.groupSaveKey(formValue).subscribe((data) =>{\r\n\r\n\t\treturn false;\r\n\t}\r\n\t//pagenation\r\n\tsetPage(page: number) {\r\n\t\t// get pager object from service\r\n\t\tthis.pager = this.DataService.getPager(this.allItems.length, page);\r\n\r\n\t\t// get current page of items\r\n\t\tthis.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n\t}\r\n\t//delete\r\n\tdeleteItem(passedId) {\r\n\t\tswal({\r\n\t\t\ttitle: 'Are you sure?',\r\n\t\t\ttext: \"Are you sure you want to delete this Common Code Value?\",\r\n\t\t\ttype: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Yes, delete it!'\r\n\t\t}).then((result) => {\r\n\t\t\tif (result.value) {\r\n\t\t\t\tthis.DataService.delCommonCodeValue(passedId).subscribe(result => {\r\n\t\t\t\t\t//this.pagedItems.splice(this.pagedItems.indexOf(passedId), 1);\r\n\t\t\t\t\tthis.listing(this.pager.currentPage);\r\n\t\t\t\t\tswal(\r\n\t\t\t\t\t\t'Deleted!',\r\n\t\t\t\t\t\t'Common code values has been deleted.',\r\n\t\t\t\t\t\t'success'\r\n\t\t\t\t\t)\r\n\t\t\t\t}, error => console.log('There was an error: ', error));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\t//add\r\n\taddItem() {\r\n\t\tthis.submitted = false;\r\n\t\t(<any>$(\"#businessector\")).modal('show');\r\n\t\tthis.commonCodeValueForm = this.formBuilder.group({\r\n\t\t\tgroupKey: [sessionStorage.getItem(\"clickCommonCode\")],\r\n\t\t\tformSaveKey: ['add'],\r\n\t\t\tvalueDescription: ['', Validators.required],\r\n\t\t\tactiveStatus: ['', Validators.required],\r\n\t\t\tsortOrder: ['', Validators.required],\r\n\t\t});\r\n\t}\r\n\t//edit\r\n\teditItem(passedId) {\r\n\t\tconsole.log('edit');\r\n\t\tthis.DataService.editCommonCodeValue(passedId).subscribe(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t\t(<any>$(\"#businessector\")).modal('show');\r\n\t\t\tthis.commonCodeValueForm = this.formBuilder.group({\r\n\t\t\t\tgroupKey: [result.refCdGrpKey],\r\n\t\t\t\tcodeValueSeq: [result.refCdSeq],\r\n\t\t\t\tformSaveKey: ['update'],\r\n\t\t\t\tvalueCode: [result.refCd],\r\n\t\t\t\tvalueName: [result.refCdCmnt],\r\n\t\t\t\tactiveStatus: [\"\"+result.activeFlg, Validators.required],\r\n\t\t\t\tvalueDescription: [result.refCdDscr, Validators.required],\r\n\t\t\t\tsortOrder: [result.sortOrder, Validators.required],\r\n\t\t\t});\r\n\t\t}, error => {\r\n      console.log('There was an error: ', error);\r\n      this.toaster.error(error.message,'Common Code Value Error')\r\n    });\r\n\t}\r\n\tkeyPress(event: any) {\r\n\t\tconst pattern = /[a-zA-Z0-9 ]/;\r\n\r\n\t\tlet inputChar = String.fromCharCode(event.charCode);\r\n\t\tif (event.keyCode != 8 && !pattern.test(inputChar)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n\tonlyNumbers(event: any) {\r\n\t\tconst pattern = /[1-9]/;\r\n\t\r\n\t\tconst inputChar = String.fromCharCode(event.charCode);\r\n\t\tif (event.charCode != 8 && !pattern.test(inputChar)) {\r\n\t\t  event.preventDefault();\r\n\t\t}\r\n\t  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<main class=\\\"main\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"content mb-md-5\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"mysearchbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h6 class=\\\"d-inline-block searchshow\\\">Common Codes <i class=\\\"fa fa-search\\\"> </i></h6>\\r\\n                            <div class=\\\"mysearch\\\">\\r\\n                            \\t<a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                            \\t <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                            </div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"col-sm-6 addBtn\\\">\\r\\n          <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#cmmoncodes\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n        </div>\\r\\n        <div class=\\\"modal fade\\\" id=\\\"cmmoncodes\\\" role=\\\"dialog\\\">\\r\\n          <div class=\\\"modal-dialog mymodal\\\"> \\r\\n            \\r\\n            <!-- Modal content-->\\r\\n            <div class=\\\"modal-content\\\">\\r\\n              <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Cmmon Codes</h5>\\r\\n              </div>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <div class=\\\"cCol3-col\\\">\\r\\n                    <label>Code:</label>\\r\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"cCol3-col\\\">\\r\\n                    <label>Name:</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"cCol3-col\\\">\\r\\n                    <label>Description:</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Ok</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Code</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody>\\t\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>1</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a href=\\\"#\\\">Region Type</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                                <a routerLink=\\\"/setup/common-code-values\\\" class=\\\"iconBtn\\\"><img src=\\\"assets/images/icon2.png\\\" alt=\\\"\\\"></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n                        <tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>2</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a href=\\\"#\\\">Health Insurance Plan</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                                <a routerLink=\\\"/setup/common-code-values\\\" class=\\\"iconBtn\\\"><img src=\\\"assets/images/icon2.png\\\" alt=\\\"\\\"></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n                        <tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>3</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a href=\\\"#\\\">Payment Mode</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                                <a routerLink=\\\"/setup/common-code-values\\\" class=\\\"iconBtn\\\"><img src=\\\"assets/images/icon2.png\\\" alt=\\\"\\\"></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n                        <tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>4</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a href=\\\"#\\\">Expense Type</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                                <a routerLink=\\\"/setup/common-code-values\\\" class=\\\"iconBtn\\\"><img src=\\\"assets/images/icon2.png\\\" alt=\\\"\\\"></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n                        <tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>5</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a href=\\\"#\\\">Income Type</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                                <a routerLink=\\\"/setup/common-code-values\\\" class=\\\"iconBtn\\\"><img src=\\\"assets/images/icon2.png\\\" alt=\\\"\\\"></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<nav aria-label=\\\"Page navigation \\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"pagination justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item disabled\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a class=\\\"page-link\\\" href=\\\"#\\\" tabindex=\\\"-1\\\">Previous</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item active\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">5</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">6</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">7</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">8</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">9</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">10</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">11</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">12</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">13</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">14</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">15</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">16</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">17</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">18</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">19</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"page-item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a class=\\\"page-link\\\" href=\\\"#\\\">Next</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t</nav>\\r\\n                </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</main>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-common-code',\r\n  templateUrl: './common-code.component.html',\r\n  styleUrls: ['./common-code.component.css']\r\n})\r\nexport class CommonCodeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n          <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n            <h6 class=\\\"d-inline-block searchshow\\\">File Upload</h6>\\r\\n          <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol1 pt-0\\\">\\r\\n                  <label class=\\\"mb-0\\\">File Type:</label>\\r\\n                  <select class=\\\"form-control\\\" (change)=\\\"onSelectedIndexChanged($event.target.value)\\\">\\r\\n                    <option value=\\\"\\\" >Select</option>\\r\\n                    <option value=\\\"Budget\\\">Budget</option>\\r\\n                    <option value=\\\"Recovery\\\">Recovery</option>\\r\\n                    <option value=\\\"Target\\\">Target</option>\\r\\n                    <option value=\\\"Tagging\\\">Tagging</option>\\r\\n                    <option value=\\\"InsuranceClaim\\\">Insurance Claim</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n     <div class=\\\"cRow\\\">\\r\\n        <div class=\\\"col-full pb-0\\\"><label class=\\\"mb-0\\\">File Path:</label></div>\\r\\n                <div class=\\\"cCol2 pt-0\\\">\\r\\n                    <label class=\\\"mb-0\\\">{{filePath}}</label>\\r\\n                <!-- <input type=\\\"text\\\" text=  class=\\\"form-control\\\"> -->\\r\\n                </div>\\r\\n         <!-- <div class=\\\"cCol2 pt-0\\\">\\r\\n               <button class=\\\"btn btn-default btn-min btn-upload\\\">Browse</button>\\r\\n                </div> -->\\r\\n              </div>\\t  \\r\\n          \\r\\n    <!-- <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol1\\\">\\r\\n                <label class=\\\"mb-0\\\">Load Date:</label>\\r\\n                <div class=\\\"input-group date\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"DD / MM / YYYY\\\">\\r\\n                  <div class=\\\"input-group-append input-group-addon\\t\\\">\\r\\n                    <button class=\\\"input-group-text\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\"></i></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              </div>  -->\\r\\n        \\r\\n        <div class=\\\"buttons mt-3\\\">\\r\\n            <button [disabled]=\\\"buttonDisabled\\\" (click)=\\\"uploadFile()\\\" class=\\\"btn btn-primary btn-min mr-3\\\">Process</button>\\r\\n      <button class=\\\"btn btn-default btn-min\\\">Cancel</button>\\r\\n            \\r\\n        </div>               \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport { FileLoaderService } from '../../../shared/services/file-loader.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-file-loader',\r\n  templateUrl: './file-loader.component.html',\r\n  styleUrls: ['./file-loader.component.css']\r\n})\r\nexport class FileLoaderComponent implements OnInit {\r\n\r\n  public buttonDisabled:boolean;\r\n  public filePath:any;\r\n  public type:String;\r\n  constructor(private fileLoaderService: FileLoaderService,private  toaster: ToastrService) { }\r\n\r\n   ngOnInit() {\r\n      this.buttonDisabled = true;\r\n     }\r\n\r\n     onChange(deviceValue) {\r\n      console.log(deviceValue);\r\n    }\r\n     onSelectedIndexChanged(selectedValue)\r\n     {\r\n      if(selectedValue==\"Recovery\")\r\n      {\r\n        this.fileLoaderService.loadFilePath('/recoverydisbursementservice/api/adc-payment-file').subscribe(\r\n          d => {this.filePath=d\r\n          if(this.filePath==\"/opt/RecoveryFile/ADC_FILE.csv\")\r\n          {\r\n            this.buttonDisabled = false;\r\n            this.type=\"Recovery\";\r\n          }\r\n          else \r\n          {\r\n            this.filePath=\"File does not exist !!\";\r\n            this.buttonDisabled = true;\r\n          }\r\n          });\r\n      }\r\n      else if(selectedValue==\"Budget\")\r\n      {\r\n        this.fileLoaderService.loadFilePath('/setupservice/api/load-file-path/Budget').subscribe(\r\n          d => {this.filePath=d\r\n          if(this.filePath==\"File does not exist !!\")\r\n          {\r\n            this.buttonDisabled = true;\r\n          }\r\n          else \r\n          {\r\n            this.type=\"Budget\";\r\n            this.buttonDisabled = false;\r\n          }\r\n\r\n          });\r\n      }\r\n      else if(selectedValue==\"Target\")\r\n      {\r\n        this.fileLoaderService.loadFilePath('/setupservice/api/load-file-path/Target').subscribe(\r\n          d => {this.filePath=d\r\n          if(this.filePath==\"File does not exist !!\")\r\n          {\r\n            this.buttonDisabled = true;\r\n          }\r\n          else \r\n          {\r\n            this.type=\"Target\";\r\n            this.buttonDisabled = false;\r\n          }\r\n          });\r\n      }\r\n      else if(selectedValue==\"Tagging\")\r\n      {\r\n        this.fileLoaderService.loadFilePath('/setupservice/api/load-file-path/Tagging').subscribe(\r\n          d => {this.filePath=d\r\n          if(this.filePath==\"File does not exist !!\")\r\n          {\r\n            this.buttonDisabled = true;\r\n          }\r\n          else \r\n          {\r\n            this.type=\"Tagging\";\r\n            this.buttonDisabled = false;\r\n          }\r\n          });\r\n      }\r\n      else if(selectedValue==\"InsuranceClaim\")\r\n      {\r\n        this.fileLoaderService.loadFilePath('/setupservice/api/load-file-path/InsuranceClaim').subscribe(\r\n          d => {this.filePath=d\r\n          if(this.filePath==\"File does not exist !!\")\r\n          {\r\n            this.buttonDisabled = true;\r\n          }\r\n          else \r\n          {\r\n            this.type=\"InsuranceClaim\";\r\n            this.buttonDisabled = false;\r\n          }\r\n          });\r\n      }\r\n\r\n     }\r\n\r\n     uploadFile()\r\n     {\r\n       this.fileLoaderService.uploadFile(this.type).subscribe();\r\n       this.filePath=null;\r\n       this.buttonDisabled = true;\r\n       this.toaster.info(\"File is being loaded...\");     \r\n      }\r\n }\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Health Insurance Plan\\r\\n                  <!-- <i class=\\\"fa fa-search\\\"></i> -->\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#businessector\\\"\\r\\n                (click)=\\\"onAddNewClick()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n              <div class=\\\"modal-dialog big mymodal\\\">\\r\\n                <!-- Modal content-->\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                  <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">Health Insurance Plan</h5>\\r\\n                  </div>\\r\\n\\r\\n                  <form [formGroup]=\\\"healthInsurancePlanForm\\\" (ngSubmit)=\\\"addHealthInsurancePlanSubmit()\\\">\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                      <ul class=\\\"infolist\\\">\\r\\n                      </ul>\\r\\n                      <div class=\\\"cRow\\\">\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Plan Name:</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"planNm\\\" class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && form.planNm.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.planNm.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.planNm.errors.required\\\">Plan Name is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Annual Premium:</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"anlPremAmt\\\" class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && form.anlPremAmt.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.anlPremAmt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.anlPremAmt.errors.required\\\">Annual Premium Amount is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Max. Policy Amt. per Member</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"maxPlcyAmt\\\" class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && form.maxPlcyAmt.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.maxPlcyAmt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.maxPlcyAmt.errors.required\\\">Maximum Policy Amount is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Status:</label>\\r\\n                          <select type=\\\"\\\" formControlName=\\\"planStsKey\\\" class=\\\"form-control\\\" id=\\\"status\\\"\\r\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && form.planStsKey.errors }\\\">\\r\\n                            <option *ngFor=\\\"let status of statusArray\\\" [value]=\\\"status.codeKey\\\">{{status.codeValue}}\\r\\n                            </option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"submitted && form.planStsKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.planStsKey.errors.required\\\">Status is required</div>\\r\\n                          </div>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"cRow\\\">\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>GL Account Number:</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"glAcctNum\\\" class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && form.glAcctNum.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.glAcctNum.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.glAcctNum.errors.required\\\">GL Account Number is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Deffered Account Number:</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"dfrdAcctNum\\\" class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && form.dfrdAcctNum.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.dfrdAcctNum.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.dfrdAcctNum.errors.required\\\">Deffered Account Number is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    \\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer text-center\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\"\\r\\n                        (click)=\\\"addHealthInsurancePlanSubmit()\\\">Ok</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                    </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>Plan ID</th>\\r\\n                  <th>Plan Name</th>\\r\\n                  <th>Annual Premium</th>\\r\\n                  <th>Max Policy Amt. per Member</th>\\r\\n                  <th>GL Account Number</th>\\r\\n                  <th>Deffered Account Number</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let healthInsurancePlan of HealthInsurancePlans\\\">\\r\\n                  <td>{{healthInsurancePlan.planId}}</td>\\r\\n                  <td>{{healthInsurancePlan.planNm}}</td>\\r\\n                  <td>{{healthInsurancePlan.anlPremAmt}}</td>\\r\\n                  <td>{{healthInsurancePlan.maxPlcyAmt}}</td>\\r\\n                  <td>{{healthInsurancePlan.glAcctNum}}</td>\\r\\n                  <td>{{healthInsurancePlan.dfrdAcctNum}}</td>\\r\\n                  <td>{{findValueByKey(healthInsurancePlan.planStsKey)}}</td>\\r\\n                  <td>\\r\\n                    <a class=\\\"iconBtn\\\" (click)=\\\"onEdit(healthInsurancePlan)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <a class=\\\"iconBtn delBtn\\\" (click)=\\\"onDelete(healthInsurancePlan.hlthInsrPlanSeq)\\\"><i\\r\\n                        class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                    <!-- <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"back\\\">\\r\\n\\t\\t\\t\\t<a href=\\\"setup.html\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n\\t\\t\\t</div> -->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport { HealthInsurancePlanService } from '../../../shared/services/health-insurance-plan.service';\r\nimport { CommonService } from '../../../shared/services/common.service';\r\nimport swal from 'sweetalert2';\r\nimport { HealthInsurancePlan } from '../../../shared/models/health-insurance-plan.model';\r\n\r\n@Component({\r\n  selector: 'app-health-insurance-plan',\r\n  templateUrl: './health-insurance-plan.component.html',\r\n  styleUrls: ['./health-insurance-plan.component.css']\r\n})\r\nexport class HealthInsurancePlanComponent implements OnInit {\r\n\r\n  statusArray: any[];\r\n  public HealthInsurancePlans: HealthInsurancePlan[];\r\n  public addHealthInsurancePlan: HealthInsurancePlan = new HealthInsurancePlan();\r\n  public isEdit: Boolean = false;\r\n\r\n  public healthInsurancePlanForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,private _HealthInsurancePlanService: HealthInsurancePlanService,private commonService: CommonService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n    this.healthInsurancePlanForm = this.formBuilder.group({\r\n      planNm: ['', Validators.required],\r\n      planStsKey: ['', Validators.required],\r\n      anlPremAmt: ['', Validators.required],\r\n      maxPlcyAmt: ['', Validators.required],\r\n      glAcctNum: ['', Validators.required],\r\n      dfrdAcctNum: ['', Validators.required],\r\n  });\r\n\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );\r\n    this._HealthInsurancePlanService.getHealthInsurancePlans().subscribe(data => this.HealthInsurancePlans = data);\r\n  }\r\n\r\n  get form() \r\n  { \r\n    return this.healthInsurancePlanForm.controls; \r\n  }\r\n  onAddNewClick() {\r\n    this.isEdit = false;\r\n    this.healthInsurancePlanForm.reset();\r\n    this.addHealthInsurancePlan = new HealthInsurancePlan();\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n  \r\n  addHealthInsurancePlanSubmit(){\r\n    this.submitted = true;\r\n    if (this.healthInsurancePlanForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.addHealthInsurancePlan.planNm= this.healthInsurancePlanForm.value.planNm;\r\n    this.addHealthInsurancePlan.anlPremAmt= this.healthInsurancePlanForm.value.anlPremAmt;\r\n    this.addHealthInsurancePlan.maxPlcyAmt= this.healthInsurancePlanForm.value.maxPlcyAmt;\r\n    this.addHealthInsurancePlan.planStsKey= this.healthInsurancePlanForm.value.planStsKey;\r\n    this.addHealthInsurancePlan.glAcctNum= this.healthInsurancePlanForm.value.glAcctNum;\r\n    this.addHealthInsurancePlan.dfrdAcctNum= this.healthInsurancePlanForm.value.dfrdAcctNum;\r\n\r\n    (<any>$('#businessector')).modal('hide');\r\n    console.log(this.addHealthInsurancePlan);\r\n    if(this.isEdit) {\r\n      this._HealthInsurancePlanService.updateHealthInsurancePlan(this.addHealthInsurancePlan).subscribe(data => {\r\n        this.addHealthInsurancePlan = data;\r\n        this._HealthInsurancePlanService.getHealthInsurancePlans().subscribe(data => this.HealthInsurancePlans = data);\r\n      });\r\n    }\r\n    else {\r\n      this._HealthInsurancePlanService.addHealthInsurancePlan(this.addHealthInsurancePlan).subscribe(data => {\r\n        this.addHealthInsurancePlan = data;\r\n        this._HealthInsurancePlanService.getHealthInsurancePlans().subscribe(data => this.HealthInsurancePlans = data);\r\n      }); \r\n    }         \r\n  }\r\n\r\n  onEdit(HealthInsurancePlan){\r\n    this.isEdit = true;\r\n    this.healthInsurancePlanForm.patchValue(HealthInsurancePlan);\r\n    console.log(HealthInsurancePlan);\r\n    this.addHealthInsurancePlan = HealthInsurancePlan;\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n\r\n  onDelete(HealthInsurancePlan) { \r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this Plan?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this._HealthInsurancePlanService.deleteHealthInsurancePlan(HealthInsurancePlan).subscribe(data => {\r\n          this._HealthInsurancePlanService.getHealthInsurancePlans().subscribe(data => this.HealthInsurancePlans = data);\r\n        }); \r\n      }\r\n    });\r\n    console.log(HealthInsurancePlan);  \r\n  } \r\n\r\n  findValueByKey(key) {\r\n    let status = '';\r\n    if (this.statusArray) {\r\n      this.statusArray.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Products\\r\\n                  <i class=\\\"fa fa-search\\\"> </i>\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\">\\r\\n                    <i class=\\\"fa fa-window-close\\\"> </i>\\r\\n                  </a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"onAdd()\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n              <div class=\\\"modal fade\\\" id=\\\"addprduct\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog mymodal\\\">\\r\\n\\r\\n                  <!-- Modal content-->\\r\\n                  <div class=\\\"modal-content text-center\\\">\\r\\n                    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"productsForm\\\">\\r\\n                      <div class=\\\"modal-header\\\">\\r\\n                        <h5 class=\\\"modal-title\\\">Product</h5>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-body\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol3-col\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input placeholder=\\\"Product Name:\\\" formControlName=\\\"prdGrpNm\\\"\\r\\n                                     [errorStateMatcher]=\\\"matcher\\\" matInput>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol3-col\\\">\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Status:\\\" formControlName=\\\"prdGrpSts\\\"\\r\\n                                          name=\\\"status\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option *ngFor=\\\"let edu of statusArray\\\" [value]=\\\"edu.codeKey\\\">\\r\\n                                  {{edu.codeValue}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer text-center\\\">\\r\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\" >Ok</button>\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <br>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"hover table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Sub Product ID</th>\\r\\n                <th>Sub Product Name</th>\\r\\n                <th>Product Type</th>\\r\\n                <th>Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n              <tr *ngFor=\\\"let product of pagedItems\\\">\\r\\n                <td>{{product.prdId}}</td>\\r\\n                \\r\\n                <td>{{product.prdNm}}</td>\\r\\n                <td> {{findValueByKey(product.prdTypKey, activities)}}</td>\\r\\n                <td>{{findValueByKey(product.prdStsKey, status)}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"onEdit(product)\\\" class=\\\"iconBtn\\\">\\r\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                  </a>\\r\\n                  <a (click)=\\\"deleteItem(product)\\\" class=\\\"iconBtn delBtn\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                  </a>\\r\\n                  <a href=\\\"#\\\" class=\\\"iconBtn\\\">\\r\\n                    <i class=\\\"fa fa-history\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"back\\\">\\r\\n            <a routerLink=\\\"/setup/products\\\" class=\\\"btn btn-primary btn-min\\\">\\r\\n              <i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n          </div>\\r\\n          <nav aria-label=\\\"Page navigation \\\">\\r\\n            <ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\r\\n              <li class=\\\"page-item disabled\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {PRODUCTS} from '../../../../shared/mocks/mock_common_codes';\r\nimport {Product} from '../../../../shared/models/Product.model';\r\nimport {ProductGroup} from '../../../../shared/models/productGroup.model';\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MyErrorStateMatcher} from '../../../../shared/helpers/MyErrorStateMatcher.helper';\r\nimport {ProductService} from '../../../../shared/services/product.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {CommonService} from '../../../../shared/services/common.service';\r\nimport {DataService} from '../../../../shared/services/data.service';\r\nimport swal from 'sweetalert2';\r\nimport * as REF_CD_GRP_KEYS from '../../../../shared/models/REF_CODE_GRP_KEYS.mocks';\r\nimport {Rule} from '../../../../shared/models/Rule.model';\r\n\r\n@Component({\r\n  selector: 'app-product-by-seq',\r\n  templateUrl: './product-by-seq.component.html',\r\n  styleUrls: ['./product-by-seq.component.css']\r\n})\r\nexport class ProductBySeqComponent implements OnInit {\r\n  statusArray: any[];\r\n  pager: any = {};\r\n  isEdit = false;\r\n  allItems: Product[] = [];\r\n  pagedItems: Product[] = [];\r\n\r\n  @ViewChild(DataTableDirective)\r\n  datatableElement: DataTableDirective;\r\n  productsForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  private name: string;\r\n  private productTypes: any;\r\n  private productGroup: ProductGroup;\r\n\r\n\r\n  constructor(private productService: ProductService\r\n    , private router: Router\r\n    , private commonService: CommonService\r\n    , private fb: FormBuilder\r\n    , private dataService: DataService\r\n    , private route: ActivatedRoute) {\r\n  }\r\n  ngOnInit() {\r\n    this.productsForm = this.fb.group({\r\n      prdGrpId: [ ''],\r\n      prdGrpSeq: [ ''],\r\n      prdGrpNm: ['', Validators.required],\r\n      prdGrpSts: ['', Validators.required],\r\n    });\r\n    this.loadBasics();\r\n    this.productGroup = new ProductGroup(JSON.parse(sessionStorage.getItem('productGroup')));\r\n\r\n  }\r\n\r\n  findValueByKey(key, lov) {\r\n    let status = 'not found';\r\n    if (lov) {\r\n      lov.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n  findValueByKeyPT(key) {\r\n    let status = 'not found';\r\n    if (this.productTypes) {\r\n      this.productTypes.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status =  s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n  onEdit(product) {\r\n    product.prdGrpSeq = this.productGroup.prdGrpSeq;\r\n    sessionStorage.setItem('isProductEdit' , 'true');\r\n    product.productSeq = product.prdSeq;\r\n    product.productName = product.prdNm;\r\n    sessionStorage.setItem('product', JSON.stringify(product));\r\n    console.log(JSON.stringify(product));\r\n    this.router.navigate(['setup/addProduct/product-info']);\r\n  }\r\n  onAdd() {\r\n    sessionStorage.setItem('product', JSON.stringify(new Product()));\r\n    sessionStorage.setItem('isProductEdit' , 'false');\r\n    this.router.navigate(['setup/addProduct']);\r\n  }\r\n  deleteItem(pG: Product) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you Sure, Want to Delete This ?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.productService.deleteProductByPrdSeq(pG.prdSeq).subscribe(() => {\r\n          this.allItems.splice(this.allItems.indexOf(pG), 1);\r\n          this.setPage(1);\r\n          swal(\r\n            'Deleted!',\r\n            'Product has been deleted.',\r\n            'success'\r\n          );\r\n        }, error => console.log('There was an error: ', error));\r\n      }\r\n    });\r\n  }\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.dataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n  activities;status;\r\n  onSubmit() {}\r\n  private loadBasics() {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.name = this.route.snapshot.paramMap.get('prdGrpNm');\r\n    this.productService.getAllProductByGrpSeq(id).subscribe((data) => {\r\n      this.allItems  = data;\r\n      this.setPage(1);\r\n    });\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );\r\n    this.commonService.getValuesByGroupName('ACTIVITY').subscribe(\r\n      d => this.productTypes = d\r\n    );\r\n    this.commonService.getValues(REF_CD_GRP_KEYS.PRODUCT_TYPE).subscribe(\r\n      d => this.activities = d\r\n    );\r\n    this.commonService.getValues(REF_CD_GRP_KEYS.STATUS).subscribe(\r\n      d => this.status = d\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Product Groups\\r\\n                  <i class=\\\"fa fa-search\\\"> </i>\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\">\\r\\n                    <i class=\\\"fa fa-window-close\\\"> </i>\\r\\n                  </a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"openModal()\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n              <div class=\\\"modal fade\\\" id=\\\"addprduct\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog mymodal\\\">\\r\\n\\r\\n                  <!-- Modal content-->\\r\\n                  <div class=\\\"modal-content text-center\\\">\\r\\n                    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"productsForm\\\">\\r\\n                      <div class=\\\"modal-header\\\">\\r\\n                        <h5 class=\\\"modal-title\\\">Product Group</h5>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-body\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol3-col\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input placeholder=\\\"Product Name:\\\" formControlName=\\\"prdGrpNm\\\"\\r\\n                                           [errorStateMatcher]=\\\"matcher\\\" matInput>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol3-col\\\">\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Status:\\\" formControlName=\\\"prdGrpSts\\\"\\r\\n                                          name=\\\"status\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option *ngFor=\\\"let edu of statusArray\\\" [value]=\\\"edu.codeKey\\\">\\r\\n                                  {{edu.codeValue}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer text-center\\\">\\r\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\" [disabled]=\\\"productsForm.invalid\\\">Ok</button>\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <br>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"hover table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>Product ID</th>\\r\\n                  <th>Product Name</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let product of pagedItems\\\">\\r\\n                  <td>{{product.prdGrpId}}</td>\\r\\n                  <td>\\r\\n                    <a (click)=\\\"navigateToProduct(product)\\\" >{{product.prdGrpNm}}</a>\\r\\n                  </td>\\r\\n                  <td>{{findValueByKey(product.prdGrpSts)}}</td>\\r\\n                  <td>\\r\\n                    <a (click)=\\\"editItem(product)\\\" class=\\\"iconBtn\\\">\\r\\n                      <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                    </a>\\r\\n                    <!-- <a (click)=\\\"deleteItem(product)\\\" class=\\\"iconBtn delBtn\\\">\\r\\n                      <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                    </a> -->\\r\\n                    <a  class=\\\"iconBtn\\\">\\r\\n                      <i class=\\\"fa fa-history\\\"></i>\\r\\n                    </a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <nav aria-label=\\\"Page navigation \\\">\\r\\n            <ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\r\\n              <li class=\\\"page-item disabled\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<script>\\r\\n  $(document).ready(function () {\\r\\n    $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\r\\n  })\\r\\n</script>\\r\\n<script>\\r\\n  $(\\\".searchshow\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").addClass(\\\"intro\\\");\\r\\n  });\\r\\n  $(\\\".remove-search\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").removeClass(\\\"intro\\\");\\r\\n  });\\r\\n\\r\\n  function myFunction() {\\r\\n    var input, filter, table, tr, td, i;\\r\\n    input = document.getElementById(\\\"myInput\\\");\\r\\n    filter = input.value.toUpperCase();\\r\\n    table = document.getElementById(\\\"myTable\\\");\\r\\n    tr = table.getElementsByTagName(\\\"tr\\\");\\r\\n    for (i = 0; i < tr.length; i++) {\\r\\n      td = tr[i].getElementsByTagName(\\\"td\\\")[1];\\r\\n      if (td) {\\r\\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\\r\\n          tr[i].style.display = \\\"\\\";\\r\\n        } else {\\r\\n          tr[i].style.display = \\\"none\\\";\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n<script>\\r\\n  var index = 1;\\r\\n  $('ul.moreless li:gt(' + index + ')').hide();\\r\\n  $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n  $('ul.moreless li.more').click(function () {\\r\\n    $('ul.moreless li.more').remove();\\r\\n    $('ul.moreless li:gt(' + index + ')').show();\\r\\n    $('ul.moreless').append('<li class=\\\"less\\\">Less..</li>');\\r\\n    $('ul.moreless li.less').click(function () {\\r\\n      $('ul.moreless li.less').remove();\\r\\n      $('ul.moreless li:gt(' + index + ')').remove();\\r\\n      $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n    });\\r\\n  });\\r\\n\\r\\n</script>\\r\\n\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport { PRODUCTS } from '../../../shared/mocks/mock_common_codes';\r\nimport {Router} from '@angular/router';\r\nimport {Product} from '../../../shared/models/Product.model';\r\nimport {ProductService} from '../../../shared/services/product.service';\r\nimport {Observable} from 'rxjs';\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {CommonService} from '../../../shared/services/common.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MyErrorStateMatcher} from '../../../shared/helpers/MyErrorStateMatcher.helper';\r\nimport {PaymentType} from '../../../shared/models/paymentType.model';\r\nimport swal from 'sweetalert2';\r\nimport {DataService} from '../../../shared/services/data.service';\r\nimport {ProductGroup} from '../../../shared/models/productGroup.model';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  model = new Product();\r\n  statusArray: any[];\r\n  pager: any = {};\r\n  isEdit = false;\r\n\r\n  allItems: ProductGroup[] = [];\r\n  pagedItems: ProductGroup[] = [];\r\n\r\n  @ViewChild(DataTableDirective)\r\n  datatableElement: DataTableDirective;\r\n  productsForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n\r\n  constructor(private productService: ProductService\r\n              , private router: Router\r\n              , private commonService: CommonService\r\n              , private fb: FormBuilder\r\n              , private dataService: DataService) {\r\n  }\r\n  ngOnInit() {\r\n    this.productsForm = this.fb.group({\r\n      prdGrpId: [ ''],\r\n      prdGrpSeq: [ ''],\r\n      prdGrpNm: ['', Validators.compose([Validators.required, Validators.maxLength(100)])],\r\n      prdGrpSts: ['', Validators.required],\r\n    });\r\n    this.loadBasics();\r\n  }\r\n\r\n  openModal() {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.productsForm.reset();\r\n    this.isEdit = false;\r\n  }\r\n  findValueByKey(key) {\r\n    let status = 'not found';\r\n    if (this.statusArray) {\r\n      this.statusArray.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status =  s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n  editItem(productGroup: ProductGroup) {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.productsForm.patchValue(productGroup);\r\n    this.isEdit = true;\r\n  }\r\n\r\n  onSubmit() {\r\n    // this.productService.updateCurrentProduct(this.model);\r\n    // this.router.navigate(['setup/products/add']);\r\n    const result: ProductGroup = Object.assign({}, this.productsForm.value);\r\n    (<any>$('#addprduct')).modal('hide');\r\n    if (this.isEdit) {\r\n      this.productService.updateProductGroup(result).subscribe(res=>{\r\n        this.loadAll();\r\n      });\r\n      // const itemIndex = this.allItems.findIndex(item => item.prdGrpSeq === result.prdGrpSeq);\r\n      // this.allItems[itemIndex] = result;\r\n      // this.setPage(this.pager.currentPage);\r\n      \r\n    } else {\r\n      this.productService.addProductGroup(result).subscribe(res=>{\r\n        this.loadAll();\r\n      } );\r\n      // this.allItems.push(result);\r\n      // this.setPage(this.pager.currentPage);\r\n      \r\n    }\r\n  }\r\n  deleteItem(pG: ProductGroup) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you Sure, Want to Delete This ?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.productService.deleteProductGroup(pG.prdGrpSeq).subscribe(() => {\r\n          this.allItems.splice(this.allItems.indexOf(pG), 1);\r\n          this.setPage(1);\r\n          swal(\r\n            'Deleted!',\r\n            'Product group has been deleted.',\r\n            'success'\r\n          );\r\n        }, error => console.log('There was an error: ', error));\r\n      }\r\n    });\r\n  }\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.dataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n\r\n  private loadBasics() {\r\n    this.loadAll();\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );\r\n  }\r\n\r\n  navigateToProduct(product) {\r\n    sessionStorage.setItem('productGrpSeq', product.prdGrpSeq);\r\n    sessionStorage.setItem('productGroup', JSON.stringify(product));\r\n    this.router.navigate(['/setup/products', product.prdGrpNm , product.prdGrpSeq ]);\r\n  }\r\n\r\n  // ngAfterViewInit(): void {\r\n  //   this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n  //     dtInstance.columns().every(function () {\r\n  //       const that = this;\r\n  //       $('input', this.footer()).on('keyup change', function () {\r\n  //         if (that.search() !== this['value']) {\r\n  //           that\r\n  //             .search(this['value'])\r\n  //             .draw();\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //   });\r\n  // }\r\n  private loadAll() {\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems  = data;\r\n      this.setPage(this.pager.currentPage);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Question\\r\\n                  <!-- <i class=\\\"fa fa-search\\\"></i> -->\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#businessector\\\" (click)=\\\"onAddNewClick()\\\"><i\\r\\n                  class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n              <div class=\\\"modal-dialog big mymodal\\\">\\r\\n                <!-- Modal content-->\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                  <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">Question</h5>\\r\\n                  </div>\\r\\n                  <form [formGroup]=\\\"questionForm\\\" (ngSubmit)=\\\"addQuestionSubmit()\\\">\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                      <ul class=\\\"infolist\\\">\\r\\n                      </ul>\\r\\n                      <div class=\\\"cRow\\\">\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Question Type:</label>\\r\\n                          <select type=\\\"\\\" formControlName=\\\"qstTypKey\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.qstTypKey.errors }\\\">\\r\\n                            <option *ngFor=\\\"let type of typeArray\\\" [value]=\\\"type.codeKey\\\">{{type.codeValue}}</option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"submitted && form.qstTypKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.qstTypKey.errors.required\\\">Question Type is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Question Categroy:</label>\\r\\n                          <select type=\\\"\\\" formControlName=\\\"qstCtgryKey\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.qstCtgryKey.errors }\\\">\\r\\n                            <option *ngFor=\\\"let category of categoryArray\\\" [value]=\\\"category.codeKey\\\">{{category.codeValue}}</option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"submitted && form.qstCtgryKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.qstCtgryKey.errors.required\\\">Question Categroy is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Question</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"qstStr\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.qstStr.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.qstStr.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.qstStr.errors.required\\\">Question String is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                            <label>Sort Order</label>\\r\\n                            <input type=\\\"text\\\" (keypress)=\\\"onlyNumbers($event)\\\" formControlName=\\\"qstSortOrdr\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.qstSortOrdr.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && form.qstSortOrdr.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"form.qstSortOrdr.errors.required\\\">Sort Order is required</div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label>Status:</label>\\r\\n                          <select type=\\\"\\\" formControlName=\\\"qstStsKey\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.qstStsKey.errors }\\\">\\r\\n                            <option *ngFor=\\\"let status of statusArray\\\" [value]=\\\"status.codeKey\\\">{{status.codeValue}}</option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"submitted && form.qstStsKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"form.qstStsKey.errors.required\\\">Status is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer text-center\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" (click)=\\\"addQuestionSubmit()\\\">Ok</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                    </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>Question ID</th>\\r\\n                  <th>Question Category</th>\\r\\n                  <th>Sort Order</th>\\r\\n                  <th>Question Type</th>\\r\\n                  <th>Question</th>\\r\\n                  <th>Answers</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let question of questions\\\">\\r\\n                  <td>{{question.qstId}}</td>\\r\\n                  <td>{{findCategoryById(question.qstCtgryKey)}}</td>\\r\\n                  <td>{{question.qstSortOrdr}}</td>\\r\\n                  <td>{{findTypeById(question.qstTypKey)}}</td>\\r\\n                  <td>{{question.qstStr}}</td>\\r\\n                  <td>\\r\\n                    <div *ngIf=\\\"question.qstTypKey===202\\\"><a [routerLink]=\\\"['/setup/answer']\\\" (click)=\\\"onClick(question.qstSeq)\\\"><span\\r\\n                      class=\\\"ansbtn\\\"></span></a></div>\\r\\n                    <div *ngIf=\\\"question.qstTypKey!==202\\\"><span\\r\\n                          class=\\\"ansbtn grey\\\"></span></div>\\r\\n\\r\\n                  </td>\\r\\n                  <td>{{findValueByKey(question.qstStsKey)}}</td>\\r\\n                  <td>\\r\\n                    <a class=\\\"iconBtn\\\" (click)=\\\"onEdit(question)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <a class=\\\"iconBtn delBtn\\\" (click)=\\\"onDelete(question.qstSeq)\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                    <!-- <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"back\\\">\\r\\n          <a href=\\\"setup.html\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n        </div> -->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { QuestionService } from '../../../shared/services/question.service';\r\nimport { CommonService } from '../../../shared/services/common.service';\r\nimport { Question } from '../../../shared/models/Question.model';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n\r\n  statusArray : any[];\r\n  typeArray : any[];\r\n  categoryArray : any[];\r\n  public questions: Question[];\r\n  public addQuestion: Question = new Question(null, null);\r\n  public isEdit: Boolean = false;\r\n\r\n  public questionForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,private questionService: QuestionService, private commonService: CommonService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n    this.questionForm = this.formBuilder.group({  \r\n      qstSeq: [],\r\n      qstTypKey: ['', Validators.required],\r\n      qstStr: ['', Validators.required],\r\n      qstCtgryKey: ['', Validators.required],\r\n      qstStsKey: ['', Validators.required],\r\n      qstSortOrdr: ['', Validators.required],\r\n  });\r\n\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );   \r\n    this.commonService.getValuesByGroupName('\\tQUESTION TYPE').subscribe(\r\n      d => this.typeArray = d\r\n    );   \r\n    this.commonService.getValuesByGroupName('\\tSCHOOL QUESTIONAIRE CATEGORY').subscribe(\r\n      d => this.categoryArray = d\r\n    );   \r\n\r\n    this.questionService.getQuestions(sessionStorage.getItem('qstnrSeq')).subscribe(data => this.questions = data);\r\n  }\r\n  get form() \r\n  { \r\n    return this.questionForm.controls; \r\n  }\r\n  onClick(qstSeq)\r\n  {\r\n    sessionStorage.setItem('qstSeq', JSON.stringify(qstSeq));\r\n  }\r\n  onAddNewClick() {\r\n    this.isEdit = false;\r\n    this.questionForm.reset();\r\n    this.addQuestion = new Question(null , null);\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n  \r\n  addQuestionSubmit(){\r\n    this.submitted = true;\r\n    if (this.questionForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.addQuestion.qstTypKey= this.questionForm.value.qstTypKey;\r\n    this.addQuestion.qstStr= this.questionForm.value.qstStr;\r\n    this.addQuestion.qstCtgryKey= this.questionForm.value.qstCtgryKey;\r\n    this.addQuestion.qstStsKey= this.questionForm.value.qstStsKey;\r\n    this.addQuestion.qstnrSeq= parseInt(sessionStorage.getItem('qstnrSeq'));\r\n    this.addQuestion.qstSortOrdr = this.questionForm.value.qstSortOrdr;\r\n    this.addQuestion.qstSeq = this.addQuestion.qstSeq;\r\n    (<any>$('#businessector')).modal('hide');\r\n    console.log(this.addQuestion);\r\n    if(this.isEdit) {\r\n      this.questionService.updateQuestion(this.addQuestion).subscribe(data => {\r\n        // this.addQuestion = data;\r\n        this.questionService.getQuestions(sessionStorage.getItem('qstnrSeq')).subscribe(data => this.questions = data);\r\n      });\r\n    }\r\n    else {\r\n      this.questionService.addQuestion(this.addQuestion).subscribe(data => {\r\n        // this.addQuestion = data;\r\n        this.questionService.getQuestions(sessionStorage.getItem('qstnrSeq')).subscribe(data => this.questions = data);\r\n      }); \r\n    }         \r\n  }\r\n\r\n  onEdit(question){\r\n    this.isEdit = true;\r\n    this.addQuestion = question;\r\n    this.questionForm.controls[\"qstStr\"].setValue(question.qstStr);\r\n    this.questionForm.controls[\"qstStsKey\"].setValue(question.qstStsKey);\r\n    this.questionForm.controls[\"qstTypKey\"].setValue(question.qstTypKey);\r\n    this.questionForm.controls[\"qstCtgryKey\"].setValue(question.qstCtgryKey);\r\n    this.questionForm.controls[\"qstSortOrdr\"].setValue(question.qstSortOrdr);\r\n    this.questionForm.controls[\"qstSeq\"].setValue(question.qstSeq);\r\n    console.log(question);\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n\r\n  onDelete(question) { \r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this Question?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.questionService.deleteQuestion(question).subscribe(data => {\r\n          this.questionService.getQuestions(sessionStorage.getItem('qstnrSeq')).subscribe(data => this.questions = data);\r\n        }); \r\n      }\r\n    });\r\n    console.log(question);  \r\n  }\r\n  \r\n  findValueByKey(key) {\r\n    let status = '';\r\n    if (this.statusArray) {\r\n      this.statusArray.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n  findTypeById(typeId) {\r\n    let type = '';\r\n    if (this.typeArray) {\r\n      this.typeArray.forEach(s => {\r\n        if (s.codeKey === typeId) {\r\n          type = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return type;\r\n  }\r\n\r\n  onlyNumbers(event: any) {\r\n    const pattern = /[0-9]/;\r\n\r\n    const inputChar = String.fromCharCode(event.charCode);\r\n    if (event.charCode != 8 && !pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  findCategoryById(categoryId) {\r\n    let category = '';\r\n    if (this.categoryArray) {\r\n      this.categoryArray.forEach(s => {\r\n        if (s.codeKey === categoryId) {\r\n          category = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return category;\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <app-left-side-bar></app-left-side-bar>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Questionnaire\\r\\n                  <!-- <i class=\\\"fa fa-search\\\"></i> -->\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                   <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#businessector\\\" (click)=\\\"onAddNewClick()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n            </div> -->\\r\\n            <div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n              <div class=\\\"modal-dialog big mymodal\\\"> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                <!-- Modal content-->\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                  <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">Questionnaire</h5>\\r\\n                  </div>\\r\\n                  <form [formGroup]=\\\"questionnaireForm\\\" (ngSubmit)=\\\"addQuestionnaireSubmit()\\\">\\r\\n                  <div class=\\\"modal-body\\\">\\r\\n                  <ul class=\\\"infolist\\\">\\r\\n                  </ul>\\r\\n                    <div class=\\\"cRow\\\">\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                            <label>Questionnaire Name:</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"qstnrNm\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.qstnrNm.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && form.qstnrNm.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"form.qstnrNm.errors.required\\\">Questionnaire Name is required</div>\\r\\n                            </div>\\r\\n                          </div>     \\r\\n\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                            <label>Status:</label>\\r\\n                            <select type=\\\"\\\" formControlName=\\\"qstnrStsKey\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.qstnrStsKey.errors }\\\">\\r\\n                                <option *ngFor=\\\"let status of statusArray\\\" [value]=\\\"status.codeKey\\\" >{{status.codeValue}}</option>\\r\\n                              </select>\\r\\n                            <div *ngIf=\\\"submitted && form.qstnrStsKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"form.qstnrStsKey.errors.required\\\">Status is required</div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n            </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"modal-footer text-center\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" (click)=\\\"addQuestionnaireSubmit()\\\">Ok</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Questionnaire ID</th>\\r\\n                <th>Questionnaire Name</th>\\r\\n                <th>Questions</th>\\r\\n                <th>Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n  </thead>\\r\\n  <tbody>\\t\\r\\n    <tr *ngFor=\\\"let questionnaire of questionnaires\\\">\\r\\n      <td>{{questionnaire.qstnrId}}</td> \\r\\n      <td>{{questionnaire.qstnrNm}}</td>\\r\\n      <td><a  [routerLink]=\\\"['/setup/question']\\\" (click)=\\\"onClick(questionnaire.qstnrSeq)\\\"><span class=\\\"qbtn\\\">&nbsp;</span></a></td>\\r\\n      \\r\\n      <td>{{findValueByKey(questionnaire.qstnrStsKey)}}</td>\\r\\n      <td>\\t\\t\\t\\t\\t\\t\\r\\n        <a  class=\\\"iconBtn\\\" (click)=\\\"onEdit(questionnaire)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n        <a  class=\\\"iconBtn delBtn\\\" (click)=\\\"onDelete(questionnaire.qstnrSeq)\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n        <!-- <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  </table>\\r\\n        </div>\\t\\r\\n        <!-- <div class=\\\"back\\\">\\r\\n          <a href=\\\"setup.html\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n        </div> -->\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { QuestionnaireService } from '../../../shared/services/questionnaire.service';\r\nimport { CommonService } from '../../../shared/services/common.service';\r\nimport swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport { Questionnaire } from '../../../shared/models/questionnaire.model';\r\n\r\n@Component({\r\n  selector: 'app-questionnaire',\r\n  templateUrl: './questionnaire.component.html',\r\n  styleUrls: ['./questionnaire.component.css']\r\n})\r\nexport class QuestionnaireComponent implements OnInit {\r\n\r\n  public questionnaireForm: FormGroup;\r\n  submitted = false;\r\n\r\n  statusArray : any[];\r\n  public questionnaires: Questionnaire[];\r\n  public addQuestionnaire: Questionnaire = new Questionnaire();\r\n  public isEdit: Boolean = false;\r\n  constructor(private formBuilder: FormBuilder,private questionnaireService: QuestionnaireService, private commonService: CommonService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n\r\n    this.questionnaireForm = this.formBuilder.group({  \r\n      qstnrNm: ['', Validators.required],\r\n      qstnrStsKey: ['', Validators.required],\r\n  });\r\n\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe(\r\n      d => this.statusArray = d\r\n    );   \r\n    this.questionnaireService.getQuestionnaires().subscribe(data => this.questionnaires = data);\r\n  }\r\n\r\n  get form() \r\n  { \r\n    return this.questionnaireForm.controls; \r\n  }\r\n\r\n  onClick(key)\r\n  {\r\n    sessionStorage.setItem('qstnrSeq', JSON.stringify(key));\r\n  }\r\n  onAddNewClick() {\r\n    this.isEdit = false;\r\n    this.questionnaireForm.reset();\r\n    this.addQuestionnaire = new Questionnaire();\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n  \r\n  addQuestionnaireSubmit(){\r\n    this.submitted = true;\r\n    if (this.questionnaireForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.addQuestionnaire.qstnrNm= this.questionnaireForm.value.qstnrNm;\r\n    this.addQuestionnaire.qstnrStsKey= this.questionnaireForm.value.qstnrStsKey;\r\n\r\n\r\n    (<any>$('#businessector')).modal('hide');\r\n    console.log(this.addQuestionnaire);\r\n    if(this.isEdit) {\r\n      this.questionnaireService.updateQuestionnaire(this.addQuestionnaire).subscribe(data => {\r\n        this.addQuestionnaire = data;\r\n        this.questionnaireService.getQuestionnaires().subscribe(data => this.questionnaires = data);\r\n      });\r\n    }\r\n    else {\r\n      this.questionnaireService.addQuestionnaire(this.addQuestionnaire).subscribe(data => {\r\n        this.addQuestionnaire = data;\r\n        this.questionnaireService.getQuestionnaires().subscribe(data => this.questionnaires = data);\r\n      }); \r\n    }         \r\n  }\r\n\r\n  onEdit(questionnaire){\r\n    this.isEdit = true;\r\n    this.questionnaireForm.patchValue(questionnaire);\r\n    console.log(questionnaire);\r\n    this.addQuestionnaire = questionnaire;\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n\r\n  onDelete(questionnaire) { \r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this Questionnaire?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.questionnaireService.deleteQuestionnaire(questionnaire).subscribe(data => {\r\n          this.questionnaireService.getQuestionnaires().subscribe(data => this.questionnaires = data);\r\n        }); \r\n      }\r\n    });\r\n    console.log(questionnaire);  \r\n  }\r\n  \r\n  \r\n  findValueByKey(key) {\r\n    let status = '';\r\n    if (this.statusArray) {\r\n      this.statusArray.forEach(s => {\r\n        if (s.codeKey === key) {\r\n          status = s.codeValue;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n      <h6 class=\\\"mt-3\\\">Add Rule</h6>\\r\\n      <div class=\\\"cRow\\\">\\r\\n        <div class=\\\"cCol1\\\">\\r\\n          <label for=\\\"id\\\">Rule ID:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                 name=\\\"id\\\" id=\\\"id\\\"\\r\\n                 required minlength=\\\"6\\\" readonly\\r\\n                 [(ngModel)]=\\\"rule.id\\\"\\r\\n                 #id=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"cCol1\\\">\\r\\n          <label for=\\\"name\\\">Rule Name:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"name\\\"\\r\\n                 required\\r\\n                 [(ngModel)]=\\\"rule.name\\\"\\r\\n                 #name=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"cCol1\\\">\\r\\n          <label for=\\\"category\\\">Rule Ctegory:</label>\\r\\n          <select class=\\\"form-control\\\" id=\\\"category\\\" name=\\\"category\\\" required\\r\\n                  [(ngModel)]=\\\"rule.category\\\"\\r\\n                  #category=\\\"ngModel\\\">\\r\\n            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">{{category}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"cCol1\\\">\\r\\n          <label for=\\\"status\\\">Status:</label>\\r\\n          <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" required\\r\\n                  [(ngModel)]=\\\"rule.status\\\"\\r\\n                  #status=\\\"ngModel\\\">\\r\\n            <option value=\\\"Active\\\">Active</option>\\r\\n            <option value=\\\"Pending\\\">Pending</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"cRow\\\">\\r\\n        <div class=\\\"cCol6\\\">\\r\\n          <label for=\\\"condition\\\">Rule Criteria:</label>\\r\\n          <button class=\\\"btn pull-right btn-dots\\\" data-toggle=\\\"modal\\\" data-target=\\\"#cmmoncodes\\\"></button>\\r\\n          <textarea class=\\\"form-control\\\" id=\\\"condition\\\"\\r\\n                    name=\\\"condition\\\" [(ngModel)]=\\\"rule.condition\\\"\\r\\n                    #condition=\\\"ngModel\\\"></textarea>\\r\\n          <div class=\\\"modal fade\\\" id=\\\"cmmoncodes\\\" role=\\\"dialog\\\">\\r\\n            <div class=\\\"modal-dialog mymodal big\\\">\\r\\n              <!-- Modal content-->\\r\\n              <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                  <h5 class=\\\"modal-title\\\">Rule Condition</h5>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                  <div class=\\\"p10\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-3 mb-2\\\">\\r\\n                        <div class=\\\"filter noborder\\\">\\r\\n                          <h6 class=\\\"border-title\\\">Data Items</h6>\\r\\n                          <a href=\\\"#.\\\" class=\\\"acc_trigger inactive-header active-header\\\">Client</a>\\r\\n                          <div class=\\\"collapse acc_container\\\" style=\\\"display: block;\\\">\\r\\n                            <div class=\\\"listmenu\\\">\\r\\n                              <ul>\\r\\n                                <li>Gender</li>\\r\\n                                <li>Merital Status</li>\\r\\n                              </ul>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <a href=\\\"#.\\\" class=\\\"acc_trigger inactive-header\\\">Credit Information</a>\\r\\n                          <div class=\\\"collapse acc_container\\\">\\r\\n                            <div class=\\\"listmenu\\\">\\r\\n                              <ul>\\r\\n                                <li>Approved Amount</li>\\r\\n                                <li>Requested Amount</li>\\r\\n                              </ul>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-9 mt-3\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <textarea class=\\\"form-control large\\\" placeholder=\\\"Days to complete < 8\\\"></textarea>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer text-center\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Ok</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"pt-1 mt-3\\\">\\r\\n        <label>Select Approver:</label>\\r\\n      </div>\\r\\n      <div class=\\\"checkbox mb-1\\\">\\r\\n        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" id=\\\"checkbox1\\\" name=\\\"coBorrower\\\" class=\\\"custom-control-input\\\">\\r\\n          <label class=\\\"custom-control-label\\\" for=\\\"checkbox1\\\"> Regional Manager</label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"checkbox mb-1\\\">\\r\\n        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" id=\\\"checkbox2\\\" name=\\\"coBorrower\\\" class=\\\"custom-control-input\\\">\\r\\n          <label class=\\\"custom-control-label\\\" for=\\\"checkbox2\\\"> Area Manager</label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"checkbox mb-1\\\">\\r\\n        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" id=\\\"checkbox3\\\" name=\\\"coBorrower\\\" class=\\\"custom-control-input\\\">\\r\\n          <label class=\\\"custom-control-label\\\" for=\\\"checkbox3\\\"> Branch Manager</label>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"mt-5\\\">\\r\\n        <button class=\\\"btn btn-primary btn-min\\\">Continue</button>\\r\\n        <button class=\\\"btn btn-default btn-min\\\">Save</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<script>\\r\\n  $('.date').datepicker({\\r\\n    //format: ‘dd/mm/yyyy’;\\r\\n  });\\r\\n</script>\\r\\n<script type=\\\"text/javascript\\\">\\r\\n  $(document).ready(function () {\\r\\n    $('.acc_trigger').toggleClass('inactive-header');\\r\\n\\r\\n    $('.acc_trigger:first').addClass('active-header').next().show();\\r\\n    $('.acc_trigger').click(function () {\\r\\n      if ($(this).next().is(':hidden')) {\\r\\n        $('.active-header').toggleClass('active-header').toggleClass('inactive-header').next().slideToggle().toggleClass('open-content');\\r\\n        $(this).toggleClass('active-header').toggleClass('inactive-header');\\r\\n        $(this).next().slideToggle().toggleClass('open-content');\\r\\n      }\\r\\n\\r\\n      else {\\r\\n        $(this).toggleClass('active-header').toggleClass('inactive-header');\\r\\n        $(this).next().slideToggle().toggleClass('open-content');\\r\\n      }\\r\\n    });\\r\\n\\r\\n    return false;\\r\\n  });\\r\\n</script>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Rule} from '../../../../shared/models/Rule.model';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {RulesService} from '../../../../shared/services/rules.service';\r\nimport { Location } from '@angular/common';\r\nimport {RULES_CATEGORIES} from '../../../../shared/mocks/rules.mocks';\r\n\r\n@Component({\r\n  selector: 'app-add-workflow',\r\n  templateUrl: './add-rule.component.html',\r\n  styleUrls: ['./add-rule.component.css']\r\n})\r\nexport class AddRuleComponent implements OnInit {\r\n  @Input() rule: Rule;\r\n  categories = RULES_CATEGORIES;\r\n  constructor(private route: ActivatedRoute,\r\n              private rulesService: RulesService,\r\n              private location: Location) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRule();\r\n  }\r\n  getRule(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.rulesService.getRule(id)\r\n      .subscribe(r => this.rule = r);\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n    line-height: 1;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  tr.mat-header-row {\\r\\n    height: 1.5px;\\r\\n}\\r\\n  \\r\\n  tr.mat-row {\\r\\n  height: 1.5px;\\r\\n}\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  color: rgba(0,0,0,.87);\\r\\n  font-size: 0.750rem;\\r\\n}\\r\\n  \\r\\n  .trx-table td:last-child {\\r\\n text-align: center;\\r\\n}\\r\\n  \\r\\n  .td-center {\\r\\n  text-align: right;\\r\\n}\\r\\n  \\r\\n  .td-right{\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light th:last-child {\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light th:first-child {\\r\\n  text-align: center;\\r\\n}\\r\\n  \\r\\n  .table .thead-light>th {\\r\\n  padding: .45rem 0rem;\\r\\n}\\r\\n  \\r\\n  th.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n  \\r\\n  .mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n  \\r\\n  th.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n}\\r\\n  \\r\\n  td,th{\\r\\n  padding-left: 16px !important;\\r\\n  width: 8% !important;\\r\\n}\\r\\n  \\r\\n  td:first-child, th:first-child{\\r\\n  padding-left: 16px !important;\\r\\n  width: 2% !important;\\r\\n}\\r\\n  \\r\\n  td:nth-child(2), th:nth-child(2),td:nth-child(3), th:nth-child(3){\\r\\n  padding-left: 16px !important;\\r\\n  width: 5% !important;\\r\\n}\\r\\n  \\r\\n  td:nth-child(4), th:nth-child(4){\\r\\n  padding-left: 16px !important;\\r\\n  width: 10% !important;\\r\\n}\\r\\n  \\r\\n  td:nth-child(5), th:nth-child(5){\\r\\n  padding-left: 16px !important;\\r\\n  width: 25% !important;\\r\\n}\\r\\n  \\r\\n  td:nth-child(6), th:nth-child(6){\\r\\n  padding-left: 16px !important;\\r\\n  width: 2% !important;\\r\\n}\\r\\n  \\r\\n  .w-20{\\r\\n  width: 20% !important;\\r\\n}\\r\\n  \\r\\n  th{\\r\\n  font-size: 12px;\\r\\n  font-weight: 700;\\r\\n}\\r\\n  \\r\\n  th:last-child{\\r\\n  text-align: right;\\r\\n}\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div\\r\\n                class=\\\"mysearchbox\\\"\\r\\n                (click)=\\\"showField()\\\"\\r\\n                *ngIf=\\\"!showFields\\\"\\r\\n              >\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer\\\">\\r\\n                  Search\\r\\n                  <i class=\\\"fa fa-search\\\"> </i>\\r\\n                </h6>\\r\\n              </div>\\r\\n              <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n                <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"col-sm-10\\\" style=\\\"float: left\\\">\\r\\n                    <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                      <input\\r\\n                        id=\\\"searchBox\\\"\\r\\n                        (keyup)=\\\"searchValue()\\\"\\r\\n                        autofocus\\r\\n                        matInput\\r\\n                        name=\\\"searchValue\\\"\\r\\n                        [(ngModel)]=\\\"searchVal\\\"\\r\\n                        placeholder=\\\"Search\\\"\\r\\n                      />\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\" style=\\\"float: right\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\">\\r\\n                      Search\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNewRule()\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i> Add\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal fade\\\" id=\\\"AdvanceRules\\\" role=\\\"dialog\\\">\\r\\n              <div\\r\\n                class=\\\"modal-dialog bigger mymodal\\\"\\r\\n                style=\\\"max-width: 75%; top: 2%; min-height: 60%\\\"\\r\\n              >\\r\\n                <!-- Modal content-->\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                  <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">Rules</h5>\\r\\n                  </div>\\r\\n                  <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"RuleForm\\\">\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                      <div class=\\\"cRow\\\">\\r\\n                        <div class=\\\"cCol2\\\" *ngIf=\\\"isEdit\\\">\\r\\n                          <label for=\\\"id\\\">Rule ID:</label>\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"form-control\\\"\\r\\n                            name=\\\"id\\\"\\r\\n                            id=\\\"id\\\"\\r\\n                            required\\r\\n                            minlength=\\\"6\\\"\\r\\n                            formControlName=\\\"rulId\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\">\\r\\n                          <label for=\\\"name\\\">Rule Name:</label>\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"form-control\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name\\\"\\r\\n                            required\\r\\n                            formControlName=\\\"rulNm\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                        <div class=\\\"cCol2\\\" *ngIf=\\\"!isEdit\\\">\\r\\n                          <label for=\\\"category\\\">Rule Category:</label>\\r\\n                          <select\\r\\n                            class=\\\"form-control\\\"\\r\\n                            id=\\\"category\\\"\\r\\n                            name=\\\"category\\\"\\r\\n                            required\\r\\n                            formControlName=\\\"rulCtgryKey\\\"\\r\\n                            (change)=\\\"onCategoryChange()\\\"\\r\\n                          >\\r\\n                            <option\\r\\n                              *ngFor=\\\"let category of ruleCategories\\\"\\r\\n                              [value]=\\\"category.value\\\"\\r\\n                            >\\r\\n                              {{ category.desc }}\\r\\n                            </option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                        <!-- <div class=\\\"cCol2\\\">\\r\\n                          <label for=\\\"status\\\">Status:</label>\\r\\n                          <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" required formControlName=\\\"rule.rulNm\\\"\\r\\n                            #status=\\\"ngModel\\\">\\r\\n                            <option value=\\\"Active\\\">Active</option>\\r\\n                            <option value=\\\"Pending\\\">Pending</option>\\r\\n                          </select>\\r\\n                        </div> -->\\r\\n                      </div>\\r\\n                      <div class=\\\"cCol12 mt-2\\\">\\r\\n                        <label for=\\\"comments\\\">Coments:</label>\\r\\n                        <textarea\\r\\n                          class=\\\"form-control\\\"\\r\\n                          id=\\\"comments\\\"\\r\\n                          name=\\\"comments\\\"\\r\\n                          formControlName=\\\"rulCmnt\\\"\\r\\n                        ></textarea>\\r\\n                      </div>\\r\\n                      <h6 class=\\\"colorBlack mt-3\\\">Rule Criteria</h6>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-3 mb-2\\\">\\r\\n                          <div class=\\\"filter noborder\\\">\\r\\n                            <h6 class=\\\"border-title\\\">Data Items</h6>\\r\\n                            <div *ngFor=\\\"let obj of fields\\\">\\r\\n                              <a\\r\\n                                class=\\\"acc_trigger\\\"\\r\\n                                (click)=\\\"headingClick($event.srcElement)\\\"\\r\\n                                >{{ obj.heading }}</a\\r\\n                              >\\r\\n                              <div class=\\\"collapse acc_container\\\">\\r\\n                                <div class=\\\"listmenu\\\">\\r\\n                                  <ul>\\r\\n                                    <li *ngFor=\\\"let column of obj.columns\\\">\\r\\n                                      {{ column.title }}\\r\\n                                      <span\\r\\n                                        (click)=\\\"copyToMain(column)\\\"\\r\\n                                        style=\\\"\\r\\n                                          float: right;\\r\\n                                          margin-right: 0.75em;\\r\\n                                          cursor: pointer;\\r\\n                                        \\\"\\r\\n                                        >&#10230;</span\\r\\n                                      >\\r\\n                                    </li>\\r\\n                                  </ul>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-9 mt-3\\\">\\r\\n                          <textarea\\r\\n                            class=\\\"form-control large\\\"\\r\\n                            id=\\\"condition\\\"\\r\\n                            name=\\\"condition\\\"\\r\\n                            placeholder=\\\"Client gender is = M and NDI > Requested Amount / 12\\\"\\r\\n                            required\\r\\n                            formControlName=\\\"rulCrtraStr\\\"\\r\\n                          ></textarea>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer text-center\\\">\\r\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\">\\r\\n                        Ok\\r\\n                      </button>\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-primary btn-min\\\"\\r\\n                        data-dismiss=\\\"modal\\\"\\r\\n                      >\\r\\n                        Cancel\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!---- DATA TABLES---->\\r\\n\\r\\n          <div class=\\\"table-responsive mb-md-5\\\">\\r\\n            <table\\r\\n              class=\\\"table\\\"\\r\\n              id=\\\"myTable\\\"\\r\\n              mat-table\\r\\n              [dataSource]=\\\"dataSource\\\"\\r\\n              class=\\\"table\\\"\\r\\n              multiTemplateDataRows\\r\\n              matSort\\r\\n            >\\r\\n              <!-- Reference Id Column -->\\r\\n              <ng-container matColumnDef=\\\"ruleid\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Rule ID</th>\\r\\n                <td mat-cell *matCellDef=\\\"let rule\\\">{{ rule.rulId }}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Description Column -->\\r\\n              <ng-container matColumnDef=\\\"ruleName\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Rule Name</th>\\r\\n                <td mat-cell *matCellDef=\\\"let rule\\\">{{ rule.rulNm }}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Category Column -->\\r\\n              <ng-container matColumnDef=\\\"ruleCate\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Rule Category</th>\\r\\n                <td mat-cell *matCellDef=\\\"let rule\\\">\\r\\n                  {{ findCategory(rule.rulCtgryKey) }}\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Description Column -->\\r\\n              <ng-container matColumnDef=\\\"comnt\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Comment</th>\\r\\n                <td mat-cell *matCellDef=\\\"let rule\\\">{{ rule.rulCmnt }}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Description Column -->\\r\\n              <ng-container matColumnDef=\\\"criteria\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Criteria</th>\\r\\n                <td mat-cell *matCellDef=\\\"let rule\\\">{{ rule.rulCrtraStr }}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Action Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let rule\\\">\\r\\n                  <a\\r\\n                    href=\\\"javascript:void(0);\\\"\\r\\n                    (click)=\\\"onEditRule(rule)\\\"\\r\\n                    class=\\\"iconBtn\\\"\\r\\n                    ><i class=\\\"fa fa-pencil\\\"></i\\r\\n                  ></a>\\r\\n                  <a (click)=\\\"onDeleteRul(rule.rulSeq)\\\" class=\\\"iconBtn delBtn\\\"\\r\\n                    ><i class=\\\"fa fa-trash-o\\\"></i\\r\\n                  ></a>\\r\\n                  <!-- <a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>  -->\\r\\n                </td></ng-container\\r\\n              >\\r\\n\\r\\n              <tr\\r\\n                mat-header-row\\r\\n                *matHeaderRowDef=\\\"displayedColumns\\\"\\r\\n                class=\\\"thead-light thead-blue\\\"\\r\\n              ></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator\\r\\n              [length]=\\\"datalength\\\"\\r\\n              [pageSizeOptions]=\\\"[10, 15, 20]\\\"\\r\\n              showFirstLastButtons\\r\\n            ></mat-paginator>\\r\\n          </div>\\r\\n\\r\\n          <!-- <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>Rule ID</th>\\r\\n                  <th>Rule Name</th>\\r\\n                  <th>Rule Category</th>\\r\\n                  <th>Comment</th>\\r\\n                  <th>Criteria</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let rule of rules\\\">\\r\\n                  <td>{{rule.rulId}}</td>\\r\\n                  <td>{{rule.rulNm}}</td>\\r\\n                  <td>{{findCategory(rule.rulCtgryKey)}}</td>\\r\\n                  <td>{{rule.rulCmnt}}</td>\\r\\n                  <td>{{rule.rulCrtraStr}}</td>\\r\\n                  <td>\\r\\n                    <a href=\\\"javascript:void(0);\\\" (click)=\\\"onEditRule(rule)\\\" class=\\\"iconBtn\\\"><i\\r\\n                        class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <a (click)=\\\"onDeleteRul(rule.rulSeq)\\\"  class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                     <a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> \\r\\n                  </td>\\r\\n                </tr>\\r\\n                 <tr>\\r\\n                  <td>1234578954</td>\\r\\n                  <td>Rule Name here</td>\\r\\n                  <td>Compliance</td>\\r\\n                  <td>Client gender is = M and NDI > Requested Amount / 12</td>\\r\\n                  <td>Active</td>\\r\\n                  <td>\\r\\n                    <a href=\\\"add-workflow.html\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <a href=\\\"#\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                    <a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>1234578954</td>\\r\\n                  <td>Rule Name here</td>\\r\\n                  <td>Internal Audit</td>\\r\\n                  <td>Client gender is = M and NDI > Requested Amount / 12</td>\\r\\n                  <td>Pending</td>\\r\\n                  <td>\\r\\n                    <a href=\\\"add-workflow.html\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <a href=\\\"#\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                    <a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>1234578954</td>\\r\\n                  <td>Rule Name here</td>\\r\\n                  <td>Product</td>\\r\\n                  <td>Client gender is = M and NDI > Requested Amount / 12</td>\\r\\n                  <td>Active</td>\\r\\n                  <td>\\r\\n                    <a href=\\\"add-workflow.html\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <a href=\\\"#\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                    <a href=\\\"#\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                  </td>\\r\\n                </tr> \\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<script>\\r\\n  $(document).ready(function () {\\r\\n    $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\r\\n  });\\r\\n</script>\\r\\n<script>\\r\\n  $(\\\".searchshow\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").addClass(\\\"intro\\\");\\r\\n  });\\r\\n  $(\\\".remove-search\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").removeClass(\\\"intro\\\");\\r\\n  });\\r\\n\\r\\n  function myFunction() {\\r\\n    var input, filter, table, tr, td, i;\\r\\n    input = document.getElementById(\\\"myInput\\\");\\r\\n    filter = input.value.toUpperCase();\\r\\n    table = document.getElementById(\\\"myTable\\\");\\r\\n    tr = table.getElementsByTagName(\\\"tr\\\");\\r\\n    for (i = 0; i < tr.length; i++) {\\r\\n      td = tr[i].getElementsByTagName(\\\"td\\\")[1];\\r\\n      if (td) {\\r\\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\\r\\n          tr[i].style.display = \\\"\\\";\\r\\n        } else {\\r\\n          tr[i].style.display = \\\"none\\\";\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n<script>\\r\\n  var index = 1;\\r\\n  $(\\\"ul.moreless li:gt(\\\" + index + \\\")\\\").hide();\\r\\n  $(\\\"ul.moreless\\\").append('<li class=\\\"more\\\">more..</li>');\\r\\n  $(\\\"ul.moreless li.more\\\").click(function () {\\r\\n    $(\\\"ul.moreless li.more\\\").remove();\\r\\n    $(\\\"ul.moreless li:gt(\\\" + index + \\\")\\\").show();\\r\\n    $(\\\"ul.moreless\\\").append('<li class=\\\"less\\\">Less..</li>');\\r\\n    $(\\\"ul.moreless li.less\\\").click(function () {\\r\\n      $(\\\"ul.moreless li.less\\\").remove();\\r\\n      $(\\\"ul.moreless li:gt(\\\" + index + \\\")\\\").remove();\\r\\n      $(\\\"ul.moreless\\\").append('<li class=\\\"more\\\">more..</li>');\\r\\n    });\\r\\n  });\\r\\n</script>\\r\\n<script type=\\\"text/javascript\\\">\\r\\n  $(document).ready(function () {\\r\\n    $(\\\".acc_trigger\\\").toggleClass(\\\"inactive-header\\\");\\r\\n\\r\\n    $(\\\".acc_trigger:first\\\").addClass(\\\"active-header\\\").next().show();\\r\\n    $(\\\".acc_trigger\\\").click(function () {\\r\\n      if ($(this).next().is(\\\":hidden\\\")) {\\r\\n        $(\\\".active-header\\\")\\r\\n          .toggleClass(\\\"active-header\\\")\\r\\n          .toggleClass(\\\"inactive-header\\\")\\r\\n          .next()\\r\\n          .slideToggle()\\r\\n          .toggleClass(\\\"open-content\\\");\\r\\n        $(this).toggleClass(\\\"active-header\\\").toggleClass(\\\"inactive-header\\\");\\r\\n        $(this).next().slideToggle().toggleClass(\\\"open-content\\\");\\r\\n      } else {\\r\\n        $(this).toggleClass(\\\"active-header\\\").toggleClass(\\\"inactive-header\\\");\\r\\n        $(this).next().slideToggle().toggleClass(\\\"open-content\\\");\\r\\n      }\\r\\n    });\\r\\n\\r\\n    return false;\\r\\n  });\\r\\n</script>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Rule } from '../../../shared/models/Rule.model';\r\nimport { RULES, RULES_CATEGORIES } from '../../../shared/mocks/rules.mocks';\r\nimport { Router } from '@angular/router';\r\nimport { RulesService } from '../../../shared/services/rules.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { merge } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-rules',\r\n  templateUrl: './rules.component.html',\r\n  styleUrls: ['./rules.component.css']\r\n})\r\nexport class RulesComponent implements OnInit {\r\n  rules: Rule[] = [];\r\n  rule: Rule = new Rule();\r\n  categories = RULES_CATEGORIES;\r\n  RuleForm: FormGroup;\r\n  fields = [];\r\n  advFields = [{ heading: \"Client\", columns: [{ title: \"First Name\", column: \"CLNT_FRST_NAME\" }, { title: \"Last Name\", column: \"LAST_NM\" }, { title: \"Age\", column: \"CLNT_AGE\" }] },\r\n  { heading: \"Credit Application\", columns: [{ title: \"Loan Cycle No.\", column: \"LOAN_CYCL_NUM\" }, { title: \"Recommended Loan Amount\", column: \"RCMND_LOAN_AMT\" }, { title: \"Aproved Loan Amount\", column: \"APRVD_LOAN_AMT\" }, { title: \"Service Charge\", column: \"SRVC_CHRG\" }, { title: \"Aproved Loan Amount\", column: \"APRVD_LOAN_AMT\" }, { title: \"Aproved Loan Amount\", column: \"APRVD_LOAN_AMT\" }] },\r\n  { heading: \"Nominee\", columns: [{ title: \"First Name\", column: \"NOM_FIRST_NAME\" }, { title: \"Age\", column: \"NOM_AGE\" }] },\r\n  { heading: \"Next Of Kin\", columns: [{ title: \"Age\", column: \"KIN_AGE\" }] },\r\n  { heading: \"Business Apprisal\", columns: [{ title: \"Business Income\", column: \"BIZ_INC\" }, { title: \"Primary Income\", column: \"PRM_INCM\" }, { title: \"Secondary Income\", column: \"SEC_INCM\" }, { title: \"Business Expense\", column: \"BIZ_EXP\" }, { title: \"Household Expense\", column: \"HSLD_EXP\" }, { title: \"Business Tenure\", column: \"BIZ_TNR\" }, { title: \"Net Desposable Income\", column: \"NDI\" }] },\r\n  { heading: \"PSC\", columns: [{ title: \"Poverty Criteria\", column: \"PVRTY_CRTR\" }] },\r\n  { heading: \"School Appraisal\", columns: [{ title: \"School Profit\", column: \"SCH_PROFIT\" }, { title: \"Total Fee\", column: \"TOT_FEE\" }, { title: \"Primary Income\", column: \"SCH_PRM_INCM\" }, { title: \"Secondary Income\", column: \"SCH_SEC_INCM\" }, { title: \"Business Expense\", column: \"SCH_BIZ_EXP\" }, { title: \"Household Expense\", column: \"SCH_HSLD_EXP\" }, { title: \"School Tenure\", column: \"SCH_TNR\" }, { title: \"Female Students Percentage\", column: \"FEMSSTDNTS_PER\" }, { title: \"Total Students\", column: \"TOT_STDNTS\" }, { title: \"No Fee Students\", column: \"TOTNOFEESTDNTS\" }, { title: \"School Income\", column: \"SCH_INCM\" }] },\r\n  { heading: \"Installment\", columns: [{ title: \"No. of Paid Installments\", column: \"PAID_INST_NUM\" }] }];\r\n\r\n  basicFields = [{ heading: \"Client\", columns: [{ title: \"First Name\", column: \"FRST_NM\" }, { title: \"Last Name\", column: \"LAST_NM\" }, { title: \"Number Of Dependants\", column: \"NUM_OF_DPND\" }, { title: \"Earning Members\", column: \"ERNG_MEMB\" }, { title: \"Household Members\", column: \"HSE_HLD_MEMB\" }, { title: \"Number Of Children\", column: \"NUM_OF_CHLDRN\" }, { title: \"Gender\", column: \"GNDR_KEY\" }, { title: \"Marital Status\", column: \"MRTL_STS_KEY\" }, { title: \"Education Level\", column: \"EDU_LVL_KEY\" }, { title: \"Occupation\", column: \"OCC_KEY\" }, { title: \"Nature of Disabilty\", column: \"NATR_OF_DIS_KEY\" }, { title: \"DOB\", column: \"DOB\" }] }];\r\n  ruleCategories = [{ value: 1, desc: \"Basic\" }, { value: 2, desc: \"Advance\" }];\r\n  constructor(private router: Router,\r\n    private rulesService: RulesService,\r\n    private toastr: ToastrService, private formBuilder: FormBuilder, private spinner: NgxSpinnerService, private toaster: ToastrService) { }\r\n\r\n\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: any;\r\n  \r\n    applyFilter(filterValue: string) {\r\n      this.filterValue = filterValue;\r\n      if (this.filterValue.length == 0) {\r\n        this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.paginator.pageIndex = 0;\r\n        this.datalength = this.countBeforeFilter;\r\n        this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n        return;\r\n      }\r\n      this.getFilteredData(filterValue.trim().toLowerCase())\r\n    }\r\n  \r\n    searchValue() {\r\n      this.filterValue = this.searchVal.trim();\r\n      if (this.filterValue.length == 0) {\r\n        this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.paginator.pageIndex = 0;\r\n        this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n        this.datalength = 0;\r\n        setTimeout(() => { this.datalength = this.countBeforeFilter; }, 200);\r\n        return;\r\n      }\r\n    }\r\n  \r\n    dataSource: any;\r\n    datalength: Number = 0;\r\n    lastPageIndex = 0;\r\n    dataBeforeFilter; \r\n    countBeforeFilter;\r\n    lastPageIndexBeforeFilter;\r\n  \r\n    filterValue: any = \"\";\r\n    searchVal = \"\";\r\n    isCount: boolean = true;\r\n\r\n\r\n  ngOnInit() {\r\n    this.displayedColumns = ['ruleid', 'ruleName', 'ruleCate', 'comnt', 'criteria', 'action'];\r\n    this.getRules();\r\n    this.RuleForm = this.formBuilder.group({\r\n      rulSeq: [''],\r\n      rulId: [''],\r\n      rulCtgryKey: ['', Validators.required],\r\n      rulNm: ['', Validators.required],\r\n      rulCmnt: ['', Validators.required],\r\n      rulCrtraStr: ['', Validators.required]\r\n    });\r\n  }\r\n  findCategory(id) {\r\n    let cat = '';\r\n    this.ruleCategories.forEach(c => {\r\n      if (c.value == id)\r\n        cat = c.desc;\r\n    })\r\n    return cat;\r\n  }\r\n  onSubmit() {\r\n    console.log(this.rule);\r\n    if (!this.isEdit) {\r\n      this.rulesService.addRule(this.RuleForm.value).subscribe(res => {\r\n        this.toastr.success('Rule Saved', 'Success');\r\n        (<any>$('#AdvanceRules')).modal('hide');\r\n        this.getRules();\r\n      }, error => {\r\n        this.toastr.error(\"Invalid Rule Criteria String\", \"Error\")\r\n      })\r\n    } else {\r\n      this.rulesService.updateRule(this.RuleForm.value).subscribe(res => {\r\n        this.toastr.success('Rule Saved', 'Success');\r\n        (<any>$('#AdvanceRules')).modal('hide');\r\n        this.getRules();\r\n      }, error => {\r\n        this.toastr.error(\"Invalid Rule Criteria String\", \"Error\")\r\n      })\r\n    }\r\n  }\r\n  setSideBarListener() {\r\n    $('.acc_trigger').toggleClass('inactive-header');\r\n    $('.acc_trigger').click(function () {\r\n      if ($(this).next().is(':hidden')) {\r\n        $('.active-header').toggleClass('active-header').toggleClass('inactive-header').next().slideToggle().toggleClass('open-content');\r\n        $(this).toggleClass('active-header').toggleClass('inactive-header');\r\n        $(this).next().slideToggle().toggleClass('open-content');\r\n      }\r\n      else {\r\n        $(this).toggleClass('active-header').toggleClass('inactive-header');\r\n        $(this).next().slideToggle().toggleClass('open-content');\r\n      }\r\n    });\r\n  }\r\n  addNewRule() {\r\n    this.isEdit = false;\r\n    this.RuleForm.reset();\r\n    (<any>$('#AdvanceRules')).modal('show');\r\n  }\r\n  isEdit = false;\r\n  onEditRule(rule) {\r\n    this.isEdit = true;\r\n    this.RuleForm.reset();\r\n    this.RuleForm = this.formBuilder.group({\r\n      rulSeq: [rule.rulSeq],\r\n      rulId: [rule.rulId],\r\n      rulCtgryKey: [rule.rulCtgryKey, Validators.required],\r\n      rulNm: [rule.rulNm, Validators.required],\r\n      rulCmnt: [rule.rulCmnt, Validators.required],\r\n      rulCrtraStr: [rule.rulCrtraStr, Validators.required]\r\n    });\r\n    this.onCategoryChange();\r\n    (<any>$('#AdvanceRules')).modal('show');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => this.loadNextPage())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  private getRules() {\r\n    this.isCount = true;\r\n    this.spinner.show();\r\n    this.rules = [];\r\n    this.dataSource = new MatTableDataSource(this.rules);\r\n    this.paginator.pageIndex = 0;\r\n    this.lastPageIndex = 0;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.searchVal = '';\r\n    this.filterValue = '';\r\n\r\n    this.rulesService.getRules(this.paginator.pageIndex, 10, \"\", this.isCount).subscribe(response => {\r\n      this.spinner.hide();\r\n      this.rules = response.rules\r\n      this.dataSource = new MatTableDataSource(this.rules);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.datalength = response.count;\r\n\r\n      this.dataBeforeFilter = this.dataSource.data;\r\n      this.countBeforeFilter = response.count;\r\n      this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n\r\n  }, error => {\r\n    this.spinner.hide();\r\n    console.log(error)\r\n  });\r\n}\r\n\r\nloadNextPage(){\r\n  this.isCount = false;\r\n  if (this.paginator.pageIndex < this.lastPageIndex)\r\n  return\r\n  if (this.dataSource.paginator.length == this.dataSource.data.length)\r\n  return;\r\n  if (((this.paginator.pageIndex + 1) * this.paginator.pageSize) - this.dataSource.data.length > 0) {\r\n    this.spinner.show();\r\n    this.rulesService.getRules(this.paginator.pageIndex, this.paginator.pageSize, this.filterValue, this.isCount).subscribe(response => {\r\n      this.spinner.hide();\r\n      this.rules = response.rules;\r\n      this.lastPageIndex = this.lastPageIndex + 1;\r\n      this.dataSource.data = this.dataSource.data.concat(response.rules);\r\n      response.count = this.datalength; \r\n      this.datalength = 0;\r\n      setTimeout(() => { this.datalength = response.count; }, 200);\r\n\r\n      if (this.filterValue.length == 0) {\r\n        this.dataBeforeFilter = this.dataSource.data;\r\n        this.countBeforeFilter = response.count;\r\n        this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n      }\r\n    }, error =>{\r\n        this.spinner.hide();\r\n        console.log('err', error);\r\n    });\r\n  }\r\n}\r\n\r\ngetFilteredData(filterValue:string){\r\n  this.isCount = true;\r\n    this.paginator.pageIndex = 0;\r\n    this.spinner.show();\r\n    this.rulesService.getRules(this.paginator.pageIndex, this.paginator.pageSize, filterValue, this.isCount).subscribe(response => {\r\n      this.rules = response.rules;\r\n      this.spinner.hide();\r\n      if (this.rules.length <= 0) {\r\n        this.toaster.info('No Data Found Against This Search', 'Information')\r\n      };\r\n\r\n      this.dataSource = new MatTableDataSource(this.rules);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.datalength = response.count;\r\n    }, error =>{\r\n      this.spinner.hide();\r\n      console.log('err', error);\r\n      });\r\n}\r\n\r\n  copyToMain(column) {\r\n    this.RuleForm.controls['rulCrtraStr'].setValue((this.RuleForm.controls['rulCrtraStr'].value == null ? \"\" : this.RuleForm.controls['rulCrtraStr'].value) + \" \" + column.column);\r\n  }\r\n\r\n  onCategoryChange() {\r\n    this.fields = [];\r\n    if (this.RuleForm.controls['rulCtgryKey'].value == 1) {\r\n      this.fields = this.basicFields;\r\n    } else {\r\n      this.fields = this.advFields;\r\n    }\r\n  }\r\n\r\n  headingClick(ev) {\r\n    $(ev).toggleClass('inactive-header');\r\n    if ($(ev).next().is(':hidden')) {\r\n      $('.active-header').toggleClass('active-header').toggleClass('inactive-header').next().slideToggle().toggleClass('open-content');\r\n      $(ev).toggleClass('active-header').toggleClass('inactive-header');\r\n      $(ev).next().slideToggle().toggleClass('open-content');\r\n    } else {\r\n      $(ev).toggleClass('active-header').toggleClass('inactive-header');\r\n      $(ev).next().slideToggle().toggleClass('open-content');\r\n    }\r\n  }\r\n\r\n  //delete\r\n  onDeleteRul(passedId) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: \"Are you sure you want to delete this Rule?\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.rulesService.deleteRule(passedId).subscribe(result => {\r\n          //this.pagedItems.splice(this.pagedItems.indexOf(passedId), 1);\r\n          this.getRules();\r\n          swal(\r\n            'Deleted!',\r\n            'Rule has been deleted.',\r\n            'success'\r\n          )\r\n        }, error => console.log('There was an error: ', error));\r\n      }\r\n    })\r\n\r\n  }\r\n  showFields = false;\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n  closeField() {\r\n    this.showFields = false;\r\n  }\r\n}","module.exports = \"\\r\\n.mat-cell, .mat-header-cell {\\r\\n  font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n  width: 100%;\\r\\n  }\\r\\n  \\r\\n  th.mat-header-cell {\\r\\n      vertical-align: middle;\\r\\n  }\\r\\n  \"","module.exports = \"<main class=\\\"main\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<app-left-side-bar></app-left-side-bar>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"content mb-md-5\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Common Codes \\r\\n\\t\\t\\t\\t\\t\\t\\t  <i class=\\\"fa fa-search\\\"> </i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</h6>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"col-sm-10\\\" style=\\\"float:left;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"showFields\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-sm-6 addBtn\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"addItem()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Code</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Description</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let code of pagedItems\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{code.refCdGrp}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"commonCodeVale(code.refCdGrpSeq)\\\">{{code.refCdGrpName}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a>{{code.refCdGrpCmnt}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"editItem(code.refCdGrpSeq)\\\" class=\\\"iconBtn\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"commonCodeVale(code.refCdGrpSeq)\\\" class=\\\"iconBtn\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/icon2.png\\\" alt=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t<!---- DATA TABLES---->\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" multiTemplateDataRows matSort id=\\\"myTable\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- Code Column -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"refCdGrp\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let code\\\">{{code.refCdGrp}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--name Column -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"refCdGrpName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"commonCodeVale(code.refCdGrpSeq)\\\">{{code.refCdGrpName}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- Description Column -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"refCdGrpCmnt\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a>{{code.refCdGrpCmnt}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- Action Column -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"action\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"editItem(code.refCdGrpSeq)\\\" class=\\\"iconBtn\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"commonCodeVale(code.refCdGrpSeq)\\\" class=\\\"iconBtn\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/icon2.png\\\" alt=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\t\\t\\t\\t\\t\\t</table>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<mat-paginator [pageSizeOptions]=\\\"[10, 20]\\\" showFirstLastButtons>\\r\\n\\t\\t\\t\\t\\t\\t</mat-paginator>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</main>\\r\\n<div class=\\\"modal fade\\\" id=\\\"cmmoncodes\\\" role=\\\"dialog\\\">\\r\\n\\t<div class=\\\"modal-dialog mymodal\\\">\\r\\n\\r\\n\\t\\t<!-- Modal content-->\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\">Common Code</h5>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<form class=\\\"md-float-material\\\" [formGroup]=\\\"commonCodeForm\\\" (ngSubmit)=\\\"onCommonCodeSubmit()\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"cRow\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"cCol3-col\\\">\\r\\n                    <label>Code:</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"groupCode\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.groupCode.errors }\\\" /> -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div *ngIf=\\\"submitted && f.groupCode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.groupCode.errors.required\\\">First Name is required</div>\\r\\n                        </div> -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"cCol3-col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Name:</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input (keypress)=\\\"keyPress($event)\\\" type=\\\"text\\\" formControlName=\\\"groupName\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.groupName.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div *ngIf=\\\"submitted && f.groupName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.groupName.errors.required\\\">Last Name is required</div>\\r\\n                        </div>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"cCol3-col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Description:</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input (keypress)=\\\"keyPress($event)\\\" type=\\\"text\\\" formControlName=\\\"groupDescription\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.groupDescription.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"submitted && f.groupDescription.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.groupDescription.errors.required\\\">Email is required</div>\\r\\n                            <div *ngIf=\\\"f.groupDescription.errors.email\\\">Email must be a valid email address</div>\\r\\n                        </div>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- <div *ngIf=\\\"submitted && f.groupCode.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n\\t                  <i  class=\\\"fa fa-exclamation-circle\\\"></i>  \\r\\n\\t                  <strong *ngIf=\\\"f.groupCode.errors.required\\\">Please Enter Group Code</strong>\\r\\n                 </div> -->\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.groupName.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<strong *ngIf=\\\"f.groupName.errors\\\">Please Enter Group Name</strong>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.groupDescription.errors\\\" class=\\\"alert alert-warning mt-2 mb-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<strong *ngIf=\\\"f.groupDescription.errors\\\">Please Enter Group Description</strong>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer text-center\\\">\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary\\\">Ok</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataService } from '../../shared/services/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-setup',\r\n  templateUrl: './setup.component.html',\r\n  styleUrls: ['./setup.component.css']\r\n})\r\nexport class SetupComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: any;\r\n  dataSource: any;\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n        this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  //commonCodeList: any = [];\r\n  commonCodeForm: FormGroup;\r\n  submitted = false;\r\n  // array of all items to be paged\r\n  private allItems: any = [];\r\n  // pager object\r\n  pager: any = {};\r\n  // paged items\r\n  pagedItems: any = [];\r\n  //listing: any;\r\n  showFields = false;\r\n  constructor(private router: Router, private DataService: DataService, private formBuilder: FormBuilder, private spinner: NgxSpinnerService, private toaster: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.displayedColumns = ['refCdGrp', 'refCdGrpName', 'refCdGrpCmnt', 'action'];\r\n    this.commonCodeForm = this.formBuilder.group({\r\n      groupCode: [''],\r\n      formSaveKey: ['add'],\r\n      groupName: ['', Validators.required],\r\n      groupDescription: ['', Validators.required]\r\n    });\r\n    this.listing(1);\r\n  }\r\n  listing(page: number) {\r\n    this.spinner.show();\r\n    this.DataService.getAllCommonCode().subscribe((data) => {\r\n      console.log(data);\r\n      this.spinner.hide();\r\n      this.allItems = data;\r\n      // initialize to page 1\r\n      this.setPage(page);\r\n      this.dataSource = new MatTableDataSource(this.allItems);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      console.log('err');\r\n      console.log('err', error);\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.commonCodeForm.controls; }\r\n  currentpage: number = 0;\r\n  onCommonCodeSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.commonCodeForm.invalid) {\r\n      console.log(this.commonCodeForm);\r\n      return;\r\n    }\r\n    this.spinner.show();\r\n    const formValue: any = this.commonCodeForm.value;\r\n    console.log(formValue.formSaveKey);\r\n    if (formValue.formSaveKey === 'add') {\r\n      this.DataService.addCommonCode(formValue).subscribe((data) => {\r\n        //let usr = JSON.parse(data);\r\n        this.spinner.hide();\r\n        this.toaster.success('Saved');\r\n        (<any>$('#cmmoncodes')).modal('hide');\r\n        // this.pagedItems.splice(0, 0, data.group);\r\n        console.log(data);\r\n        this.listing(1);\r\n\r\n        //this.pagedItems.push(data.group);\r\n        sessionStorage.setItem('groupSeq', data['clientSeq']);\r\n      }, (error) => {\r\n        this.spinner.hide();\r\n        this.toaster.error('Error');\r\n        console.log('err', error);\r\n      });\r\n    } else if (formValue.formSaveKey === 'update') {\r\n      this.DataService.updateAllCommonCode(formValue).subscribe((data) => {\r\n        //let usr = JSON.parse(data);\r\n        (<any>$('#cmmoncodes')).modal('hide');\r\n        this.listing(this.pager.currentPage);\r\n        this.spinner.hide();\r\n        this.toaster.success('Updated');\r\n        //this.pagedItems.splice(this.pagedItems.indexOf(data.group['refCdGrpSeq']), 1);\r\n        ///this.pagedItems.push(data.group);\r\n        console.log(data);\r\n        sessionStorage.setItem('groupSeq', data['clientSeq']);\r\n      }, (error) => {\r\n        this.spinner.hide();\r\n        this.toaster.error('Error');\r\n        console.log('err', error);\r\n      });\r\n    }\r\n    return false;\r\n  }\r\n  commonCodeVale(id) {\r\n    sessionStorage.setItem('clickCommonCode', id);\r\n    this.router.navigate(['/setup/common-code-values', id]);\r\n    //this.router.navigate(['/product-details', id]);\r\n  }\r\n  //pagenation\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.DataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n  //add\r\n  addItem() {\r\n    this.submitted = false;\r\n    (<any>$('#cmmoncodes')).modal('show');\r\n    this.commonCodeForm = this.formBuilder.group({\r\n      groupCode: [''],\r\n      formSaveKey: ['add'],\r\n      groupName: ['', Validators.required],\r\n      groupDescription: ['', Validators.required]\r\n    });\r\n  }\r\n  //edit\r\n  editItem(passedId) {\r\n    this.currentpage = this.pager.currentPage;\r\n    console.log(passedId);\r\n    this.DataService.editAllCommonCode(passedId).subscribe(result => {\r\n      console.log(result);\r\n      (<any>$('#cmmoncodes')).modal('show');\r\n      this.commonCodeForm = this.formBuilder.group({\r\n        groupSeq: [result.refCdGrpSeq],\r\n        formSaveKey: ['update'],\r\n        groupCode: [result.refCdGrp],\r\n        groupName: [result.refCdGrpName],\r\n        groupDescription: [result.refCdGrpCmnt],\r\n      });\r\n    }, error => console.log('There was an error: ', error));\r\n  }\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n  keyPress(event: any) {\r\n    const pattern = /[a-zA-Z0-9\\+\\-\\ ]/;\r\n\r\n    const inputChar = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SetupComponent } from './setup.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RulesComponent } from './rules/rules.component';\r\nimport { AddRuleComponent } from './rules/add-rule/add-rule.component';\r\nimport { AddressTypeComponent } from './address-type/address-type.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { ApprovalWorkflowComponent } from './approval-workflow/approval-workflow.component';\r\nimport { AddWorkflowComponent } from './approval-workflow/add-workflow/add-workflow.component';\r\nimport { CommonCodeValuesComponent } from './common-code-values/common-code-values.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { PaymentTypesComponent } from './types/payment-types/payment-types.component';\r\nimport { ExpenseTypesComponent } from './types/expense-types/expense-types.component';\r\nimport { CommonCodeComponent } from './common-code/common-code.component';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatExpansionModule,\r\n  MatListModule,\r\n  MatFormFieldModule\r\n} from '@angular/material';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ChargeTypesComponent } from './types/charge-types/charge-types.component';\r\nimport { RecoveryTypesComponent } from './types/recovery-types/recovery-types.component';\r\nimport { ProductBySeqComponent } from './products/product-by-seq/product-by-seq.component';\r\nimport { HealthInsurancePlanComponent } from './health-insurance-plan/health-insurance-plan.component';\r\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { BusinessSectorComponent } from './business-sector/business-sector.component';\r\nimport { BusinessActivityComponent } from './business-activity/business-activity.component';\r\nimport { AnswerComponent } from './answer/answer.component';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { Auth } from '../../shared/models/Auth.model';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthGuard } from './AuthGuard.service';\r\nimport { FileLoaderComponent } from './file-loader/file-loader.component';\r\nimport { UserManagmentComponent } from './user-managment/user-managment.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SetupComponent, canActivate: [AuthGuard]\r\n  }, // default route of the module\r\n  { path: 'common-codes', component: SetupComponent, canActivate: [AuthGuard] },\r\n  { path: 'common-code-values/:id', component: CommonCodeValuesComponent, canActivate: [AuthGuard] },\r\n  { path: 'products', component: ProductsComponent, canActivate: [AuthGuard] },\r\n  { path: 'products/:prdGrpNm/:id', component: ProductBySeqComponent, canActivate: [AuthGuard] },\r\n  { path: 'addProduct', loadChildren: './products/Add-Product/add-product.module#AddProductModule', canActivate: [AuthGuard] },\r\n  { path: 'rules', component: RulesComponent, canActivate: [AuthGuard] },\r\n  { path: 'rules/:id', component: AddRuleComponent, canActivate: [AuthGuard] },\r\n  // { path: 'common-codes/:id', component: AddressTypeComponent },\r\n  { path: 'organization', loadChildren: './organization/organization.module#OrganizationModule', canActivate: [AuthGuard] },\r\n  { path: 'geography', loadChildren: './geography/geograpthy.module#GeograpthyModule', canActivate: [AuthGuard] },\r\n  { path: 'approval-workflow', component: ApprovalWorkflowComponent, canActivate: [AuthGuard] },\r\n  { path: 'approval-workflow/add-workflow', component: AddWorkflowComponent, canActivate: [AuthGuard] },\r\n  { path: 'communication-workflow', loadChildren: './communication-workflow/communicatoin-workflow.module#CommunicatoinWorkflowModule', canActivate: [AuthGuard] },\r\n  { path: 'city', component: CityComponent, canActivate: [AuthGuard] },\r\n  { path: 'payment-types', component: PaymentTypesComponent, canActivate: [AuthGuard] },\r\n  { path: 'expense-types', component: ExpenseTypesComponent, canActivate: [AuthGuard] },\r\n  { path: 'charge-types', component: ChargeTypesComponent, canActivate: [AuthGuard] },\r\n  { path: 'recovery-types', component: RecoveryTypesComponent, canActivate: [AuthGuard] },\r\n  { path: 'health-insurance-plan', component: HealthInsurancePlanComponent, canActivate: [AuthGuard] },\r\n  { path: 'tag', component: TagsComponent, canActivate: [AuthGuard] },\r\n  { path: 'Questionnaire', component: QuestionnaireComponent, canActivate: [AuthGuard] },\r\n  { path: 'question', component: QuestionComponent, canActivate: [AuthGuard] },\r\n  { path: 'answer', component: AnswerComponent, canActivate: [AuthGuard] },\r\n  { path: 'business-sector', component: BusinessSectorComponent, canActivate: [AuthGuard] },\r\n  { path: 'business-activity', component: BusinessActivityComponent, canActivate: [AuthGuard] },\r\n  { path: 'file-upload', component: FileLoaderComponent, canActivate: [AuthGuard] },\r\n  { path: 'user-managment', component: UserManagmentComponent, canActivate: [AuthGuard] },\r\n\r\n];\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatExpansionModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes),\r\n    DataTablesModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatCheckboxModule,\r\n    MatListModule,\r\n    MatFormFieldModule \r\n  ],\r\n  declarations: [\r\n    SetupComponent,\r\n    CommonCodeValuesComponent,\r\n    ProductsComponent,\r\n    RulesComponent,\r\n    AddRuleComponent,\r\n    AddressTypeComponent,\r\n    ApprovalWorkflowComponent,\r\n    AddWorkflowComponent,\r\n    PaymentTypesComponent,\r\n    ExpenseTypesComponent,\r\n    CityComponent,\r\n    CommonCodeComponent,\r\n    ChargeTypesComponent,\r\n    RecoveryTypesComponent,\r\n    ProductBySeqComponent,\r\n    HealthInsurancePlanComponent,\r\n    TagsComponent,\r\n    QuestionnaireComponent,\r\n    QuestionComponent,\r\n    AnswerComponent,\r\n    BusinessSectorComponent,\r\n    BusinessActivityComponent,\r\n    FileLoaderComponent,\r\n    UserManagmentComponent\r\n  ],\r\n  providers: [AuthGuard]\r\n})\r\nexport class SetupModule { }\r\n\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t    <div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<app-left-side-bar></app-left-side-bar>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"content mb-md-5\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mysearchbox\\\">\\r\\n              <h6 class=\\\"d-inline-block searchshow\\\">Tags\\r\\n                <!-- <i class=\\\"fa fa-search\\\"></i> -->\\r\\n              </h6>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"mysearch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 addBtn\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#businessector\\\" (click)=\\\"onAddNewClick()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"modal fade\\\" id=\\\"businessector\\\" role=\\\"dialog\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-dialog mymodal\\\"> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- Modal content-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t                <h5 class=\\\"modal-title\\\">Tag</h5>\\r\\n                </div>\\r\\n                \\r\\n                <form [formGroup]=\\\"tagForm\\\" (ngSubmit)=\\\"addTagsSubmit()\\\">\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                <ul class=\\\"infolist\\\">\\r\\n                </ul>\\r\\n                  <div class=\\\"cRow\\\">\\r\\n                      <div class=\\\"cCol2\\\" >\\r\\n                          <label>Tag Name:</label>\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"tagNm\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.tagNm.errors }\\\" />\\r\\n                          <div *ngIf=\\\"submitted && form.tagNm.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"form.tagNm.errors.required\\\">Tag Name is required                                \\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"cCol30\\\">\\r\\n                      <label>Tag Description:</label>\\r\\n                      <input type=\\\"text\\\" formControlName=\\\"tagDscr\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.tagDscr.errors }\\\" />\\r\\n                      <div *ngIf=\\\"submitted && form.tagDscr.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"form.tagDscr.errors.required\\\">Tag Description is required</div>\\r\\n                      </div>\\r\\n                      \\r\\n                      </div>\\r\\n                      <div class=\\\"cCol2\\\">\\r\\n                    <label>Severity Flag</label>\\r\\n                    <div>\\r\\n                    <label class=\\\"form-check-inline\\\">\\r\\n                        <div>\\r\\n                          <input type=\\\"radio\\\" formControlName=\\\"svrtyFlgKey\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"svrtyFlgKey\\\" [value]=\\\"1\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.svrtyFlgKey.errors }\\\" />Yes\\r\\n                          <input type=\\\"radio\\\" formControlName=\\\"svrtyFlgKey\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"svrtyFlgKey\\\" [value]=\\\"0\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.svrtyFlgKey.errors }\\\" />No\\r\\n                          <div *ngIf=\\\"submitted && form.svrtyFlgKey.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"form.svrtyFlgKey.errors.required\\\">Severity Flag is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                <div class=\\\"modal-footer text-center\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" (click)=\\\"addTagsSubmit()\\\">Ok</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              </form>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n              <th>Tag ID</th>\\r\\n              <th>Tag Name</th>\\r\\n              <th>Tag Description</th>\\r\\n              <th>Severity Flag</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n</thead>\\r\\n<tbody>\\t\\r\\n  <tr *ngFor=\\\"let tag of tags\\\">\\r\\n    <td>{{tag.tagId}}</td> \\r\\n    <td>{{tag.tagNm}}</td>\\r\\n    <td>{{tag.tagDscr}}</td>\\r\\n    <td>{{getFlag(tag.svrtyFlgKey)}}</td>\\r\\n    <td>\\t\\t\\t\\t\\t\\t\\r\\n      <a  class=\\\"iconBtn\\\" (click)=\\\"onEdit(tag)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n      <a  class=\\\"iconBtn delBtn\\\" (click)=\\\"onDelete(tag.tagsSeq)\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n      <!-- <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a> -->\\r\\n    </td>\\r\\n  </tr>\\r\\n</tbody>\\r\\n</table>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t<!-- <div class=\\\"back\\\">\\r\\n\\t\\t\\t\\t<a href=\\\"setup.html\\\" class=\\\"btn btn-primary btn-min\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</a>\\r\\n\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TagsService } from '../../../shared/services/tags.service';\r\nimport { Tag } from '../../../shared/models/tag.model';\r\nimport { FormBuilder, FormGroup, Validators,NgForm  } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-tags',\r\n  templateUrl: './tags.component.html',\r\n  styleUrls: ['./tags.component.css']\r\n})\r\nexport class TagsComponent implements OnInit {\r\n  \r\n  public tags: Tag[];\r\n  public addTag: Tag = new Tag();\r\n  public isEdit: Boolean = false;\r\n\r\n  tagForm: FormGroup;\r\n  submitted = false;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private tagsService: TagsService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n    \r\n    this.tagForm = this.formBuilder.group({\r\n      tagNm: ['', Validators.required],\r\n      tagDscr: ['', Validators.required],\r\n      svrtyFlgKey: ['', Validators.required],\r\n      });\r\n    this.tagsService.getTags().subscribe(data => this.tags = data);\r\n  }\r\n\r\n  get form() \r\n  { \r\n    return this.tagForm.controls; \r\n  }\r\n\r\n  onAddNewClick() {\r\n    this.tagForm.reset();\r\n    this.isEdit = false;\r\n    this.addTag = new Tag();\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n  \r\n  addTagsSubmit(){\r\n    this.submitted = true;\r\n    if (this.tagForm.invalid) {\r\n      return;\r\n  }\r\n    this.addTag.tagNm= this.tagForm.value.tagNm;\r\n    this.addTag.tagDscr= this.tagForm.value.tagDscr;\r\n    this.addTag.svrtyFlgKey= this.tagForm.value.svrtyFlgKey;\r\n\r\n    (<any>$('#businessector')).modal('hide');\r\n    console.log(this.addTag);\r\n    if(this.isEdit) {\r\n      this.tagsService.updateTag(this.addTag).subscribe(data => {\r\n        this.addTag = data;\r\n        this.tagsService.getTags().subscribe(data => this.tags = data);\r\n      });\r\n    }\r\n    else {\r\n      this.tagsService.addTag(this.addTag).subscribe(data => {\r\n        this.addTag = data;\r\n        this.tagsService.getTags().subscribe(data => this.tags = data);\r\n      }); \r\n    }         \r\n  }\r\n\r\n  onEdit(Tags){\r\n    this.isEdit = true;\r\n    this.tagForm.patchValue(Tags);\r\n    console.log(Tags);\r\n    this.addTag = Tags;\r\n    (<any>$('#businessector')).modal('show');\r\n  }\r\n\r\n  onDelete(Tags) { \r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this Tag?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.tagsService.deleteTag(Tags).subscribe(data => {\r\n          this.tagsService.getTags().subscribe(data => this.tags = data);\r\n        }); \r\n      }\r\n    });\r\n\r\n    console.log(Tags);  \r\n  }\r\n    getFlag(key)\r\n  {\r\n    let flag='';\r\n    if(key===1)\r\n    {\r\n      flag='Yes';\r\n    }\r\n    else if(key===0)\r\n    { \r\n      flag='No';\r\n    }\r\n    return flag; \r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\r\\n.mat-cell, .mat-header-cell {\\r\\n  font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n  width: 100%;\\r\\n  }\\r\\n  \\r\\n  th.mat-header-cell {\\r\\n      vertical-align: middle;\\r\\n  }\\r\\n  \"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Search\\r\\n                  <i class=\\\"fa fa-search\\\"> </i>\\r\\n                </h6>\\r\\n              </div>\\r\\n              <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n                <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"col-sm-10\\\" style=\\\"float:left;\\\">\\r\\n                    <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                      <input id=\\\"searchBox\\\" (keyup)=\\\"searchValue()\\\" autofocus matInput name=\\\"searchValue\\\"\\r\\n                        [(ngModel)]=\\\"searchVal\\\" placeholder=\\\"Search\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\" style=\\\"float:right;\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\">Search</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"openTypeModal()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n              <div class=\\\"modal fade\\\" id=\\\"addprduct\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog bigger mymodal\\\">\\r\\n\\r\\n                  <!-- Modal content-->\\r\\n                  <div class=\\\"modal-content text-left\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                      <h5 class=\\\"modal-title\\\">Charge Type</h5>\\r\\n                    </div>\\r\\n                    <form [formGroup]=\\\"paymentTypesForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                      <div class=\\\"modal-body\\\"  style=\\\"overflow:visible;\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Id:\\\" formControlName=\\\"typId\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typId').valid\\\">\\r\\n                                Id is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Type:\\\" formControlName=\\\"typStr\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStr').valid\\\">\\r\\n                                Type is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <!-- <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"GL Account Mappping:\\\" formControlName=\\\"glAcctNum\\\"\\r\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('glAcctNum').valid\\\">\\r\\n                                Mapping is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field> -->\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Select Branch:\\\" formControlName=\\\"brnchSeq\\\" name=\\\"brnchSeq\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option [value]=\\\"0\\\">Global</mat-option>\\r\\n                                <mat-option *ngFor=\\\"let edu of allBrnches\\\" [value]=\\\"edu.brnchSeq\\\">\\r\\n                                  ({{edu.brnchCd}}) - {{edu.brnchNm}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                            </mat-form-field>\\r\\n                            <!-- <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Select GL Account Mapping:\\\" formControlName=\\\"glAcctNum\\\"\\r\\n                                name=\\\"glMapping\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option *ngFor=\\\"let edu of GlAccounts\\\" [value]=\\\"edu.accNum\\\">\\r\\n                                  {{edu.desc}}\\r\\n                                </mat-option>\\r\\n                              </mat-select> -->\\r\\n                            <!-- <mat-error *ngIf=\\\"!paymentTypesForm.get('glMapping').valid\\\">\\r\\n                                  Mapping is <strong>required</strong>\\r\\n                                </mat-error> \\r\\n                            </mat-form-field>-->\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Select Status:\\\" formControlName=\\\"typStsKey\\\" name=\\\"typStsKey\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option *ngFor=\\\"let edu of statusArray\\\" [value]=\\\"edu.codeKey\\\">\\r\\n                                  {{edu.codeValue}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStsKey').valid\\\">\\r\\n                                Institution Name is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol4\\\">\\r\\n                            <ng-select [items]=\\\"GlAccounts\\\" required required bindLabel=\\\"desc\\\" bindValue=\\\"accNum\\\"\\r\\n                              name=\\\"glMapping\\\" placeholder=\\\"Select GL Account Mapping\\\" formControlName=\\\"glAcctNum\\\">\\r\\n                            </ng-select>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-footer text-center\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\">Ok</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>Charge Type ID</th>\\r\\n                  <th>Charge Type</th>\\r\\n                  <th>GL Account Mappping</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let code of pagedItems\\\">\\r\\n                  <td>{{code.typId}}</td>\\r\\n                  <td>{{code.typStr}}</td>\\r\\n                  <td>{{findDscForAccountNo(code.desc)}}</td>\\r\\n                  <td>{{findValueByKey(code.typStsKey)}}</td>\\r\\n                  <td>\\r\\n                    <a (click)=\\\"editItem(code)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <a (click)=\\\"deleteItem(code)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                    <a class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n\\r\\n\\r\\n          <!---- DATA TABLES---->\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" matSort>\\r\\n\\r\\n              <!-- Charge Type ID Column -->\\r\\n              <ng-container matColumnDef=\\\"typId\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Charge Type ID</th>\\r\\n                <td mat-cell *matCellDef=\\\"let chrg\\\">{{chrg.typId}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!--Charge Type -->\\r\\n              <ng-container matColumnDef=\\\"typStr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Charge Type</th>\\r\\n                <td mat-cell *matCellDef=\\\"let chrg\\\">{{chrg.typStr}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- GL Account Mapping Column -->\\r\\n              <ng-container matColumnDef=\\\"desc\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>GL Account Mapping</th>\\r\\n                <td mat-cell *matCellDef=\\\"let chrg\\\">{{findDscForAccountNo(chrg.desc)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Branch Column -->\\r\\n              <ng-container matColumnDef=\\\"brnchSeq\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findBranchBySeq(pymnt.brnchSeq)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Status Column -->\\r\\n              <ng-container matColumnDef=\\\"typStsKey\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\r\\n                <td mat-cell *matCellDef=\\\"let chrg\\\">{{findValueByKey(chrg.typStsKey)}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Action Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let chrg\\\">\\r\\n                  <a (click)=\\\"editItem(chrg)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(chrg)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <a class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [length]=\\\"datalength\\\" [pageSizeOptions]=\\\"[10, 15,  20]\\\" showFirstLastButtons>\\r\\n            </mat-paginator>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<script>\\r\\n  $(document).ready(function () {\\r\\n    $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\r\\n  });\\r\\n</script>\\r\\n<script>\\r\\n  $(\\\".searchshow\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").addClass(\\\"intro\\\");\\r\\n  });\\r\\n  $(\\\".remove-search\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").removeClass(\\\"intro\\\");\\r\\n  });\\r\\n\\r\\n  function myFunction() {\\r\\n    var input, filter, table, tr, td, i;\\r\\n    input = document.getElementById(\\\"myInput\\\");\\r\\n    filter = input.value.toUpperCase();\\r\\n    table = document.getElementById(\\\"myTable\\\");\\r\\n    tr = table.getElementsByTagName(\\\"tr\\\");\\r\\n    for (i = 0; i < tr.length; i++) {\\r\\n      td = tr[i].getElementsByTagName(\\\"td\\\")[1];\\r\\n      if (td) {\\r\\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\\r\\n          tr[i].style.display = \\\"\\\";\\r\\n        } else {\\r\\n          tr[i].style.display = \\\"none\\\";\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n<script>\\r\\n  var index = 1;\\r\\n  $('ul.moreless li:gt(' + index + ')').hide();\\r\\n  $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n  $('ul.moreless li.more').click(function () {\\r\\n    $('ul.moreless li.more').remove();\\r\\n    $('ul.moreless li:gt(' + index + ')').show();\\r\\n    $('ul.moreless').append('<li class=\\\"less\\\">Less..</li>');\\r\\n    $('ul.moreless li.less').click(function () {\\r\\n      $('ul.moreless li.less').remove();\\r\\n      $('ul.moreless li:gt(' + index + ')').remove();\\r\\n      $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n    });\\r\\n  });\\r\\n</script>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MyErrorStateMatcher } from '../../../../shared/helpers/MyErrorStateMatcher.helper';\r\nimport { PaymentType } from '../../../../shared/models/paymentType.model';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../../../../shared/services/data.service';\r\nimport { PaymentTypesService } from '../../../../shared/services/paymentTypes.service';\r\nimport swal from 'sweetalert2';\r\nimport { CommonService } from '../../../../shared/services/common.service';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { merge } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-charge-types',\r\n  templateUrl: './charge-types.component.html',\r\n  styleUrls: ['./charge-types.component.css']\r\n})\r\nexport class ChargeTypesComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: any;\r\n  dataSource: any;\r\n  applyFilter(filterValue: string) {\r\n    this.filterValue = filterValue;\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.datalength = this.countBeforeFilter;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      return;\r\n    }\r\n    this.getFilteredData(filterValue.trim().toLowerCase())\r\n  }\r\n\r\n  searchValue() {\r\n    this.filterValue = this.searchVal.trim();\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      this.datalength = 0;\r\n      setTimeout(() => { this.datalength = this.countBeforeFilter; }, 200);\r\n      return;\r\n    }\r\n  }\r\n\r\n  typeNumber = 1;\r\n  paymentTypesForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  submitted = false;\r\n  showFields = false;\r\n  // array of all items to be paged\r\n  private allItems: PaymentType[] = [];\r\n  // pager object\r\n  pager: any = {};\r\n  // paged items\r\n  pagedItems: PaymentType[] = [];\r\n  isEdit = false;\r\n  allStatuses: any[] = [];\r\n  statusArray: any[];\r\n  GlAccounts: any[] = [];\r\n\r\n    \r\n  datalength: Number = 0;\r\n  lastPageIndex = 0;\r\n  dataBeforeFilter; \r\n  countBeforeFilter;\r\n  lastPageIndexBeforeFilter;\r\n\r\n  filterValue: any = \"\";\r\n  searchVal = \"\";\r\n  isCount: boolean = true;\r\n\r\n  constructor(private router: Router,\r\n    private dataService: DataService,\r\n    private fb: FormBuilder,\r\n    private paymentTypesService: PaymentTypesService,\r\n    private commonService: CommonService,\r\n    private spinner: NgxSpinnerService,\r\n    private toaster: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.displayedColumns = ['typId', 'typStr', 'desc','brnchSeq', 'typStsKey', 'action'];\r\n    this.paymentTypesForm = this.fb.group({\r\n      typId: ['', Validators.required],\r\n      typStr: ['', Validators.required],\r\n      glAcctNum: ['', Validators.required],\r\n      typStsKey: ['', Validators.required],\r\n      typSeq: [''],\r\n      brnchSeq: ['', Validators.required]\r\n    });\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe((d) => {\r\n      this.statusArray = d;\r\n    });\r\n\r\n    this.commonService.getGlAccounts().subscribe((d) => {\r\n      this.GlAccounts = d;\r\n    });\r\n    this.loadStatuses();\r\n    this.loadPayment()\r\n\r\n    this.paymentTypesService.getAllBrnches().subscribe(res=>{\r\n      this.allBrnches=res;\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => this.loadNextPage())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  loadPayment(){\r\n    this.isCount =true;\r\n    this.spinner.show();\r\n    this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, 10, \"\", this.isCount, 0).subscribe((data) => {\r\n      this.allItems = data.typs;\r\n      this.spinner.hide();\r\n\r\n       this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n  \r\n        this.dataBeforeFilter = this.dataSource.data;\r\n        this.countBeforeFilter = data.count;\r\n        this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error)\r\n    });\r\n  }\r\n  loadNextPage(){\r\n    this.isCount = false;\r\n    if (this.paginator.pageIndex < this.lastPageIndex)\r\n    return\r\n    if (this.dataSource.paginator.length == this.dataSource.data.length)\r\n    return;\r\n    if (((this.paginator.pageIndex + 1) * this.paginator.pageSize) - this.dataSource.data.length > 0) {\r\n      this.spinner.show();\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, this.filterValue, this.isCount, 0).subscribe(data => {\r\n        this.spinner.hide();\r\n        this.allItems = data.typs;\r\n        this.lastPageIndex = this.lastPageIndex + 1;\r\n        this.dataSource.data = this.dataSource.data.concat(data.typs);\r\n\r\n        data.count = this.datalength; \r\n        this.datalength = 0;\r\n        setTimeout(() => { this.datalength = data.count; }, 200);\r\n\r\n        if (this.filterValue.length == 0) {\r\n          this.dataBeforeFilter = this.dataSource.data;\r\n          this.countBeforeFilter = data.count;\r\n          this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n        }\r\n      }, error =>{\r\n          this.spinner.hide();\r\n          console.log('err', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  getFilteredData(filterValue:string){\r\n    this.isCount = true;\r\n      this.paginator.pageIndex = 0;\r\n      this.lastPageIndex = 0;\r\n      this.spinner.show();\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, filterValue, this.isCount, 0).subscribe(data => {\r\n        this.allItems = data.typs;\r\n        this.spinner.hide();\r\n        if (this.allItems.length <= 0) {\r\n          this.toaster.info('No Data Found Against This Search', 'Information')\r\n        };\r\n  \r\n        this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n      }, error =>{\r\n        this.spinner.hide();\r\n        console.log('err', error);\r\n        });\r\n  }\r\n\r\n  allBrnches = [];\r\n  openTypeModal() {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.reset();\r\n    this.isEdit = false;\r\n  }\r\n  findValueByKey(key) {\r\n    let status = 'not found';\r\n    this.statusArray.forEach(s => {\r\n      if (s.codeKey === key) {\r\n        status = s.codeValue;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n  findBranchBySeq(key) {\r\n    if(key == null || key == undefined)\r\n    return \"Not Assigned\";\r\n    if(key==0)\r\n    return \"Global\";\r\n    let status = 'not found';\r\n    this.allBrnches.forEach(s => {\r\n      if (s.brnchSeq === key) {\r\n        status = s.brnchNm;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n  editItem(paymentType: PaymentType) {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.patchValue(paymentType);\r\n    this.isEdit = true;\r\n  }\r\n  deleteItem(type) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this payment type?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.paymentTypesService.deleteType(type.typSeq).subscribe(() => {\r\n          this.allItems.splice(this.allItems.indexOf(type.pdcId), 1);\r\n          swal(\r\n            'Deleted!',\r\n            'Payments types has been deleted.',\r\n            'success'\r\n          );\r\n        }, error => console.log('There was an error: ', error));\r\n      }\r\n    });\r\n  }\r\n  onSubmit() {\r\n    const result: PaymentType = Object.assign({}, this.paymentTypesForm.value);\r\n    result.typCtgryKey = this.typeNumber;\r\n    (<any>$('#addprduct')).modal('hide');\r\n    if (this.isEdit) {\r\n      this.paymentTypesService.updateType(result).subscribe();\r\n      const itemIndex = this.allItems.findIndex(item => item.typId === result.typId);\r\n      this.allItems[itemIndex] = result;\r\n      this.setPage(this.pager.currentPage);\r\n    } else {\r\n      this.paymentTypesService.addType(result).subscribe();\r\n      this.allItems.push(result);\r\n      this.setPage(this.pager.currentPage);\r\n    }\r\n  }\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.dataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n\r\n  private loadStatuses() {\r\n    this.paymentTypesService.getTypeStatus().subscribe((d) => {\r\n      this.allStatuses = d;\r\n    });\r\n  }\r\n  \r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n\r\n  findDscForAccountNo(acc_num) {\r\n    let str = \"GL ACCOUNT NUMBER NOT FOUND!\";\r\n    this.GlAccounts.forEach(acc => {\r\n      if (acc.accNum == acc_num) {\r\n        str = acc.desc;\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.mat-cell, .mat-header-cell {\\r\\n  font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n  width: 100%;\\r\\n  }\\r\\n  \\r\\n  th.mat-header-cell {\\r\\n      vertical-align: middle;\\r\\n  }\\r\\n  \"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n                  <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Search\\r\\n                    <i class=\\\"fa fa-search\\\"> </i>\\r\\n                  </h6>\\r\\n                </div>\\r\\n                <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n                  <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                    <div class=\\\"col-sm-10\\\" style=\\\"float:left;\\\">\\r\\n                      <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                        <input id=\\\"searchBox\\\" (keyup)=\\\"searchValue()\\\" autofocus matInput name=\\\"searchValue\\\"\\r\\n                          [(ngModel)]=\\\"searchVal\\\" placeholder=\\\"Search\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\" style=\\\"float:right;\\\">\\r\\n                      <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\">Search</button>\\r\\n                    </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-5\\\">\\r\\n                <form [formGroup]=\\\"branchForm\\\" (ngSubmit)=\\\"onSubmitBranchForm()\\\">\\r\\n                  <ng-select  [items]=\\\"allBrnches\\\" required  (change)=\\\"loadPayment($event)\\\"\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-1\\\">\\r\\n                <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"openTypeModal()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          <div class=\\\"row-sm-6\\\">\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <div class=\\\"modal fade\\\" id=\\\"addprduct\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog bigger mymodal\\\">\\r\\n\\r\\n                  <!-- Modal content-->\\r\\n                  <div class=\\\"modal-content text-left\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                      <h5 class=\\\"modal-title\\\">Expense Type</h5>\\r\\n                    </div>\\r\\n                    <form [formGroup]=\\\"paymentTypesForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                      <div class=\\\"modal-body\\\" style=\\\"overflow:visible;\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Id:\\\" formControlName=\\\"typId\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typId').valid\\\">\\r\\n                                Id is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Type:\\\" formControlName=\\\"typStr\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStr').valid\\\">\\r\\n                                Type is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <!-- <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"GL Account Mappping:\\\" formControlName=\\\"glAcctNum\\\"\\r\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('glAcctNum').valid\\\">\\r\\n                                Mapping is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field> -->\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"Select Branch:\\\" formControlName=\\\"brnchSeq\\\" name=\\\"brnchSeq\\\"\\r\\n                                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                  <mat-option [value]=\\\"0\\\">Global</mat-option>\\r\\n                                  <mat-option *ngFor=\\\"let edu of allBrnches\\\" [value]=\\\"edu.brnchSeq\\\">\\r\\n                                    ({{edu.brnchCd}}) - {{edu.brnchNm}}\\r\\n                                  </mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                            \\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Select Status:\\\" formControlName=\\\"typStsKey\\\" name=\\\"typStsKey\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option *ngFor=\\\"let edu of statusArray\\\" [value]=\\\"edu.codeKey\\\">\\r\\n                                  {{edu.codeValue}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStsKey').valid\\\">\\r\\n                                Institution Name is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol4\\\">\\r\\n                              <ng-select [items]=\\\"GlAccounts\\\" required required bindLabel=\\\"desc\\\" bindValue=\\\"accNum\\\"\\r\\n                              name=\\\"glMapping\\\" placeholder=\\\"Select GL Account Mapping\\\" formControlName=\\\"glAcctNum\\\">\\r\\n                            </ng-select>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-footer text-center\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\">Ok</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Expense Type ID</th>\\r\\n                <th>Expense Type</th>\\r\\n                <th>GL Account Mappping</th>\\r\\n                <th>Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n              <tr *ngFor=\\\"let code of pagedItems\\\">\\r\\n                <td>{{code.typId}}</td>\\r\\n                <td>{{code.typStr}}</td>\\r\\n                <td>{{findDscForAccountNo(code.glAcctNum)}}</td>\\r\\n                <td>{{findValueByKey(code.typStsKey)}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"editItem(code)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(code)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n\\r\\n\\r\\n          <!---- DATA TABLES---->\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" multiTemplateDataRows matSort>\\r\\n\\r\\n              <!-- Payment Type ID Column -->\\r\\n              <ng-container matColumnDef=\\\"typId\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Expense Type ID</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{pymnt.typId}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!--Payment Type -->\\r\\n              <ng-container matColumnDef=\\\"typStr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Expense Type</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{pymnt.typStr}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- GL Account Mapping Column -->\\r\\n              <ng-container matColumnDef=\\\"glAcctNum\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>GL Account Mapping</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findDscForAccountNo(pymnt.glAcctNum)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Branch Column -->\\r\\n              <ng-container matColumnDef=\\\"brnchSeq\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findBranchBySeq(pymnt.brnchSeq)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Status Column -->\\r\\n              <ng-container matColumnDef=\\\"typStsKey\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findValueByKey(pymnt.typStsKey)}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Action Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">\\r\\n                  <a (click)=\\\"editItem(pymnt)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(pymnt)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <a class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [length]=\\\"datalength\\\" [pageSizeOptions]=\\\"[10, 15, 20]\\\" showFirstLastButtons>\\r\\n            </mat-paginator>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<script>\\r\\n  $(document).ready(function () {\\r\\n    $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\r\\n  });\\r\\n</script>\\r\\n<script>\\r\\n  $(\\\".searchshow\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").addClass(\\\"intro\\\");\\r\\n  });\\r\\n  $(\\\".remove-search\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").removeClass(\\\"intro\\\");\\r\\n  });\\r\\n\\r\\n  function myFunction() {\\r\\n    var input, filter, table, tr, td, i;\\r\\n    input = document.getElementById(\\\"myInput\\\");\\r\\n    filter = input.value.toUpperCase();\\r\\n    table = document.getElementById(\\\"myTable\\\");\\r\\n    tr = table.getElementsByTagName(\\\"tr\\\");\\r\\n    for (i = 0; i < tr.length; i++) {\\r\\n      td = tr[i].getElementsByTagName(\\\"td\\\")[1];\\r\\n      if (td) {\\r\\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\\r\\n          tr[i].style.display = \\\"\\\";\\r\\n        } else {\\r\\n          tr[i].style.display = \\\"none\\\";\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n<script>\\r\\n  var index = 1;\\r\\n  $('ul.moreless li:gt(' + index + ')').hide();\\r\\n  $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n  $('ul.moreless li.more').click(function () {\\r\\n    $('ul.moreless li.more').remove();\\r\\n    $('ul.moreless li:gt(' + index + ')').show();\\r\\n    $('ul.moreless').append('<li class=\\\"less\\\">Less..</li>');\\r\\n    $('ul.moreless li.less').click(function () {\\r\\n      $('ul.moreless li.less').remove();\\r\\n      $('ul.moreless li:gt(' + index + ')').remove();\\r\\n      $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n    });\\r\\n  });\\r\\n</script>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MyErrorStateMatcher } from '../../../../shared/helpers/MyErrorStateMatcher.helper';\r\nimport { PaymentType } from '../../../../shared/models/paymentType.model';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../../../../shared/services/data.service';\r\nimport { PaymentTypesService } from '../../../../shared/services/paymentTypes.service';\r\nimport swal from 'sweetalert2';\r\nimport { CommonService } from '../../../../shared/services/common.service';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { merge } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-expense-types',\r\n  templateUrl: './expense-types.component.html',\r\n  styleUrls: ['./expense-types.component.css']\r\n})\r\nexport class ExpenseTypesComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: any;\r\n  dataSource: any;\r\n  allBrnches = [];\r\n  applyFilter(filterValue: string) {\r\n    this.filterValue = filterValue;\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.datalength = this.countBeforeFilter;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      return;\r\n    }\r\n    this.getFilteredData(filterValue.trim().toLowerCase())\r\n  }\r\n\r\n  searchValue() {\r\n    this.filterValue = this.searchVal.trim();\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      this.datalength = 0;\r\n      setTimeout(() => { this.datalength = this.countBeforeFilter; }, 200);\r\n      return;\r\n    }\r\n  }\r\n  typeNumber = 2;\r\n  paymentTypesForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  submitted = false;\r\n  // array of all items to be paged\r\n  private allItems: PaymentType[] = [];\r\n  // pager object\r\n  pager: any = {};\r\n  showFields = false;\r\n  // paged items\r\n  pagedItems: PaymentType[] = [];\r\n  isEdit = false;\r\n  allStatuses: any[] = [];\r\n  statusArray: any[];\r\n  GlAccounts: any[] = [];\r\n  branchForm: FormGroup;\r\n  onBranchSelection: boolean = false;\r\n    \r\n  datalength: Number = 0;\r\n  lastPageIndex = 0;\r\n  dataBeforeFilter; \r\n  countBeforeFilter;\r\n  lastPageIndexBeforeFilter;\r\n\r\n  filterValue: any = \"\";\r\n  searchVal = \"\";\r\n  isCount: boolean = true;\r\n\r\n  constructor(private router: Router,\r\n    private dataService: DataService,\r\n    private fb: FormBuilder,\r\n    private paymentTypesService: PaymentTypesService,\r\n    private commonService: CommonService,\r\n    private spinner: NgxSpinnerService,\r\n    private toaster: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.displayedColumns = ['typId', 'typStr', 'glAcctNum', 'brnchSeq', 'typStsKey', 'action'];\r\n    this.paymentTypesForm = this.fb.group({\r\n      typId: ['', Validators.required],\r\n      typStr: ['', Validators.required],\r\n      glAcctNum: ['', Validators.required],\r\n      typStsKey: ['', Validators.required],\r\n      typSeq: [''],\r\n      brnchSeq: ['', Validators.required]\r\n    });\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe((d) => {\r\n      this.statusArray = d;\r\n    });\r\n    this.commonService.getGlAccounts().subscribe((d) => {\r\n      this.GlAccounts = d;\r\n    });\r\n     this.loadStatuses();\r\n     this.commonService.getBrnchsForUsr().subscribe((res) => {\r\n      this.allBrnches=res;\r\n    })\r\n\r\n    this.branchForm = this.fb.group({\r\n      branch: ['0'],\r\n    });\r\n    this.loadPayment();    \r\n  }\r\n  onSubmitBranchForm() {\r\n    console.log(this.branchForm.value)\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => this.loadNextPage())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  loadPayment(){\r\n    this.isCount =true;\r\n    this.lastPageIndex = 0;\r\n    this.allItems = [];\r\n    this.dataSource = new MatTableDataSource(this.allItems);\r\n    this.paginator.pageIndex = 0;\r\n    this.lastPageIndex = 0;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.searchVal = '';\r\n    this.filterValue = '';\r\n    \r\n    if(this.branchForm.controls['branch'].value == null){\r\n      this.branchForm.patchValue({'branch': 0})\r\n    }\r\n    this.spinner.show();\r\n    this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, 10, \"\", this.isCount, this.branchForm.controls['branch'].value).subscribe((data) => {\r\n      this.allItems = data.typs;\r\n      this.spinner.hide();\r\n\r\n       this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n  \r\n        this.dataBeforeFilter = this.dataSource.data;\r\n        this.countBeforeFilter = data.count;\r\n        this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error)\r\n    });\r\n  }\r\n  loadNextPage(){\r\n    this.isCount = false;\r\n    if (this.paginator.pageIndex < this.lastPageIndex)\r\n    return\r\n    if (this.dataSource.paginator.length == this.dataSource.data.length)\r\n    return;\r\n    if (((this.paginator.pageIndex + 1) * this.paginator.pageSize) - this.dataSource.data.length > 0) {\r\n      this.spinner.show();\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, this.filterValue, this.isCount, this.branchForm.controls['branch'].value).subscribe(data => {\r\n        this.spinner.hide();\r\n        this.allItems = data.typs;\r\n        this.lastPageIndex = this.lastPageIndex + 1;\r\n        this.dataSource.data = this.dataSource.data.concat(data.typs);\r\n\r\n        data.count = this.datalength; \r\n        this.datalength = 0;\r\n        setTimeout(() => { this.datalength = data.count; }, 200);\r\n\r\n        if (this.filterValue.length == 0) {\r\n          this.dataBeforeFilter = this.dataSource.data;\r\n          this.countBeforeFilter = data.count;\r\n          this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n        }\r\n      }, error =>{\r\n          this.spinner.hide();\r\n          console.log('err', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  getFilteredData(filterValue:string){\r\n    this.isCount = true;\r\n      this.paginator.pageIndex = 0;\r\n      this.spinner.show();\r\n      this.lastPageIndex = 0;\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, filterValue, this.isCount, this.branchForm.controls['branch'].value).subscribe(data => {\r\n        this.allItems = data.typs;\r\n        this.spinner.hide();\r\n        if (this.allItems.length <= 0) {\r\n          this.toaster.info('No Data Found Against This Search', 'Information')\r\n        };\r\n  \r\n        this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n      }, error =>{\r\n        this.spinner.hide();\r\n        console.log('err', error);\r\n        });\r\n  }\r\n\r\n  openTypeModal() {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.reset();\r\n    this.isEdit = false;\r\n  }\r\n  findValueByKey(key) {\r\n    let status = 'not found';\r\n    this.statusArray.forEach(s => {\r\n      if (s.codeKey === key) {\r\n        status = s.codeValue;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n  findBranchBySeq(key) {\r\n    if (key === null || key === undefined)\r\n      return \"Not Assigned\";\r\n    if (key == 0)\r\n      return \"Global\";\r\n    let status = 'not found';\r\n    this.allBrnches.forEach(s => {\r\n      if (s.brnchSeq === key) {\r\n        status = s.brnchNm;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n  editItem(paymentType: PaymentType) {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.patchValue(paymentType);\r\n    this.isEdit = true;\r\n  }\r\n  deleteItem(type) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this payment type?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.paymentTypesService.deleteType(type.typSeq).subscribe(() => {\r\n          this.allItems.splice(this.allItems.indexOf(type.pdcId), 1);\r\n          this.spinner.hide()\r\n          swal(\r\n            'Deleted!',\r\n            'Payments types has been deleted.',\r\n            'success'\r\n          );\r\n        }, error => { console.log('There was an error: ', error); this.spinner.hide(); });\r\n      }\r\n    });\r\n  }\r\n  onSubmit() {\r\n    const result: PaymentType = Object.assign({}, this.paymentTypesForm.value);\r\n    result.typCtgryKey = this.typeNumber;\r\n    (<any>$('#addprduct')).modal('hide');\r\n    if (this.isEdit) {\r\n      this.spinner.show();\r\n      this.paymentTypesService.updateType(result).subscribe(res=>{\r\n        this.spinner.hide();\r\n        const itemIndex = this.allItems.findIndex(item => item.typId === result.typId);\r\n        this.allItems[itemIndex] = result;\r\n        this.setPage(this.pager.currentPage);\r\n      },error=>{\r\n        this.spinner.hide();\r\n        this.toaster.error(\"Something Went Wrong!\");\r\n      });\r\n      \r\n    } else {\r\n      this.spinner.show();\r\n      this.paymentTypesService.addType(result).subscribe(res=>{\r\n        this.spinner.hide();\r\n        this.allItems.push(result);\r\n        this.setPage(this.pager.currentPage);\r\n      },error=>{\r\n        this.spinner.hide();\r\n        this.toaster.error(\"Something Went Wrong!\");\r\n      });\r\n    }\r\n  }\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.dataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n\r\n  private loadStatuses() {\r\n    this.paymentTypesService.getTypeStatus().subscribe((d) => {\r\n      this.allStatuses = d;\r\n    });\r\n  }\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n  findDscForAccountNo(acc_num) {\r\n    let str = \"GL ACCOUNT NUMBER NOT FOUND!\";\r\n    this.GlAccounts.forEach(acc => {\r\n      if (acc.accNum == acc_num) {\r\n        str = acc.desc;\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.mat-cell, .mat-header-cell {\\r\\n  font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n  width: 100%;\\r\\n  }\\r\\n  \\r\\n  th.mat-header-cell {\\r\\n      vertical-align: middle;\\r\\n  }\\r\\n  \"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n                  <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Search\\r\\n                    <i class=\\\"fa fa-search\\\"> </i>\\r\\n                  </h6>\\r\\n                </div>\\r\\n                <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n                  <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                    <div class=\\\"col-sm-10\\\" style=\\\"float:left;\\\">\\r\\n                      <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                        <input id=\\\"searchBox\\\" (keyup)=\\\"searchValue()\\\" autofocus matInput name=\\\"searchValue\\\"\\r\\n                          [(ngModel)]=\\\"searchVal\\\" placeholder=\\\"Search\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\" style=\\\"float:right;\\\">\\r\\n                      <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\">Search</button>\\r\\n                    </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-5\\\">\\r\\n                <form [formGroup]=\\\"branchForm\\\" (ngSubmit)=\\\"onSubmitBranchForm()\\\">\\r\\n                  <ng-select  [items]=\\\"allBrnches\\\" required  (change)=\\\"loadPayment($event)\\\"\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-1\\\">\\r\\n                <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"openTypeModal()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <div class=\\\"modal fade\\\" id=\\\"addprduct\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog bigger mymodal\\\">\\r\\n\\r\\n                  <!-- Modal content-->\\r\\n                  <div class=\\\"modal-content text-left\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                      <h5 class=\\\"modal-title\\\">Payment Type</h5>\\r\\n                    </div>\\r\\n                    <form [formGroup]=\\\"paymentTypesForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                      <div class=\\\"modal-body\\\"  style=\\\"overflow:visible;\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Id:\\\" formControlName=\\\"typId\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typId').valid\\\">\\r\\n                                Id is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Type:\\\" formControlName=\\\"typStr\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStr').valid\\\">\\r\\n                                Type is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <!-- <mat-form-field>\\r\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"GL Account Mappping:\\\" formControlName=\\\"glAcctNum\\\"\\r\\n                                   [errorStateMatcher]=\\\"matcher\\\">\\r\\n                            <mat-error *ngIf=\\\"!paymentTypesForm.get('glAcctNum').valid\\\">\\r\\n                              Mapping is <strong>required</strong>\\r\\n                            </mat-error>\\r\\n                          </mat-form-field> -->\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Select Branch:\\\" formControlName=\\\"brnchSeq\\\" name=\\\"brnchSeq\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option [value]=\\\"0\\\">Global</mat-option>\\r\\n                                <mat-option *ngFor=\\\"let edu of allBrnches\\\" [value]=\\\"edu.brnchSeq\\\">\\r\\n                                  ({{edu.brnchCd}}) - {{edu.brnchNm}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Select Status:\\\" formControlName=\\\"typStsKey\\\" name=\\\"typStsKey\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option *ngFor=\\\"let edu of statusArray\\\" [value]=\\\"edu.codeKey\\\">\\r\\n                                  {{edu.codeValue}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStsKey').valid\\\">\\r\\n                                Institution Name is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol4\\\">\\r\\n                            <ng-select [items]=\\\"GlAccounts\\\" required required bindLabel=\\\"desc\\\" bindValue=\\\"accNum\\\"\\r\\n                              name=\\\"glMapping\\\" placeholder=\\\"Select GL Account Mapping\\\" formControlName=\\\"glAcctNum\\\">\\r\\n                            </ng-select>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-footer text-center\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\">Ok</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Payment Type ID</th>\\r\\n                <th>Payment Type</th>\\r\\n                <th>GL Account Mappping</th>\\r\\n                <th>Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n              <tr *ngFor=\\\"let code of pagedItems\\\">\\r\\n                <td>{{code.typId}}</td>\\r\\n                <td>{{code.typStr}}</td>\\r\\n                <td>{{findDscForAccountNo(code.glAcctNum)}}</td>\\r\\n                <td>{{findValueByKey(code.typStsKey)}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"editItem(code)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(code)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n\\r\\n\\r\\n\\r\\n          <!---- DATA TABLES---->\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" multiTemplateDataRows matSort>\\r\\n\\r\\n              <!-- Payment Type ID Column -->\\r\\n              <ng-container matColumnDef=\\\"typId\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Payment Type ID</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{pymnt.typId}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!--Payment Type -->\\r\\n              <ng-container matColumnDef=\\\"typStr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Payment Type</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{pymnt.typStr}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- GL Account Mapping Column -->\\r\\n              <ng-container matColumnDef=\\\"glAcctNum\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>GL Account Mapping</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findDscForAccountNo(pymnt.glAcctNum)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Branch Column -->\\r\\n              <ng-container matColumnDef=\\\"brnchSeq\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findBranchBySeq(pymnt.brnchSeq)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Status Column -->\\r\\n              <ng-container matColumnDef=\\\"typStsKey\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findValueByKey(pymnt.typStsKey)}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Action Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">\\r\\n                  <a (click)=\\\"editItem(pymnt)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(pymnt)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <a class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator  [length]=\\\"datalength\\\" [pageSizeOptions]=\\\"[10, 15, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<script>\\r\\n  $(document).ready(function () {\\r\\n    $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\r\\n  });\\r\\n</script>\\r\\n<script>\\r\\n  $(\\\".searchshow\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").addClass(\\\"intro\\\");\\r\\n  });\\r\\n  $(\\\".remove-search\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").removeClass(\\\"intro\\\");\\r\\n  });\\r\\n\\r\\n  function myFunction() {\\r\\n    var input, filter, table, tr, td, i;\\r\\n    input = document.getElementById(\\\"myInput\\\");\\r\\n    filter = input.value.toUpperCase();\\r\\n    table = document.getElementById(\\\"myTable\\\");\\r\\n    tr = table.getElementsByTagName(\\\"tr\\\");\\r\\n    for (i = 0; i < tr.length; i++) {\\r\\n      td = tr[i].getElementsByTagName(\\\"td\\\")[1];\\r\\n      if (td) {\\r\\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\\r\\n          tr[i].style.display = \\\"\\\";\\r\\n        } else {\\r\\n          tr[i].style.display = \\\"none\\\";\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n<script>\\r\\n  var index = 1;\\r\\n  $('ul.moreless li:gt(' + index + ')').hide();\\r\\n  $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n  $('ul.moreless li.more').click(function () {\\r\\n    $('ul.moreless li.more').remove();\\r\\n    $('ul.moreless li:gt(' + index + ')').show();\\r\\n    $('ul.moreless').append('<li class=\\\"less\\\">Less..</li>');\\r\\n    $('ul.moreless li.less').click(function () {\\r\\n      $('ul.moreless li.less').remove();\\r\\n      $('ul.moreless li:gt(' + index + ')').remove();\\r\\n      $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n    });\\r\\n  });\\r\\n</script>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataService } from '../../../../shared/services/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentTypesService } from '../../../../shared/services/paymentTypes.service';\r\nimport { PaymentType } from '../../../../shared/models/paymentType.model';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material';\r\nimport { MyErrorStateMatcher } from '../../../../shared/helpers/MyErrorStateMatcher.helper';\r\nimport swal from 'sweetalert2';\r\nimport { CommonService } from '../../../../shared/services/common.service';\r\nimport { DisbursementVoucherListItem } from '../../../../shared/models/disbursementVoucherListItem.model';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { merge } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-payment-types',\r\n  templateUrl: './payment-types.component.html',\r\n  styleUrls: ['./payment-types.component.css']\r\n})\r\nexport class PaymentTypesComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: any;\r\n  dataSource: any;\r\n  applyFilter(filterValue: string) {\r\n    this.filterValue = filterValue;\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.datalength = this.countBeforeFilter;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      return;\r\n    }\r\n    this.getFilteredData(filterValue.trim().toLowerCase())\r\n  }\r\n\r\n  searchValue() {\r\n    this.filterValue = this.searchVal.trim();\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      this.datalength = 0;\r\n      setTimeout(() => { this.datalength = this.countBeforeFilter; }, 200);\r\n      return;\r\n    }\r\n  }\r\n  typeNumber = 3;\r\n  paymentTypesForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  submitted = false;\r\n  // array of all items to be paged\r\n  private allItems: PaymentType[] = [];\r\n  pager: any = {};\r\n  pagedItems: PaymentType[] = [];\r\n  showFields = false;\r\n  isEdit = false;\r\n  allStatuses: any[] = [];\r\n  statusArray: any[];\r\n  GlAccounts: any[] = [];\r\n\r\n  branchForm: FormGroup;\r\n  onBranchSelection: boolean = false;\r\n  datalength: Number = 0;\r\n  lastPageIndex = 0;\r\n  dataBeforeFilter; \r\n  countBeforeFilter;\r\n  lastPageIndexBeforeFilter;\r\n\r\n  filterValue: any = \"\";\r\n  searchVal = \"\";\r\n  isCount: boolean = true;\r\n\r\n  constructor(private router: Router,\r\n    private dataService: DataService,\r\n    private fb: FormBuilder,\r\n    private paymentTypesService: PaymentTypesService,\r\n    private commonService: CommonService,\r\n    private spinner: NgxSpinnerService,\r\n    private toaster: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.displayedColumns = ['typId', 'typStr', 'glAcctNum','brnchSeq', 'typStsKey', 'action'];\r\n    this.paymentTypesForm = this.fb.group({\r\n      typId: ['', Validators.required],\r\n      typStr: ['', Validators.required],\r\n      glAcctNum: ['', Validators.required],\r\n      typStsKey: ['', Validators.required],\r\n      typSeq: [''],\r\n      brnchSeq: ['', Validators.required]\r\n    });\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe((d) => {\r\n      this.statusArray = d;\r\n    });\r\n    this.commonService.getGlAccounts().subscribe((d) => {\r\n      this.GlAccounts = d;\r\n    });\r\n    this.loadStatuses();\r\n\r\n    this.commonService.getBrnchsForUsr().subscribe((res) => {\r\n      this.allBrnches=res;\r\n    })\r\n\r\n    this.branchForm = this.fb.group({\r\n      branch: ['0'],\r\n    });\r\n    this.loadPayment();    \r\n  }\r\n  onSubmitBranchForm() {\r\n    console.log(this.branchForm.value)\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => this.loadNextPage())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  loadPayment(){\r\n    this.isCount =true;\r\n    this.lastPageIndex = 0;\r\n    this.allItems = [];\r\n    this.dataSource = new MatTableDataSource(this.allItems);\r\n    this.paginator.pageIndex = 0;\r\n    this.lastPageIndex = 0;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.searchVal = '';\r\n    this.filterValue = '';\r\n    \r\n    if(this.branchForm.controls['branch'].value == null){\r\n      this.branchForm.patchValue({'branch': 0})\r\n    }\r\n    this.spinner.show();\r\n    this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, 10, \"\", this.isCount, this.branchForm.controls['branch'].value).subscribe((data) => {\r\n      this.allItems = data.typs;\r\n      this.spinner.hide();\r\n\r\n       this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n  \r\n        this.dataBeforeFilter = this.dataSource.data;\r\n        this.countBeforeFilter = data.count;\r\n        this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error)\r\n    });\r\n  }\r\n  loadNextPage(){\r\n    this.isCount = false;\r\n    if (this.paginator.pageIndex < this.lastPageIndex)\r\n    return\r\n    if (this.dataSource.paginator.length == this.dataSource.data.length)\r\n    return;\r\n    if (((this.paginator.pageIndex + 1) * this.paginator.pageSize) - this.dataSource.data.length > 0) {\r\n      this.spinner.show();\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, this.filterValue, this.isCount, this.branchForm.controls['branch'].value).subscribe(data => {\r\n        this.spinner.hide();\r\n        this.allItems = data.typs;\r\n        this.lastPageIndex = this.lastPageIndex + 1;\r\n        this.dataSource.data = this.dataSource.data.concat(data.typs);\r\n        data.count = this.datalength; \r\n        this.datalength = 0;\r\n        setTimeout(() => { this.datalength = data.count; }, 200);\r\n\r\n        if (this.filterValue.length == 0) {\r\n          this.dataBeforeFilter = this.dataSource.data;\r\n          this.countBeforeFilter = data.count;\r\n          this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n        }\r\n      }, error =>{\r\n          this.spinner.hide();\r\n          console.log('err', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  getFilteredData(filterValue:string){\r\n    this.isCount = true;\r\n      this.paginator.pageIndex = 0;\r\n      this.lastPageIndex = 0;\r\n      this.spinner.show();\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, filterValue, this.isCount, this.branchForm.controls['branch'].value).subscribe(data => {\r\n        this.allItems = data.typs;\r\n        this.spinner.hide();\r\n        if (this.allItems.length <= 0) {\r\n          this.toaster.info('No Data Found Against This Search', 'Information')\r\n        };\r\n  \r\n        this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n      }, error =>{\r\n        this.spinner.hide();\r\n        console.log('err', error);\r\n        });\r\n  }\r\n\r\n  \r\n  openTypeModal() {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.reset();\r\n    this.isEdit = false;\r\n  }\r\n  findValueByKey(key) {\r\n    let status = 'not found';\r\n    this.statusArray.forEach(s => {\r\n      if (s.codeKey === key) {\r\n        status = s.codeValue;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n  editItem(paymentType: PaymentType) {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.patchValue(paymentType);\r\n    this.isEdit = true;\r\n  }\r\n  deleteItem(type) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this payment type?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.paymentTypesService.deleteType(type.typSeq).subscribe(() => {\r\n          this.allItems.splice(this.allItems.indexOf(type.pdcId), 1);\r\n          swal(\r\n            'Deleted!',\r\n            'Payments types has been deleted.',\r\n            'success'\r\n          );\r\n        }, error => console.log('There was an error: ', error));\r\n      }\r\n    });\r\n  }\r\n  onSubmit() {\r\n    const result: PaymentType = Object.assign({}, this.paymentTypesForm.value);\r\n    result.typCtgryKey = this.typeNumber;\r\n    (<any>$('#addprduct')).modal('hide');\r\n    if (this.isEdit) {\r\n      this.paymentTypesService.updateType(result).subscribe();\r\n      const itemIndex = this.allItems.findIndex(item => item.typId === result.typId);\r\n      this.allItems[itemIndex] = result;\r\n      this.setPage(this.pager.currentPage);\r\n    } else {\r\n      this.paymentTypesService.addType(result).subscribe();\r\n      this.allItems.push(result);\r\n      this.setPage(this.pager.currentPage);\r\n    }\r\n  }\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.dataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n\r\n  private loadStatuses() {\r\n    this.paymentTypesService.getTypeStatus().subscribe((d) => {\r\n      this.allStatuses = d;\r\n    });\r\n  }\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n  findDscForAccountNo(acc_num) {\r\n    let str = \"GL ACCOUNT NUMBER NOT FOUND!\";\r\n    this.GlAccounts.forEach(acc => {\r\n      if (acc.accNum == acc_num) {\r\n        str = acc.desc;\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n  allBrnches = [];\r\n  findBranchBySeq(key) {\r\n    if(key == null || key == undefined)\r\n    return \"Not Assigned\";\r\n    if(key==0)\r\n    return \"Global\";\r\n    let status = 'not found';\r\n    this.allBrnches.forEach(s => {\r\n      if (s.brnchSeq === key) {\r\n        status = s.brnchNm;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.mat-cell, .mat-header-cell {\\r\\n  font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .mat-cell, .mat-footer-cell {\\r\\n  font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n  width: 100%;\\r\\n  }\\r\\n  \\r\\n  th.mat-header-cell {\\r\\n      vertical-align: middle;\\r\\n  }\\r\\n  \"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"mysearchbox\\\" (click)=\\\"showField()\\\" *ngIf=\\\"!showFields\\\">\\r\\n                  <h6 class=\\\"d-inline-block searchshow\\\" style=\\\"cursor: pointer;\\\">Search\\r\\n                    <i class=\\\"fa fa-search\\\"> </i>\\r\\n                  </h6>\\r\\n                </div>\\r\\n                <div class=\\\"mysearch\\\" *ngIf=\\\"showFields\\\">\\r\\n                  <form (ngSubmit)=\\\"applyFilter(searchVal)\\\" #searchForm=\\\"ngForm\\\">\\r\\n                    <div class=\\\"col-sm-10\\\" style=\\\"float:left;\\\">\\r\\n                      <mat-form-field *ngIf=\\\"showFields\\\">\\r\\n                        <input id=\\\"searchBox\\\" (keyup)=\\\"searchValue()\\\" autofocus matInput name=\\\"searchValue\\\"\\r\\n                          [(ngModel)]=\\\"searchVal\\\" placeholder=\\\"Search\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\" style=\\\"float:right;\\\">\\r\\n                      <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\">Search</button>\\r\\n                    </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-5\\\">\\r\\n                <form [formGroup]=\\\"branchForm\\\" (ngSubmit)=\\\"onSubmitBranchForm()\\\">\\r\\n                  <ng-select  [items]=\\\"allBrnches\\\" required  (change)=\\\"loadPayment($event)\\\"\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-1\\\">\\r\\n                <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"openTypeModal()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6 addBtn\\\">\\r\\n              <div class=\\\"modal fade\\\" id=\\\"addprduct\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog bigger mymodal\\\">\\r\\n\\r\\n                  <!-- Modal content-->\\r\\n                  <div class=\\\"modal-content text-left\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                      <h5 class=\\\"modal-title\\\">Recovery Type</h5>\\r\\n                    </div>\\r\\n                    <form [formGroup]=\\\"paymentTypesForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                      <div class=\\\"modal-body\\\"  style=\\\"overflow:visible;\\\">\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Id:\\\" formControlName=\\\"typId\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typId').valid\\\">\\r\\n                                Id is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"Type:\\\" formControlName=\\\"typStr\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStr').valid\\\">\\r\\n                                Type is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <!-- <mat-form-field>\\r\\n                              <input type=\\\"text\\\" matInput placeholder=\\\"GL Account Mappping:\\\" formControlName=\\\"glAcctNum\\\"\\r\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('glAcctNum').valid\\\">\\r\\n                                Mapping is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field> -->\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"Select Branch:\\\" formControlName=\\\"brnchSeq\\\" name=\\\"brnchSeq\\\"\\r\\n                                  [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                  <mat-option [value]=\\\"0\\\">Global</mat-option>\\r\\n                                  <mat-option *ngFor=\\\"let edu of allBrnches\\\" [value]=\\\"edu.brnchSeq\\\">\\r\\n                                    ({{edu.brnchCd}}) - {{edu.brnchNm}}\\r\\n                                  </mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"cCol2\\\">\\r\\n                            <mat-form-field>\\r\\n                              <mat-select placeholder=\\\"Select Status:\\\" formControlName=\\\"typStsKey\\\" name=\\\"typStsKey\\\"\\r\\n                                [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                <mat-option *ngFor=\\\"let edu of statusArray\\\" [value]=\\\"edu.codeKey\\\">\\r\\n                                  {{edu.codeValue}}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                              <mat-error *ngIf=\\\"!paymentTypesForm.get('typStsKey').valid\\\">\\r\\n                                Institution Name is <strong>required</strong>\\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cRow\\\">\\r\\n                          <div class=\\\"cCol4\\\">\\r\\n                              <ng-select [items]=\\\"GlAccounts\\\" required required bindLabel=\\\"desc\\\" bindValue=\\\"accNum\\\"\\r\\n                                name=\\\"glMapping\\\" placeholder=\\\"Select GL Account Mapping\\\" formControlName=\\\"glAcctNum\\\">\\r\\n                              </ng-select>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-footer text-center\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\">Ok</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" id=\\\"myTable\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Recovery Type ID</th>\\r\\n                <th>Recovery Type</th>\\r\\n                <th>GL Account Mappping</th>\\r\\n                <th>Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n              <tr *ngFor=\\\"let code of pagedItems\\\">\\r\\n                <td>{{code.typId}}</td>\\r\\n                <td>{{code.typStr}}</td>\\r\\n                <td>{{findDscForAccountNo(code.glAcctNum)}}</td>\\r\\n                <td>{{findValueByKey(code.typStsKey)}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"editItem(code)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(code)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <a  class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n\\r\\n          <!---- DATA TABLES---->\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\" multiTemplateDataRows matSort>\\r\\n\\r\\n              <!-- Recovery Type ID Column -->\\r\\n              <ng-container matColumnDef=\\\"typId\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Recovery Type ID</th>\\r\\n                <td mat-cell *matCellDef=\\\"let recv\\\">{{recv.typId}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!--Payment Type -->\\r\\n              <ng-container matColumnDef=\\\"typStr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Expense Type</th>\\r\\n                <td mat-cell *matCellDef=\\\"let recv\\\">{{recv.typStr}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- GL Account Mapping Column -->\\r\\n              <ng-container matColumnDef=\\\"glAcctNum\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>GL Account Mapping</th>\\r\\n                <td mat-cell *matCellDef=\\\"let recv\\\">{{findDscForAccountNo(recv.glAcctNum)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Branch Column -->\\r\\n              <ng-container matColumnDef=\\\"brnchSeq\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\\r\\n                <td mat-cell *matCellDef=\\\"let pymnt\\\">{{findBranchBySeq(pymnt.brnchSeq)}}</td>\\r\\n              </ng-container>\\r\\n              <!-- Status Column -->\\r\\n              <ng-container matColumnDef=\\\"typStsKey\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\r\\n                <td mat-cell *matCellDef=\\\"let recv\\\">{{findValueByKey(recv.typStsKey)}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Action Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let recv\\\">\\r\\n                  <a (click)=\\\"editItem(recv)\\\" class=\\\"iconBtn\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                  <a (click)=\\\"deleteItem(recv)\\\" class=\\\"iconBtn delBtn\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                  <a class=\\\"iconBtn\\\"><i class=\\\"fa fa-history\\\"></i></a>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"thead-light thead-blue\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [length]=\\\"datalength\\\" [pageSizeOptions]=\\\"[10, 15, 20]\\\" showFirstLastButtons>\\r\\n            </mat-paginator>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n<script>\\r\\n  $(document).ready(function () {\\r\\n    $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\r\\n  });\\r\\n</script>\\r\\n<script>\\r\\n  $(\\\".searchshow\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").addClass(\\\"intro\\\");\\r\\n  });\\r\\n  $(\\\".remove-search\\\").click(function () {\\r\\n    $(\\\".mysearchbox\\\").removeClass(\\\"intro\\\");\\r\\n  });\\r\\n\\r\\n  function myFunction() {\\r\\n    var input, filter, table, tr, td, i;\\r\\n    input = document.getElementById(\\\"myInput\\\");\\r\\n    filter = input.value.toUpperCase();\\r\\n    table = document.getElementById(\\\"myTable\\\");\\r\\n    tr = table.getElementsByTagName(\\\"tr\\\");\\r\\n    for (i = 0; i < tr.length; i++) {\\r\\n      td = tr[i].getElementsByTagName(\\\"td\\\")[1];\\r\\n      if (td) {\\r\\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\\r\\n          tr[i].style.display = \\\"\\\";\\r\\n        } else {\\r\\n          tr[i].style.display = \\\"none\\\";\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n<script>\\r\\n  var index = 1;\\r\\n  $('ul.moreless li:gt(' + index + ')').hide();\\r\\n  $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n  $('ul.moreless li.more').click(function () {\\r\\n    $('ul.moreless li.more').remove();\\r\\n    $('ul.moreless li:gt(' + index + ')').show();\\r\\n    $('ul.moreless').append('<li class=\\\"less\\\">Less..</li>');\\r\\n    $('ul.moreless li.less').click(function () {\\r\\n      $('ul.moreless li.less').remove();\\r\\n      $('ul.moreless li:gt(' + index + ')').remove();\\r\\n      $('ul.moreless').append('<li class=\\\"more\\\">more..</li>');\\r\\n    });\\r\\n  });\\r\\n</script>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MyErrorStateMatcher } from '../../../../shared/helpers/MyErrorStateMatcher.helper';\r\nimport { PaymentType } from '../../../../shared/models/paymentType.model';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../../../../shared/services/data.service';\r\nimport { PaymentTypesService } from '../../../../shared/services/paymentTypes.service';\r\nimport swal from 'sweetalert2';\r\nimport { CommonService } from '../../../../shared/services/common.service';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { merge } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-recovery-types',\r\n  templateUrl: './recovery-types.component.html',\r\n  styleUrls: ['./recovery-types.component.css']\r\n})\r\nexport class RecoveryTypesComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: any;\r\n  dataSource: any;\r\n  applyFilter(filterValue: string) {\r\n    this.filterValue = filterValue;\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.datalength = this.countBeforeFilter;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      return;\r\n    }\r\n    this.getFilteredData(filterValue.trim().toLowerCase())\r\n  }\r\n\r\n  searchValue() {\r\n    this.filterValue = this.searchVal.trim();\r\n    if (this.filterValue.length == 0) {\r\n      this.dataSource = new MatTableDataSource(this.dataBeforeFilter);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.paginator.pageIndex = 0;\r\n      this.lastPageIndex = this.lastPageIndexBeforeFilter;\r\n      this.datalength = 0;\r\n      setTimeout(() => { this.datalength = this.countBeforeFilter; }, 200);\r\n      return;\r\n    }\r\n  }\r\n  typeNumber = 4;\r\n  paymentTypesForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  submitted = false;\r\n  // array of all items to be paged\r\n  private allItems: PaymentType[] = [];\r\n  // pager object\r\n  pager: any = {};\r\n  // paged items\r\n  pagedItems: PaymentType[] = [];\r\n  isEdit = false;\r\n  showFields = false;\r\n  allStatuses: any[] = [];\r\n  statusArray: any[];\r\n  GlAccounts: any[] = [];\r\n\r\n  branchForm: FormGroup;\r\n  onBranchSelection: boolean = false;\r\n\r\n  datalength: Number = 0;\r\n  lastPageIndex = 0;\r\n  dataBeforeFilter; \r\n  countBeforeFilter;\r\n  lastPageIndexBeforeFilter;\r\n\r\n  filterValue: any = \"\";\r\n  searchVal = \"\";\r\n  isCount: boolean = true;\r\n\r\n  constructor(private router: Router,\r\n    private dataService: DataService,\r\n    private fb: FormBuilder,\r\n    private paymentTypesService: PaymentTypesService,\r\n    private commonService: CommonService,\r\n    private spinner: NgxSpinnerService,\r\n    private toaster: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.displayedColumns = ['typId', 'typStr', 'glAcctNum','brnchSeq', 'typStsKey', 'action'];\r\n    this.paymentTypesForm = this.fb.group({\r\n      typId: ['', Validators.required],\r\n      typStr: ['', Validators.required],\r\n      glAcctNum: ['', Validators.required],\r\n      typStsKey: ['', Validators.required],\r\n      typSeq: [''],\r\n      brnchSeq: ['', Validators.required]\r\n    });\r\n    this.commonService.getValuesByGroupName('\\tSTATUS').subscribe((d) => {\r\n      this.statusArray = d;\r\n    });\r\n    this.commonService.getGlAccounts().subscribe((d) => {\r\n      this.GlAccounts = d;\r\n    });\r\n    this.loadStatuses();\r\n\r\n    this.commonService.getBrnchsForUsr().subscribe((res) => {\r\n      this.allBrnches=res;\r\n    })\r\n\r\n    this.branchForm = this.fb.group({\r\n      branch: ['0'],\r\n    });\r\n    this.loadPayment();    \r\n  }\r\n\r\n  onSubmitBranchForm() {\r\n    console.log(this.branchForm.value)\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => this.loadNextPage())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  loadPayment(){\r\n    this.isCount =true;\r\n    this.lastPageIndex = 0;\r\n    this.allItems = [];\r\n    this.dataSource = new MatTableDataSource(this.allItems);\r\n    this.paginator.pageIndex = 0;\r\n    this.lastPageIndex = 0;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.searchVal = '';\r\n    this.filterValue = '';\r\n\r\n    if(this.branchForm.controls['branch'].value == null){\r\n      this.branchForm.patchValue({'branch': 0})\r\n    }\r\n    this.spinner.show();\r\n    this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, 10, \"\", this.isCount, this.branchForm.controls['branch'].value).subscribe((data) => {\r\n      this.allItems = data.typs;\r\n      this.spinner.hide();\r\n\r\n       this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n  \r\n        this.dataBeforeFilter = this.dataSource.data;\r\n        this.countBeforeFilter = data.count;\r\n        this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n    }, error => {\r\n      this.spinner.hide();\r\n      console.log(error)\r\n    });\r\n  }\r\n  loadNextPage(){\r\n    this.isCount = false;\r\n    if (this.paginator.pageIndex < this.lastPageIndex)\r\n    return\r\n    if (this.dataSource.paginator.length == this.dataSource.data.length)\r\n    return;\r\n    if (((this.paginator.pageIndex + 1) * this.paginator.pageSize) - this.dataSource.data.length > 0) {\r\n      this.spinner.show();\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, this.filterValue, this.isCount, this.branchForm.controls['branch'].value).subscribe(data => {\r\n        this.spinner.hide();\r\n        this.allItems = data.typs;\r\n        this.lastPageIndex = this.lastPageIndex + 1;\r\n        this.dataSource.data = this.dataSource.data.concat(data.typs);\r\n\r\n        data.count = this.datalength; \r\n        this.datalength = 0;\r\n        setTimeout(() => { this.datalength = data.count; }, 200);\r\n\r\n        if (this.filterValue.length == 0) {\r\n          this.dataBeforeFilter = this.dataSource.data;\r\n          this.countBeforeFilter = data.count;\r\n          this.lastPageIndexBeforeFilter = this.lastPageIndex;\r\n        }\r\n      }, error =>{\r\n          this.spinner.hide();\r\n          console.log('err', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  getFilteredData(filterValue:string){\r\n    this.isCount = true;\r\n      this.paginator.pageIndex = 0;\r\n      this.lastPageIndex = 0;\r\n      this.spinner.show();\r\n      this.paymentTypesService.getAllTypesByCategory(this.typeNumber, this.paginator.pageIndex, this.paginator.pageSize, filterValue, this.isCount, this.branchForm.controls['branch'].value).subscribe(data => {\r\n        this.allItems = data.typs;\r\n        this.spinner.hide();\r\n        if (this.allItems.length <= 0) {\r\n          this.toaster.info('No Data Found Against This Search', 'Information')\r\n        };\r\n  \r\n        this.dataSource = new MatTableDataSource(this.allItems);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.datalength = data.count;\r\n      }, error =>{\r\n        this.spinner.hide();\r\n        console.log('err', error);\r\n        });\r\n  }\r\n\r\n  openTypeModal() {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.reset();\r\n    this.isEdit = false;\r\n  }\r\n  findValueByKey(key) {\r\n    let status = 'not found';\r\n    this.statusArray.forEach(s => {\r\n      if (s.codeKey === key) {\r\n        status = s.codeValue;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n  editItem(paymentType: PaymentType) {\r\n    (<any>$('#addprduct')).modal('show');\r\n    this.paymentTypesForm.patchValue(paymentType);\r\n    this.isEdit = true;\r\n  }\r\n  deleteItem(type) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure you want to delete this payment type?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.paymentTypesService.deleteType(type.typSeq).subscribe(() => {\r\n          this.allItems.splice(this.allItems.indexOf(type.pdcId), 1);\r\n          swal(\r\n            'Deleted!',\r\n            'Payments types has been deleted.',\r\n            'success'\r\n          );\r\n        }, error => console.log('There was an error: ', error));\r\n      }\r\n    });\r\n  }\r\n  onSubmit() {\r\n    const result: PaymentType = Object.assign({}, this.paymentTypesForm.value);\r\n    result.typCtgryKey = this.typeNumber;\r\n    (<any>$('#addprduct')).modal('hide');\r\n    if (this.isEdit) {\r\n      this.paymentTypesService.updateType(result).subscribe();\r\n      const itemIndex = this.allItems.findIndex(item => item.typId === result.typId);\r\n      this.allItems[itemIndex] = result;\r\n      this.setPage(this.pager.currentPage);\r\n    } else {\r\n      this.paymentTypesService.addType(result).subscribe();\r\n      this.allItems.push(result);\r\n      this.setPage(this.pager.currentPage);\r\n    }\r\n  }\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.dataService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n\r\n  private loadStatuses() {\r\n    this.paymentTypesService.getTypeStatus().subscribe((d) => {\r\n      this.allStatuses = d;\r\n    });\r\n  }\r\n  showField() {\r\n    this.showFields = true;\r\n  }\r\n  findDscForAccountNo(acc_num) {\r\n    let str = \"GL ACCOUNT NUMBER NOT FOUND!\";\r\n    this.GlAccounts.forEach(acc => {\r\n      if (acc.accNum == acc_num) {\r\n        str = acc.desc;\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n  allBrnches = [];\r\n  findBranchBySeq(key) {\r\n    if(key == null || key == undefined)\r\n    return \"Not Assigned\";\r\n    if(key==0)\r\n    return \"Global\";\r\n    let status = 'not found';\r\n    this.allBrnches.forEach(s => {\r\n      if (s.brnchSeq === key) {\r\n        status = s.brnchNm;\r\n      }\r\n    });\r\n    return status;\r\n  }\r\n}\r\n","module.exports = \"mat-accordion{\\r\\n    margin: 2px;\\r\\n}\\r\\nmat-accordion ,ul {\\r\\n    list-style-type: none;\\r\\n  }\\r\\n.pointer {\\r\\n  cursor: pointer;\\r\\n}\\r\\n.activeName{\\r\\n  background-color: #c0dee7;\\r\\n}\\r\\n.redshadow {\\r\\n  box-shadow: 0 0 5px rgb(255, 255, 255);\\r\\n  padding: 3px 0px 3px 3px;\\r\\n  margin: 5px 1px 3px 0px;\\r\\n  border: 1px solid rgb(223, 41, 41);\\r\\n}\\r\\n.greenshadow {\\r\\n  box-shadow: 0 0 5px rgb(255, 255, 255);\\r\\n  padding: 3px 0px 3px 3px;\\r\\n  margin: 5px 1px 3px 0px;\\r\\n  border: 1px solid rgb(68, 161, 84);\\r\\n}\\r\\n\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-left-side-bar></app-left-side-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <h6 class=\\\"d-inline-block searchshow\\\">Rights Assignment</h6>\\r\\n            </div>\\r\\n\\r\\n            <!----------   User Managment Modal Start            ------>\\r\\n\\r\\n            <div class=\\\"modal fade\\\" id=\\\"userManagmentmodal\\\" role=\\\"dialog\\\">\\r\\n              <div class=\\\"modal-dialog mymodal\\\">\\r\\n\\r\\n                <!-- Modal content-->\\r\\n                <form (ngSubmit)=\\\"onSubmitUserManagmentForm()\\\" [formGroup]=\\\"userManagForm\\\">\\r\\n                  <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                      <h5 class=\\\"modal-title\\\">User Managment</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                      <div class=\\\"cRow\\\">\\r\\n\\r\\n                        <div class=\\\"cCol4\\\">\\r\\n                          <mat-form-field>\\r\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"User Name:\\\" formControlName=\\\"usrRolNm\\\">\\r\\n                          </mat-form-field>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer text-center\\\">\\r\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-min\\\">Ok</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!--------------------------- Modal End ------------------------------------>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n              <ul class=\\\"nav nav-tabs borrowerTabs fulltab\\\" id=\\\"borrowerTabs\\\" role=\\\"tablist\\\">\\r\\n                <li class=\\\"nav-item\\\"> <a class=\\\"nav-link active\\\" id=\\\"rolls-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#rolls\\\"\\r\\n                    role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Roles</a> </li>\\r\\n              </ul>\\r\\n              <div class=\\\"tab-content borrowerTabsContent mb-md-2\\\" id=\\\"rullsTabsContent\\\">\\r\\n                <div class=\\\"tab-pane fade active show\\\" id=\\\"rolls\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"rolls-tab\\\">\\r\\n                  <div class=\\\"addBtn mb-1\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onAddUser()\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                  </div>\\r\\n                  <div class=\\\"mnh-130\\\">\\r\\n                    <div class=\\\"table-responsive bdotable\\\">\\r\\n                      <table class=\\\"table last-left mt-0 mb-0\\\">\\r\\n                        <tbody>\\r\\n                          <tr *ngFor=\\\"let r of roles; let i=index;\\\">\\r\\n                            <td class=\\\"pointer\\\" [class.activeName]=\\\"r.usrRolNm === selectedRole\\\" (click)=\\\"userClick(r, $event)\\\">\\r\\n                              {{r.usrRolNm | uppercase}}</td>\\r\\n                            <td [class.activeName]=\\\"r.usrRolNm === selectedRole\\\" style=\\\"text-align: right\\\">\\r\\n                              <a data-toggle=\\\"tooltip\\\" title=\\\"Edit Name\\\" (click)=\\\"onEditUser(r)\\\" class=\\\"iconBtn\\\"><i\\r\\n                                  class=\\\"fa fa-pencil\\\"></i></a></td>\\r\\n                          </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <div class=\\\"row pt-3\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <h6 class=\\\"colorBlack small \\\"><b>{{selectedRole | uppercase}}</b></h6>\\r\\n                </div>\\r\\n              </div>\\r\\n              <mat-accordion *ngFor=\\\"let mod of obj\\\">\\r\\n                <mat-expansion-panel>\\r\\n                  <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                      {{mod.mod.modNm}}\\r\\n                    </mat-panel-title>\\r\\n                  </mat-expansion-panel-header>\\r\\n\\r\\n                  <!-- <mat-selection-list #shoes (selectionChange)='filterByAppStatus(shoes,$event)'>\\r\\n                    <mat-list-option *ngFor=\\\"let sub of mod.subMods\\\" [value]=\\\"sub.sbModSeq\\\">\\r\\n                      {{sub.sbModNm}}\\r\\n                    </mat-list-option>\\r\\n                  </mat-selection-list> -->\\r\\n\\r\\n                  <mat-selection-list #list>\\r\\n                    <mat-list-option *ngFor=\\\"let tta of mod.subMods\\\" [selected]=\\\"tta.checked\\\"\\r\\n                      (click)=\\\"onAreaListControlChanged(list,tta)\\\" [value]=\\\"tta\\\">\\r\\n                      {{tta.sbModNm}}\\r\\n                    </mat-list-option>\\r\\n                  </mat-selection-list>\\r\\n\\r\\n\\r\\n                </mat-expansion-panel>\\r\\n              </mat-accordion>\\r\\n\\r\\n              <!-- <mat-accordion>\\r\\n                <mat-expansion-panel>\\r\\n                  <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                      Personal data\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                      Type your name and age\\r\\n                    </mat-panel-description>\\r\\n                  </mat-expansion-panel-header>\\r\\n\\r\\n                  <ul>\\r\\n                    <li>\\r\\n                      <mat-checkbox> </mat-checkbox>\\r\\n                    </li>\\r\\n                    <li></li>\\r\\n                  </ul>\\r\\n\\r\\n                </mat-expansion-panel>\\r\\n              </mat-accordion> -->\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"text-left mt-2 pb-3\\\">\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-min ml-2\\\">Cancel</button> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserManagementService } from 'src/app/shared/services/user-managementservice';\r\n\r\n@Component({\r\n  selector: 'app-user-managment',\r\n  templateUrl: './user-managment.component.html',\r\n  styleUrls: ['./user-managment.component.css']\r\n})\r\nexport class UserManagmentComponent implements OnInit {\r\n  typesOfShoes: string[] = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\r\n  userManagForm: FormGroup;\r\n\r\n  constructor(private userService: UserManagementService, private toaster: ToastrService,\r\n    private spinner: NgxSpinnerService, private fb: FormBuilder, ) { }\r\n  roles;\r\n  mods;\r\n  ngOnInit() {\r\n    this.userManagForm = this.fb.group({\r\n      usrRolNm: ['', Validators.required],\r\n      usrRolSeq: ['']\r\n    })\r\n\r\n    this.userService.getRoles().subscribe(p => {\r\n      this.roles = p;\r\n    }, (error) => {\r\n    });\r\n\r\n    this.userService.getMods().subscribe(d => {\r\n      this.mods = d\r\n      console.log(d)\r\n    }, (error) => {\r\n    });\r\n  }\r\n  auth;\r\n  obj;\r\n  selectedRole = \"\";\r\n  role;\r\n  userClick(role) {\r\n    this.role = role;\r\n    this.selectedRole = role.usrRolNm;\r\n    console.log(role);\r\n    this.spinner.show();\r\n    this.userService.getAuth(role.usrRolSeq).subscribe(p => {\r\n      this.spinner.hide();\r\n      this.auth = p;\r\n      this.obj = JSON.parse(JSON.stringify(this.mods));\r\n      this.obj.forEach(ele => {\r\n        ele.subMods.forEach(sub => {\r\n          this.auth.forEach(e => {\r\n            if (e.sbModSeq == sub.sbModSeq) {\r\n              sub.checked = true;\r\n            }\r\n          });\r\n        });\r\n      });\r\n      console.log(this.obj)\r\n      console.log(p)\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  selectedOptions = [];\r\n  onAreaListControlChanged(list, tta) {\r\n    this.selectedOptions = list.selectedOptions.selected.map(item => item.value);\r\n    console.log(this.selectedOptions);\r\n    console.log(list);\r\n    console.log(tta);\r\n    let v: AppAuthDto = new AppAuthDto();\r\n    v.aftrClsng = true;\r\n    v.sbModSeq = tta.sbModSeq;\r\n    v.usrRolSeq = this.role.usrRolSeq;\r\n    if (this.selectedOptions.includes(tta)) {\r\n      console.log(\"checked\");\r\n      v.checked = true;\r\n\r\n    } else {\r\n      console.log(\"unchecked\");\r\n      v.checked = false;\r\n    }\r\n    this.spinner.show();\r\n    this.userService.updateAppAuth(v).subscribe(p => {\r\n      this.spinner.hide();\r\n      this.toaster.success(\"Updated\")\r\n      console.log(p)\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onAddUser() {\r\n    (<any>$('#userManagmentmodal')).modal('show');\r\n    this.userManagForm.reset();\r\n  }\r\n\r\n  onSubmitUserManagmentForm() {\r\n    console.log(this.userManagForm.value)\r\n    this.roles.push(this.userManagForm.value);\r\n    (<any>$('#userManagmentmodal')).modal('hide');\r\n    this.userManagForm.reset();\r\n  }\r\n  onEditUser(r) {\r\n    (<any>$('#userManagmentmodal')).modal('show');\r\n    this.userManagForm = this.fb.group({\r\n      usrRolNm: [r.usrRolNm],\r\n      usrRolSeq: [r.usrRolSeq]\r\n    })\r\n  }\r\n}\r\nexport class AppAuthDto {\r\n  sbModSeq;\r\n  usrRolSeq;\r\n  answrStr;\r\n  aftrClsng;\r\n  checked;\r\n  delPrmFlg = true;\r\n  readPrmFlg = true;\r\n  wrtPrmFlg = true;\r\n}","import {ErrorStateMatcher} from '@angular/material';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n","import {Rule} from '../models/Rule.model';\r\n\r\nexport const RULES: Rule[] = [{id: 1238, name: 'Rule Name 1',\r\n  category: 'Product', condition: 'Client gender is = M and NDI > Requested Amount / 12', status: 'Pending', comments: ''},\r\n  { id: 123, name: 'Rule Name 1',\r\n  category: 'Product', condition: 'Client gender is = M and NDI > Requested Amount / 12', status: 'Pending', comments: ''},\r\n  {id: 456, name: 'Rule Name 2',\r\n    category: 'Internal Audit', condition: 'Client gender is = M and NDI > Requested Amount / 12', status: 'Active', comments: ''},\r\n  {id: 789, name: 'Rule Name 3',\r\n    category: 'Product', condition: 'Client gender is = M and NDI > Requested Amount / 12', status: 'Active', comments: ''},\r\n  {id: 1011, name: 'Rule Name 4',\r\n    category: 'Compliance', condition: 'Client gender is = M and NDI > Requested Amount / 12', status: 'Pending', comments: ''}\r\n];\r\nexport const RULES_CATEGORIES: string[] = ['Products', 'Compliance', 'Internal Audit'];\r\n","export class Answer{\r\n    answrSeq:number;\r\n\tanswrId:string;\r\n\tanswrStr:string;\r\n\tanswrStsKey:number;\r\n\tqstSeq:number;\r\n\tanswrScore:number;\r\n    public answerKey:string;\r\n    public answerString:string;\r\n\r\n    constructor(){\r\n\r\n    }\r\n}","import { Answer } from \"./Answer.model\";\r\n\r\nexport class Question{\r\n    public questionKey:number;\r\n    public questionString:string;\r\n    public questionCategory:number;\r\n    public questionCategoryKey:number;\r\n    public questionStatus:number;\r\n    public questionSortOrder:number;\r\n    public questionnaireSequence: number;    \r\n    public answers:Answer[] = [];\r\n    public qstSortOrdr;\r\n    public questionSeq:number;\r\n    public answerSeq:number;\r\n    public loanAppSeq:string;\r\n    public formSeq:string;\r\n    qstSeq;\r\n    qstTypKey;\r\n    qstStr;\r\n    qstCtgryKey;\r\n    qstStsKey;\r\n    qstnrSeq;\r\n\r\n    public pscScore;\r\n\r\n    answersTest:any[] = [];\r\n    constructor(loanAppSeq:string, formSeq:string){\r\n        this.loanAppSeq = loanAppSeq;\r\n        this.formSeq = formSeq;\r\n    }\r\n }","\r\nexport class Rule {\r\n  public id: number;\r\n  public name: string;\r\n  public category: string;\r\n  public condition: string;\r\n  public status: string;\r\n  public comments: string;\r\n  constructor() {\r\n  }\r\n}\r\n","export class BusinessActivity {\r\n    bizActySeq:number;\r\n    bizActyId:string;\r\n    bizActyNm:string;\r\n    bizSectSeq:number;\r\n    bizActyStsKey:number;\r\n    bizActySortOrdr;\r\n\r\n    constructor()\r\n    {}\r\n}\r\n\r\n\r\n\r\n","export class BusinessSector {\r\n\r\n    bizSectSeq:number;\r\n\tbizSectId:string;\r\n\tbizSectNm:string;\r\n    bizSectStsKey:number;\r\n    bizSectSortOrdr;\r\n\r\n    constructor()\r\n    {}\r\n}\r\n","export class City {\r\n  public cityCd: number;\r\n  public cityNm: string;\r\n  public cityCmnt: string;\r\n  citySeq;\r\n  cityUcRelSeq;\r\n\r\n  constructor() {}\r\n}\r\n","export class HealthInsurancePlan  {\r\n    public hlthInsrPlanSeq: number;\r\n    public planId: string;\r\n    public planNm: string;\r\n    public planStsKey: number;\r\n    public anlPremAmt: number;\r\n    public maxPlcyAmt: number;\r\n    public glAcctNum: string;\r\n    public dfrdAcctNum: string;\r\n\r\n    constructor() {}\r\n  }","export class Questionnaire {\r\n    public qstnrSeq:number;\r\n\tpublic qstnrNm:String;\r\n\tpublic qstnrId:String;\r\n\tpublic qstnrStsKey:number;\r\n    constuctor()\r\n    {}\r\n}\r\n","export class Tag {\r\n    public tagsSeq:number;\r\n\tpublic tagId:String;\r\n\tpublic tagNm:String;\r\n\tpublic tagDscr:String;\r\n\tpublic svrtyFlgKey:number;\r\n\r\n    constructor()\r\n    {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of} from 'rxjs';  \r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport { Answer } from '../models/Answer.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnswerService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n    \r\n  getAnswers(qstSeq): Observable<Answer[]> {\r\n    return this.http.get<Answer[]>(this.apiModel.host + '/setupservice/api/mw-answrs-by-qst-seq/'+ qstSeq,  {headers:this.apiModel.httpHeaderGet}).pipe(\r\n      tap((p: Answer[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  addAnswer (Answer: Answer): Observable<Answer> {\r\n    return this.http.post<Answer>(this.apiModel.host + '/setupservice/api/mw-answrs', Answer,  {headers:this.apiModel.httpHeaderPost}).pipe(\r\n        tap((p: Answer) => console.log(`Add Answer`))\r\n      );\r\n  }\r\n  \r\n  updateAnswer(Answer: Answer): Observable<Answer> {\r\n    return this.http.put<Answer>(this.apiModel.host + '/setupservice/api/mw-answrs', Answer,  {headers:this.apiModel.httpHeaderPost} )\r\n    .pipe(tap((p: Answer) => console.log(p))\r\n    );\r\n  }\r\n\r\n  deleteAnswer(id: string) {\r\n    return this.http.delete<Answer>(this.apiModel.host + '/setupservice/api/mw-answrs/' + id,  {headers:this.apiModel.httpHeaderGet}).pipe(\r\n        tap((p: Answer) => console.log(`Delete Answer`))\r\n    );\r\n  }  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of} from 'rxjs';  \r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport {BusinessActivity} from '../models/business-activity.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusinessActivityService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n    \r\n  getBusinessActivities(bizSectSeq): Observable<BusinessActivity[]> {\r\n    return this.http.get<BusinessActivity[]>(this.apiModel.host + '/setupservice/api/mw-biz-acty-sect/'+bizSectSeq,{headers:this.apiModel.httpHeaderGet}).pipe(\r\n      tap((p: BusinessActivity[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  addBusinessActivity (BusinessActivity: BusinessActivity): Observable<BusinessActivity> {\r\n    return this.http.post<BusinessActivity>(this.apiModel.host + '/setupservice/api/add-new-biz-acty', BusinessActivity, {headers:this.apiModel.httpHeaderPost}).pipe(\r\n        tap((p: BusinessActivity) => console.log(`Add BusinessActivity`))\r\n      );\r\n  }\r\n  \r\n  updateBusinessActivity(BusinessActivity: BusinessActivity): Observable<BusinessActivity> {\r\n    return this.http.put<BusinessActivity>(this.apiModel.host + '/setupservice/api/update-biz-acty', BusinessActivity, {headers:this.apiModel.httpHeaderPost} )\r\n    .pipe(tap((p: BusinessActivity) => console.log(p))\r\n    );\r\n  }\r\n\r\n  deleteBusinessActivity(id: string) {\r\n    return this.http.delete<BusinessActivity>(this.apiModel.host + '/setupservice/api/mw-biz-acty/' + id, {headers:this.apiModel.httpHeaderGet}).pipe(\r\n        tap((p: BusinessActivity) => console.log(`Delete BusinessActivity`))\r\n    );\r\n  }  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of} from 'rxjs';  \r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport {BusinessSector} from '../models/business-sector.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusinessSectorService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n    \r\n  getBusinessSectors(): Observable<BusinessSector[]> {\r\n    return this.http.get<BusinessSector[]>(this.apiModel.host + '/setupservice/api/mw-biz-sect', {headers:this.apiModel.httpHeaderGet}).pipe(\r\n      tap((p: BusinessSector[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  addBusinessSector (BusinessSector: BusinessSector): Observable<BusinessSector> {\r\n    return this.http.post<BusinessSector>(this.apiModel.host + '/setupservice/api/add-new-biz-sect', BusinessSector, {headers:this.apiModel.httpHeaderPost}).pipe(\r\n        tap((p: BusinessSector) => console.log(`Add BusinessSector`))\r\n      );\r\n  }\r\n  \r\n  updateBusinessSector(BusinessSector: BusinessSector): Observable<BusinessSector> {\r\n    return this.http.put<BusinessSector>(this.apiModel.host + '/setupservice/api/update-biz-sect', BusinessSector, {headers:this.apiModel.httpHeaderPost} )\r\n    .pipe(tap((p: BusinessSector) => console.log(p))\r\n    );\r\n  }\r\n\r\n  deleteBusinessSector(id: string) {\r\n    return this.http.delete<BusinessSector>(this.apiModel.host + '/setupservice/api/mw-biz-sect/' + id, {headers:this.apiModel.httpHeaderGet}).pipe(\r\n        tap((p: BusinessSector) => console.log(`Delete BusinessSector`))\r\n    );\r\n  }  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ApiModel } from '../models/Api.model';\r\nimport { PaymentType } from '../models/paymentType.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { City } from '../models/city.model';\r\nimport { UC } from '../models/UC.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(public http: HttpClient,\r\n    private router: Router,\r\n    private toastr: ToastrService) {\r\n\r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n    console.log('City Service Initiated');\r\n  }\r\n  // getCities(): Observable<City[]> {\r\n  //   return this.http.get<City[]>(this.apiModel.host + '/setupservice/api/mw-cities', {headers:this.apiModel.httpHeaderGet})\r\n  //     .pipe(tap((p: City[]) => console.log(p))\r\n  //     );\r\n  // }\r\n  getCities(pageIndex: number, pageSize: number, filter: string, isCount: boolean): Observable<{'cities': City[], 'count': Number}> {\r\n    return this.http.get<City[]>(this.apiModel.host + '/setupservice/api/mw-cities?pageIndex=' + pageIndex + '&pageSize=' + pageSize + '&filter=' + filter + '&isCount=' + isCount, {headers:this.apiModel.httpHeaderGet})\r\n      .pipe(tap((p: {'cities': City[], 'count': Number}) => console.log(p))\r\n      );\r\n  }\r\n\r\n\r\n  addCity(city): Observable<City> {\r\n    return this.http.post<City>(this.apiModel.host + '/setupservice/api/add-new-city', city, {headers:this.apiModel.httpHeaderPost})\r\n      .pipe(tap((p: City) => console.log(p))\r\n      );\r\n  }\r\n\r\n\r\n  editCity(city): Observable<City> {\r\n    return this.http.put<City>(this.apiModel.host + '/setupservice/api/update-city', city, {headers:this.apiModel.httpHeaderPost})\r\n      .pipe(tap((p: City) => console.log(p))\r\n      );\r\n  }\r\n\r\n\r\n  deleteCity(id) {\r\n    return this.http.delete(this.apiModel.host + '/setupservice/api/update-city/' + id, {headers:this.apiModel.httpHeaderGet})\r\n      .pipe(tap((p: City) => console.log(p))\r\n      );\r\n  }\r\n\r\n  getAllUcs() : Observable<any[]>{\r\n    return this.http.get<any[]>(this.apiModel.host + '/setupservice/api/mw-ucs-combinations', {headers:this.apiModel.httpHeaderGet})\r\n      .pipe(tap((p: any[]) => console.log(p))\r\n      );\r\n  }\r\n\r\n  addCityUcRel(obj) : Observable<any>{\r\n    return this.http.post<any>(this.apiModel.host + '/setupservice/api/add-new-city-uc-rel', obj, {headers:this.apiModel.httpHeaderPost})\r\n      .pipe(tap((p: City) => console.log(p))\r\n      );\r\n  }\r\n  deleteCityUcRel(id) : Observable<any>{\r\n    return this.http.delete<any>(this.apiModel.host + '/setupservice/api/mw-city-uc-rel/'+id, {headers:this.apiModel.httpHeaderGet})\r\n      .pipe(tap((p: City) => console.log(p))\r\n      );\r\n  }\r\n  getUcsForCity(id) : Observable<UC[]>{\r\n    return this.http.get<UC[]>(this.apiModel.host + '/setupservice/api/mw-city-uc-rel-by-city/'+id, {headers:this.apiModel.httpHeaderGet})\r\n      .pipe(tap((p: UC[]) => console.log(p))\r\n      );\r\n  }\r\n  public handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n      this.toastr.error(error.message, `${operation} failed:`);\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of} from 'rxjs';  \r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport {HealthInsurancePlan} from '../models/health-insurance-plan.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HealthInsurancePlanService {\r\n  private _url: string = \"ass\";\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n    \r\n  getHealthInsurancePlans(): Observable<HealthInsurancePlan[]> {\r\n    return this.http.get<HealthInsurancePlan[]>(this.apiModel.host + '/setupservice/api/mw-hlth-insr-plan',{ headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: HealthInsurancePlan[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  addHealthInsurancePlan (HealthInsurancePlan: HealthInsurancePlan): Observable<HealthInsurancePlan> {\r\n    return this.http.post<HealthInsurancePlan>(this.apiModel.host + '/setupservice/api/add-new-hlth-insr-plan', HealthInsurancePlan, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n        tap((p: HealthInsurancePlan) => console.log(`Add HealthInsurancePlans`))\r\n      );\r\n  }\r\n  \r\n  updateHealthInsurancePlan(HealthInsurancePlan: HealthInsurancePlan): Observable<HealthInsurancePlan> {\r\n    return this.http.put<HealthInsurancePlan>(this.apiModel.host + '/setupservice/api/update-hlth-insr-plan', HealthInsurancePlan, { headers: this.apiModel.httpHeaderPost })\r\n    .pipe(tap((p: HealthInsurancePlan) => console.log(p))\r\n    );\r\n  }\r\n\r\n  deleteHealthInsurancePlan(id: string) {\r\n    return this.http.delete<HealthInsurancePlan>(this.apiModel.host + '/setupservice/api/mw-hlth-insr-plan/' + id, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((p: HealthInsurancePlan) => console.log(`Delete HealthInsurancePlans`))\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport {PaymentType} from '../models/paymentType.model';\r\nimport {Observable, of} from 'rxjs';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {MwPdcDtlDTOs} from '../models/pdc.model';\r\nimport {PaymentSchedule} from '../models/paymentSchedule.model';\r\nimport {DisbursementVoucherListItem} from '../models/disbursementVoucherListItem.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentTypesService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  paymentTypes: PaymentType;\r\n\r\n  constructor(public http: HttpClient,\r\n              private router: Router,\r\n              private toastr: ToastrService) {\r\n    console.log('Payment Types Service Initiated');\r\n  }\r\n  getTypeStatus() {\r\n    return this.http.get<PaymentSchedule[]>\r\n    (this.apiModel.host + '/setupservice/api/vals-by-group-name?groupName=Types' , { headers: this.apiModel.httpHeaderGet } ).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getTypeStatus')));\r\n  }\r\n  getAllTypes(number) {\r\n    return this.http.get<PaymentType>\r\n    (this.apiModel.host + '/setupservice/api/mw-typs/' + number , { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n\r\n  getAllTypesByCategory(number: number, pageIndex: number, pageSize: number, filter: String, isCount: boolean, brnchSeq: number):Observable<{'typs': PaymentType[], 'count': Number}> {\r\n    return this.http.get<PaymentType>\r\n    (this.apiModel.host + '/setupservice/api/mw-typs?ctgryId=' + number + '&pageIndex=' + pageIndex + '&pageSize=' + pageSize + '&filter=' + filter + '&isCount=' +  isCount + '&brnchSeq=' + brnchSeq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: {'typs': PaymentType[], 'count': Number}) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n  getAllTypesByBrnch(number, brnch) {\r\n    return this.http.get<PaymentType>\r\n    (this.apiModel.host + '/setupservice/api/mw-typs-brnch-wise/' + number +\"/\"+brnch, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n\r\n  getAllBrnches() {\r\n    return this.http.get(this.apiModel.host + '/setupservice/api/mw-brnches'  , { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n  addType(disb: PaymentType): Observable<PaymentType> {\r\n    console.log(disb);\r\n    return this.http.post<PaymentType>(this.apiModel.host + '/setupservice/api/add-new-typ' ,\r\n      disb, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n      tap((p => console.log(p)),\r\n      catchError(this.handleError( 'addType'))\r\n    ));\r\n  }\r\n\r\n\r\n  getTypeByIdAndCtgry(disb: PaymentType): Observable<PaymentType> {\r\n    return this.http.post<PaymentType>(this.apiModel.host + '/setupservice/api/mw-typs-by-id-and-ctgry' ,\r\n      disb, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n      tap((p => console.log(p)),\r\n      catchError(this.handleError( 'getType'))\r\n    ));\r\n  }\r\n\r\n\r\n  updateType(disb: PaymentType): Observable<PaymentType> {\r\n    return this.http.put<PaymentType>(this.apiModel.host + '/setupservice/api/update-typ' ,\r\n      disb, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n      tap((p => console.log(p)),\r\n      catchError(this.handleError( 'updateType'))));\r\n  }\r\n  deleteType(seq): Observable<PaymentType> {\r\n    const url = this.apiModel.host + '/setupservice/api/mw-typs/' + seq;\r\n    return this.http.delete(url, { headers: this.apiModel.httpHeaderGet} ).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('deleteType')));\r\n  }\r\n  public handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n      this.toastr.error(error.message, `${operation} failed:`);\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of} from 'rxjs';  \r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport { Question } from '../models/Question.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n    \r\n  getQuestions(qstnrSeq): Observable<Question[]> {\r\n    return this.http.get<Question[]>(this.apiModel.host + '/setupservice/api/mw-qsts-by-qstnr-seq/' + qstnrSeq,{ headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Question[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  addQuestion (Question: Question): Observable<Question> {\r\n    return this.http.post<Question>(this.apiModel.host + '/setupservice/api/mw-qsts', Question, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n        tap((p: Question) => console.log(`Add Question`))\r\n      );\r\n  }\r\n  \r\n  updateQuestion(Question: Question): Observable<Question> {\r\n    return this.http.put<Question>(this.apiModel.host + '/setupservice/api/mw-qsts', Question, { headers: this.apiModel.httpHeaderPost } )\r\n    .pipe(tap((p: Question) => console.log(p))\r\n    );\r\n  }\r\n\r\n  deleteQuestion(id: string) {\r\n    return this.http.delete<Question>(this.apiModel.host + '/setupservice/api/mw-qsts/' + id, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((p: Question) => console.log(`Delete Question`))\r\n    );\r\n  }  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of} from 'rxjs';  \r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport {Questionnaire} from '../models/questionnaire.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionnaireService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n    \r\n  getQuestionnaires(): Observable<Questionnaire[]> {\r\n    return this.http.get<Questionnaire[]>(this.apiModel.host + '/setupservice/api/mw-qstnr',{ headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Questionnaire[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  addQuestionnaire (Questionnaire: Questionnaire): Observable<Questionnaire> {\r\n    return this.http.post<Questionnaire>(this.apiModel.host + '/setupservice/api/add-new-qstnr', Questionnaire, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n        tap((p: Questionnaire) => console.log(`Add Questionnaire`))\r\n      );\r\n  }\r\n  \r\n  updateQuestionnaire(Questionnaire: Questionnaire): Observable<Questionnaire> {\r\n    return this.http.put<Questionnaire>(this.apiModel.host + '/setupservice/api/update-qstnr', Questionnaire, { headers: this.apiModel.httpHeaderPost } )\r\n    .pipe(tap((p: Questionnaire) => console.log(p))\r\n    );\r\n  }\r\n\r\n  deleteQuestionnaire(id: string) {\r\n    return this.http.delete<Questionnaire>(this.apiModel.host + '/setupservice/api/mw-qstnr/' + id, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((p: Questionnaire) => console.log(`Delete Questionnaire`))\r\n    );\r\n  }  \r\n}\r\n\r\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {Rule} from '../models/Rule.model';\r\nimport {Observable, of} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RulesService {\r\n  private rulesUrl = '/api/rules';\r\n  apiModel: ApiModel = new ApiModel();\r\n  rule: Rule;\r\n\r\n  constructor(public http: HttpClient,\r\n              private router: Router) {\r\n    console.log('Rules Service Initiated');\r\n  }\r\n\r\n  // getRules (): Observable<Rule[]> {\r\n  //   return this.http.get<Rule[]>(this.apiModel.host+\"/setupservice/api/mw-rul\", { headers: this.apiModel.httpHeaderGet }).pipe(\r\n  //     tap(heroes => console.log(`fetched rules`)),\r\n  //     catchError(this.handleError('getRules', []))\r\n  //   );\r\n  // }\r\n\r\n  getRules (pageIndex: number, pageSize: number, filter: string, isCount: boolean): Observable<any> {\r\n    return this.http.get<any>(this.apiModel.host+\"/setupservice/api/mw-rul-paged?pageIndex=\" + pageIndex + '&pageSize=' + pageSize + '&filter=' + filter + '&isCount=' + isCount, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap(heroes => console.log(`fetched rules`)),\r\n      catchError(this.handleError('getRules'))\r\n    );\r\n  }\r\n  \r\n  getRule(id: number): Observable<Rule> {\r\n    const url = `${this.rulesUrl}/${id}`;\r\n    return this.http.get<Rule>(url).pipe(\r\n      tap(_ => console.log(`fetched rule id=${id}`)),\r\n      catchError(this.handleError<Rule>(`getRule id=${id}`))\r\n    );\r\n  }\r\n  addRule (rule: Rule): Observable<Rule> {\r\n    return this.http.post<Rule>(this.apiModel.host+\"/setupservice/api/add-new-rul\", rule, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap(() => console.log(`added rule w/ id=${rule.id}`))\r\n    );\r\n  }\r\n  updateRule (rule: Rule): Observable<Rule> {\r\n    return this.http.put<Rule>(this.apiModel.host+\"/setupservice/api/update-rul\", rule, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap(() => console.log(`added rule w/ id=${rule.id}`))\r\n    );\r\n  }\r\n  deleteRule (id): Observable<Rule[]> {\r\n    return this.http.delete<Rule[]>(this.apiModel.host+\"/setupservice/api/mw-rul/\"+ id, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap(heroes => console.log(`fetched rules`))\r\n    );\r\n  }\r\n  public handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of} from 'rxjs';  \r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport { Tag } from '../models/tag.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagsService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n    \r\n  getTags(): Observable<Tag[]> {\r\n    return this.http.get<Tag[]>(this.apiModel.host + '/setupservice/api/mw-tags',{ headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Tag[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  addTag (Tag: Tag): Observable<Tag> {\r\n    return this.http.post<Tag>(this.apiModel.host + '/setupservice/api/add-new-tags', Tag, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n        tap((p: Tag) => console.log(`Add Tags`))\r\n      );\r\n  }\r\n  \r\n  updateTag(Tag: Tag): Observable<Tag> {\r\n    return this.http.put<Tag>(this.apiModel.host + '/setupservice/api/update-tags', Tag, { headers: this.apiModel.httpHeaderPost } )\r\n    .pipe(tap((p: Tag) => console.log(p))\r\n    );\r\n  }\r\n\r\n  deleteTag(id: string) {\r\n    return this.http.delete<Tag>(this.apiModel.host + '/setupservice/api/mw-tags/' + id, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((p: Tag) => console.log(`Delete Tags`))\r\n    );\r\n  }  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Product } from '../models/Product.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ApiModel } from '../models/Api.model';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { User } from '../models/User.model';\r\nimport { Auth } from '../models/Auth.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserManagementService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  constructor(public http: HttpClient,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService) {\r\n  }\r\n\r\n\r\n\r\n\r\n  getRoles() {\r\n    return this.http.get(this.apiModel.host + '/setupservice/api/get-user-role', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p) => console.log(p)));\r\n  }\r\n\r\n  getMods() {\r\n    return this.http.get(this.apiModel.host + '/setupservice/api/mw-mods', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p) => console.log(p)));\r\n  }\r\n\r\n  getAuth(seq) {\r\n    return this.http.get(this.apiModel.host + '/setupservice/api/mw-auth/'+seq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p) => console.log(p)));\r\n  }\r\n\r\n\r\n  updateAppAuth(auth) {\r\n    return this.http.post<Auth>(this.apiModel.host + '/setupservice/api/update-app-auth', auth, { headers: this.apiModel.httpHeaderPost }).pipe();\r\n  }\r\n\r\n  public handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.spinner.hide();\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n      this.toastr.error(error.error.error, `${operation} failed:`);\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}