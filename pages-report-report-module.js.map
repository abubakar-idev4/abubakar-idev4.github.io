{"version":3,"sources":["webpack:///./src/app/pages/report/active-clients/active-clients.component.css","webpack:///./src/app/pages/report/active-clients/active-clients.component.html","webpack:///./src/app/pages/report/active-clients/active-clients.component.ts","webpack:///./src/app/pages/report/adc-wise-branch-recovery/adc-wise-branch-recovery.component.css","webpack:///./src/app/pages/report/adc-wise-branch-recovery/adc-wise-branch-recovery.component.html","webpack:///./src/app/pages/report/adc-wise-branch-recovery/adc-wise-branch-recovery.component.ts","webpack:///./src/app/pages/report/agencies-target-tracking/agencies-target-tracking.component.css","webpack:///./src/app/pages/report/agencies-target-tracking/agencies-target-tracking.component.html","webpack:///./src/app/pages/report/agencies-target-tracking/agencies-target-tracking.component.ts","webpack:///./src/app/pages/report/bm-bdo-recovery/bm-bdo-recovery.component.css","webpack:///./src/app/pages/report/bm-bdo-recovery/bm-bdo-recovery.component.html","webpack:///./src/app/pages/report/bm-bdo-recovery/bm-bdo-recovery.component.ts","webpack:///./src/app/pages/report/book-details/book-details.component.css","webpack:///./src/app/pages/report/book-details/book-details.component.html","webpack:///./src/app/pages/report/book-details/book-details.component.ts","webpack:///./src/app/pages/report/branch-performance-review/branch-performance-review.component.css","webpack:///./src/app/pages/report/branch-performance-review/branch-performance-review.component.html","webpack:///./src/app/pages/report/branch-performance-review/branch-performance-review.component.ts","webpack:///./src/app/pages/report/brnch-turnover-anlysis/brnch-turnover-anlysis.component.css","webpack:///./src/app/pages/report/brnch-turnover-anlysis/brnch-turnover-anlysis.component.html","webpack:///./src/app/pages/report/brnch-turnover-anlysis/brnch-turnover-anlysis.component.ts","webpack:///./src/app/pages/report/client-health-beneficiary/client-health-beneficiary.component.css","webpack:///./src/app/pages/report/client-health-beneficiary/client-health-beneficiary.component.html","webpack:///./src/app/pages/report/client-health-beneficiary/client-health-beneficiary.component.ts","webpack:///./src/app/pages/report/female-participation/female-participation.component.css","webpack:///./src/app/pages/report/female-participation/female-participation.component.html","webpack:///./src/app/pages/report/female-participation/female-participation.component.ts","webpack:///./src/app/pages/report/five-day-advance/five-day-advance.component.css","webpack:///./src/app/pages/report/five-day-advance/five-day-advance.component.html","webpack:///./src/app/pages/report/five-day-advance/five-day-advance.component.ts","webpack:///./src/app/pages/report/fund-stmnt/fund-stmnt.component.css","webpack:///./src/app/pages/report/fund-stmnt/fund-stmnt.component.html","webpack:///./src/app/pages/report/fund-stmnt/fund-stmnt.component.ts","webpack:///./src/app/pages/report/insurance-claim/insurance-claim.component.css","webpack:///./src/app/pages/report/insurance-claim/insurance-claim.component.html","webpack:///./src/app/pages/report/insurance-claim/insurance-claim.component.ts","webpack:///./src/app/pages/report/landing/landing.component.css","webpack:///./src/app/pages/report/landing/landing.component.html","webpack:///./src/app/pages/report/landing/landing.component.ts","webpack:///./src/app/pages/report/overdueloans-report/overdueloans-report.component.css","webpack:///./src/app/pages/report/overdueloans-report/overdueloans-report.component.html","webpack:///./src/app/pages/report/overdueloans-report/overdueloans-report.component.ts","webpack:///./src/app/pages/report/par-branch-wise/par-branch-wise.component.css","webpack:///./src/app/pages/report/par-branch-wise/par-branch-wise.component.html","webpack:///./src/app/pages/report/par-branch-wise/par-branch-wise.component.ts","webpack:///./src/app/pages/report/par-md/par-md.component.css","webpack:///./src/app/pages/report/par-md/par-md.component.html","webpack:///./src/app/pages/report/par-md/par-md.component.ts","webpack:///./src/app/pages/report/party-ledger/party-ledger.component.css","webpack:///./src/app/pages/report/party-ledger/party-ledger.component.html","webpack:///./src/app/pages/report/party-ledger/party-ledger.component.ts","webpack:///./src/app/pages/report/pdc-detail/pdc-detail.component.css","webpack:///./src/app/pages/report/pdc-detail/pdc-detail.component.html","webpack:///./src/app/pages/report/pdc-detail/pdc-detail.component.ts","webpack:///./src/app/pages/report/pending-clients/pending-clients.component.css","webpack:///./src/app/pages/report/pending-clients/pending-clients.component.html","webpack:///./src/app/pages/report/pending-clients/pending-clients.component.ts","webpack:///./src/app/pages/report/portfolio-concentration/portfolio-concentration.component.css","webpack:///./src/app/pages/report/portfolio-concentration/portfolio-concentration.component.html","webpack:///./src/app/pages/report/portfolio-concentration/portfolio-concentration.component.ts","webpack:///./src/app/pages/report/portfolio/portfolio.component.css","webpack:///./src/app/pages/report/portfolio/portfolio.component.html","webpack:///./src/app/pages/report/portfolio/portfolio.component.ts","webpack:///./src/app/pages/report/product-wise-report-edition/product-wise-report-edition.component.css","webpack:///./src/app/pages/report/product-wise-report-edition/product-wise-report-edition.component.html","webpack:///./src/app/pages/report/product-wise-report-edition/product-wise-report-edition.component.ts","webpack:///./src/app/pages/report/projected-clients-loan-completion/projected-clients-loan-completion.component.css","webpack:///./src/app/pages/report/projected-clients-loan-completion/projected-clients-loan-completion.component.html","webpack:///./src/app/pages/report/projected-clients-loan-completion/projected-clients-loan-completion.component.ts","webpack:///./src/app/pages/report/rate-of-retention/rate-of-retention.component.css","webpack:///./src/app/pages/report/rate-of-retention/rate-of-retention.component.html","webpack:///./src/app/pages/report/rate-of-retention/rate-of-retention.component.ts","webpack:///./src/app/pages/report/report.module.ts","webpack:///./src/app/pages/report/reports-leftside-bar/reports-leftside-bar.component.css","webpack:///./src/app/pages/report/reports-leftside-bar/reports-leftside-bar.component.html","webpack:///./src/app/pages/report/reports-leftside-bar/reports-leftside-bar.component.ts","webpack:///./src/app/pages/report/reversed-entries/reversed-entries.component.css","webpack:///./src/app/pages/report/reversed-entries/reversed-entries.component.html","webpack:///./src/app/pages/report/reversed-entries/reversed-entries.component.ts","webpack:///./src/app/pages/report/shared/shared.component.css","webpack:///./src/app/pages/report/shared/shared.component.html","webpack:///./src/app/pages/report/shared/shared.component.ts","webpack:///./src/app/pages/report/tag-client-claim/tag-client-claim.component.css","webpack:///./src/app/pages/report/tag-client-claim/tag-client-claim.component.html","webpack:///./src/app/pages/report/tag-client-claim/tag-client-claim.component.ts","webpack:///./src/app/pages/report/top-sheet/top-sheet.component.css","webpack:///./src/app/pages/report/top-sheet/top-sheet.component.html","webpack:///./src/app/pages/report/top-sheet/top-sheet.component.ts","webpack:///./src/app/pages/report/trail-balance/trail-balance.component.css","webpack:///./src/app/pages/report/trail-balance/trail-balance.component.html","webpack:///./src/app/pages/report/trail-balance/trail-balance.component.ts","webpack:///./src/app/pages/report/transferred-clients/transferred-clients.component.css","webpack:///./src/app/pages/report/transferred-clients/transferred-clients.component.html","webpack:///./src/app/pages/report/transferred-clients/transferred-clients.component.ts","webpack:///./src/app/pages/report/turn-around-time/turn-around-time.component.css","webpack:///./src/app/pages/report/turn-around-time/turn-around-time.component.html","webpack:///./src/app/pages/report/turn-around-time/turn-around-time.component.ts","webpack:///./src/app/pages/report/validation-report/validation-report.component.css","webpack:///./src/app/pages/report/validation-report/validation-report.component.html","webpack:///./src/app/pages/report/validation-report/validation-report.component.ts","webpack:///./src/app/pages/report/womenparticipation/womenparticipation.component.css","webpack:///./src/app/pages/report/womenparticipation/womenparticipation.component.html","webpack:///./src/app/pages/report/womenparticipation/womenparticipation.component.ts"],"names":[],"mappings":"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","file":"pages-report-report-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Active Clients <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <br>\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitActiveClients()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print Active Clients</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { DataService } from 'src/app/shared/services/data.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { ComplianceService } from 'src/app/shared/services/compliance.service';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\n\r\n@Component({\r\n  selector: 'app-active-clients',\r\n  templateUrl: './active-clients.component.html',\r\n  styleUrls: ['./active-clients.component.css']\r\n})\r\nexport class ActiveClientsComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  rptFlag: any;\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  allBranches: Object;\r\n\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private toaster: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private dataService: DataService,\r\n    private transfersService: TransfersService,\r\n    private reportService: ReportsService,) {\r\n\r\n    this.maxDate = new Date();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.auth)\r\n\r\n    this.ngForm = this.fb.group({\r\n      // toDt: [new FormControl(moment()), Validators.required],\r\n      // frmDt: [new FormControl(moment()), Validators.required],\r\n      // brnchSeq: [this.auth.emp_branch],\r\n      // isXls: [false],\r\n    });\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n  getBranch() {\r\n    this.allBranches = [];\r\n    this.dataService.getBranch(this.ngForm.controls[\"areaSeq\"].value).subscribe(d => {\r\n      this.allBranches = d;\r\n    });\r\n  }\r\n\r\n  onSubmitActiveClients() {\r\n    this.spinner.show();\r\n    // const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    // const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    // let brnchSeq = this.ngForm.get('brnchSeq').value ? this.ngForm.get('brnchSeq').value : 0;\r\n    // let isXls = this.ngForm.get('isXls').value;\r\n    // console.log(isXls)\r\n    this.reportService.printActiveClients().subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">ADCs and Branch Wise Recovery <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <form [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <div class=\\\"cCol4\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                        [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                        [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-adc-wise-branch-recovery',\r\n  templateUrl: './adc-wise-branch-recovery.component.html',\r\n  styleUrls: ['./adc-wise-branch-recovery.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class AdcWiseBranchRecoveryComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private reportsService: ReportsService,\r\n    private transfersService: TransfersService, private toaster: ToastrService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      frmDt: [new Date(), Validators.required],\r\n      toDt: [new Date(), Validators.required],\r\n      // branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  get f() { return this.ngForm.controls; }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MMM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MMM-yyyy')\r\n    this.reportsService.printAdcBranchWise(frmDt, toDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Agencies Target Tracking <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"scheduleForm\\\" (ngSubmit)=\\\"postedReport()\\\">\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <div class=\\\"cCol8\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!scheduleForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-agencies-target-tracking',\r\n  templateUrl: './agencies-target-tracking.component.html',\r\n  styleUrls: ['./agencies-target-tracking.component.css']\r\n})\r\nexport class AgenciesTargetTrackingComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  scheduleForm: FormGroup;\r\n  maxDate: Date;\r\n  constructor( private reportsService:ReportsService,private fb: FormBuilder, private toaster: ToastrService, private spinner: NgxSpinnerService) {\r\n    this.maxDate=new Date();\r\n    this.scheduleForm = this.fb.group({\r\n      clntId: [new Date(), Validators.required],\r\n    }); }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n\r\n  postedReport(){\r\n    this.spinner.show();\r\n    this.reportsService.printAgenciesTargetTracking(this.auth.emp_branch).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">BM BDO Recovery Report <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                         title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"portfolioReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                           [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                           [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-bm-bdo-recovery',\r\n  templateUrl: './bm-bdo-recovery.component.html',\r\n  styleUrls: ['./bm-bdo-recovery.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class BmBdoRecoveryComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private reportsService: ReportsService, private toaster: ToastrService, private recoveryService: RecoveryService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      frmDt: [new Date(), Validators.required],\r\n      toDt: [new Date(), Validators.required]\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  portfolioReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.bmBdoRecoveryReport(frmDt, toDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Book Detail <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"type\\\">\\r\\n                      <mat-option [value]=\\\"1\\\">Bank</mat-option>\\r\\n                      <mat-option [value]=\\\"2\\\">Cash</mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\n// import {default as _rollupMoment} from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, DateAdapter } from '@angular/material';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-book-details',\r\n  templateUrl: './book-details.component.html',\r\n  styleUrls: ['./book-details.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class BookDetailsComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private spinner: NgxSpinnerService, private toaster: ToastrService, private fb: FormBuilder, private reportsService: ReportsService, private recoveryService: RecoveryService, private transfersService: TransfersService) {\r\n    this.maxDate = new Date();\r\n\r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [''],\r\n      });\r\n\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    this.reportsService.printBookDetails(this.ngForm.value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n  getPaymentType() {\r\n    this.recoveryService.getRecoveryTypes().subscribe((data => {\r\n      this.tempInstituteArray = data;\r\n    }));\r\n  }\r\n  get f() { return this.ngForm.controls; }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Branch Performance Review <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-branch-performance-review',\r\n  templateUrl: './branch-performance-review.component.html',\r\n  styleUrls: ['./branch-performance-review.component.css']\r\n})\r\nexport class BranchPerformanceReviewComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private spinner: NgxSpinnerService, private reportsService: ReportsService, private recoveryService: RecoveryService, private transfersService: TransfersService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [''],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MMM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MMM-yyyy')\r\n    this.reportsService.printBranchPerformanceReview(frmDt, toDt, this.ngForm.get(\"branch\").value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n  getPaymentType() {\r\n    this.recoveryService.getRecoveryTypes().subscribe((data => {\r\n      this.tempInstituteArray = data;\r\n    }));\r\n  }\r\n  get f() { return this.ngForm.controls; }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Branch Turnover Anlysis & Planing <i class=\\\"fa fa-print\\\"> </i>\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol6\\\">\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport * as _moment from 'moment';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY'\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-brnch-turnover-anlysis',\r\n  templateUrl: './brnch-turnover-anlysis.component.html',\r\n  styleUrls: ['./brnch-turnover-anlysis.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class BrnchTurnoverAnlysisComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new Date(), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new Date(), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    let branch = this.ngForm.get('branch').value;\r\n    let date = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy');\r\n    this.reportsService.printBranchTurnoverAnalysisAndPlaning(date, branch).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Client Health Beneficiary <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol5\\\">\\r\\n\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                    <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                      <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                        {{b.brnchNm}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from 'node_modules/@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from 'node_modules/@angular/forms';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from 'node_modules/@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-client-health-beneficiary',\r\n  templateUrl: './client-health-beneficiary.component.html',\r\n  styleUrls: ['./client-health-beneficiary.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },]\r\n})\r\nexport class ClientHealthBeneficiaryComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date; \r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private reportsService: ReportsService, private toaster: ToastrService, private recoveryService: RecoveryService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n\r\n\r\n    if (this.auth.role == \"bdo\" || this.auth.role == \"bm\") {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [''],\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MMM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MMM-yyyy')\r\n    this.reportsService.printClientHealthBeneficiery(frmDt, toDt, this.ngForm.get(\"branch\").value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n  getPaymentType() {\r\n    this.recoveryService.getRecoveryTypes().subscribe((data => {\r\n      this.tempInstituteArray = data;\r\n    }));\r\n  }\r\n  get f() { return this.ngForm.controls; }\r\n}\r\n","module.exports = \".example-month-picker .mat-calendar-period-button {\\r\\n    pointer-events: none;\\r\\n  }\\r\\n  \\r\\n  .example-month-picker .mat-calendar-arrow {\\r\\n    display: none;\\r\\n  }\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"mysearchbox\\\">\\r\\n              <h6 class=\\\"d-inline-block searchshow\\\">Female Participation</h6>\\r\\n              <div class=\\\"mysearch\\\"> <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search for names..\\\"\\r\\n                  title=\\\"Type in a name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printFemaleParticipationReport()\\\">\\r\\n            <div class=\\\"row clearfix\\\">\\r\\n              <div class=\\\"col-sm-12\\\">\\r\\n                <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"brnchSeq\\\"\\r\\n                  readonly />\\r\\n\\r\\n                <div class=\\\"cRow\\\">\\r\\n\\r\\n                  <!--------------- REGIONS DROPDOWN---------->\\r\\n\\r\\n                  <div *ngIf=\\\"disabledRegion\\\">\\r\\n                    <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm' && auth.role !='am' && auth.role != 'rm'\\\"\\r\\n                      (change)=\\\"getArea($event)\\\" [items]=\\\"allRegions\\\" bindLabel=\\\"regNm\\\" bindValue=\\\"regSeq\\\" name=\\\"regNm\\\"\\r\\n                      placeholder=\\\"Select Region:\\\" formControlName=\\\"regSeq\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <!--------------- AREA DROPDOWN---------->\\r\\n\\r\\n                  <div *ngIf=\\\"disabledArea\\\">\\r\\n                    <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm' && auth.role !='am'\\\"\\r\\n                      (change)=\\\"getBranch($event)\\\" [items]=\\\"allAreas\\\" bindLabel=\\\"areaNm\\\" bindValue=\\\"areaSeq\\\"\\r\\n                      name=\\\"areaNm\\\" placeholder=\\\"Select Area:\\\" formControlName=\\\"areaSeq\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n\\r\\n                  <!--------------- BRANCH DROPDOWN---------->\\r\\n\\r\\n                  <div *ngIf=\\\"disabledBranch\\\">\\r\\n                    <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"allBranches\\\" bindLabel=\\\"brnchNm\\\"\\r\\n                      bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\" formControlName=\\\"brnchSeq\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n\\r\\n                  <!------------- To Date Form---------------->\\r\\n                  <div>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                        [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n                  <!-----------------  From Date Form               ----------------------->\\r\\n                  <div>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\" [max]=\\\"maxDate\\\"\\r\\n                        placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"buttons mt-3\\\">\\r\\n                  <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary btn-min mr-3\\\">Print</button>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ProductGroup } from 'src/app/shared/models/productGroup.model';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as _moment from 'moment';\r\nimport { OperationsReportsService } from 'src/app/shared/services/operations-reports.service';\r\nimport { DataService } from 'src/app/shared/services/data.service';\r\nimport { Region } from 'src/app/shared/models/region.model';\r\nconst moment = _moment;\r\n\r\n@Component({\r\n  selector: 'app-female-participation',\r\n  templateUrl: './female-participation.component.html',\r\n  styleUrls: ['./female-participation.component.css']\r\n})\r\nexport class FemaleParticipationComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  rpt_flg: any;\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  allRegions: Region[];\r\n  allAreas: Object;\r\n  allBranches: Object;\r\n  disabledRegion: boolean = false;\r\n  disabledArea: boolean = false;\r\n  disabledBranch: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private toaster: ToastrService,\r\n    private operationsReportsService: OperationsReportsService,\r\n    private reportsService: ReportsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dataService: DataService,\r\n    private transfersService: TransfersService, ) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      frmDt: [new Date(), Validators.required],\r\n      toDt: [new Date(), Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.auth)\r\n\r\n    if (this.auth.role == \"admin\") {\r\n\r\n      this.disabledRegion = true;\r\n      this.disabledArea = false;\r\n      this.disabledBranch = false;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: ['', Validators.required],\r\n        areaSeq: [''],\r\n        brnchSeq: [''],\r\n      });\r\n    } else if (this.auth.role == \"rm\") {\r\n\r\n      this.disabledRegion = false;\r\n      this.disabledArea = true;\r\n      this.disabledBranch = true;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: [this.auth.emp_reg],\r\n        areaSeq: [''],\r\n        brnchSeq: [''],\r\n      });\r\n      this.getArea();\r\n    } else if (this.auth.role == \"am\") {\r\n\r\n      this.disabledRegion = false;\r\n      this.disabledArea = false;\r\n      this.disabledBranch = true;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: [0],\r\n        areaSeq: [this.auth.emp_area],\r\n        brnchSeq: [''],\r\n      });\r\n      this.getBranch();\r\n\r\n    } else if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n\r\n      this.disabledRegion = false;\r\n      this.disabledArea = false;\r\n      this.disabledBranch = false;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: [0],\r\n        areaSeq: [0],\r\n        brnchSeq: [this.auth.emp_branch],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => {\r\n        this.branchs = d;\r\n      });\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: ['', Validators.required],\r\n        areaSeq: [''],\r\n        brnchSeq: [''],\r\n      });\r\n    }\r\n\r\n    this.transfersService.getRegions().subscribe(data => {\r\n      this.allRegions = data;\r\n    });\r\n  }\r\n\r\n  returnFlag() {\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.rpt_flg = 1;\r\n    } else if (this.auth.role == \"am\") {\r\n      this.rpt_flg = 2;\r\n    } else if (this.auth.role == \"rm\") {\r\n      this.rpt_flg = 3;\r\n    }\r\n    return this.rpt_flg;\r\n  }\r\n\r\n  returnFlagForAdmin() {\r\n    if (this.auth.role == \"admin\" && this.ngForm.controls['regSeq'].value !== 0 && this.ngForm.controls['areaSeq'].value !== 0 && this.ngForm.controls['brnchSeq'].value !== 0) {\r\n      this.rpt_flg = 1;\r\n    } else if (this.auth.role == \"admin\" && this.ngForm.controls['regSeq'].value !== 0 && this.ngForm.controls['areaSeq'].value !== 0 &&\r\n      this.ngForm.controls['brnchSeq'].value == 0) {\r\n      this.rpt_flg = 2;\r\n    } else if (this.auth.role == \"admin\" && this.ngForm.controls['regSeq'].value !== 0 && this.ngForm.controls['areaSeq'].value == 0 && this.ngForm.controls['brnchSeq'].value == 0) {\r\n      this.rpt_flg = 3;\r\n    }\r\n    return this.rpt_flg;\r\n  }\r\n\r\n\r\n  getArea() {\r\n    this.allAreas = [];\r\n    this.disabledArea = false;\r\n    this.disabledBranch = false;\r\n    this.dataService.getArea(this.ngForm.controls[\"regSeq\"].value).subscribe(d => {\r\n      this.allAreas = d;\r\n      this.disabledArea = true;\r\n    });\r\n  }\r\n\r\n  getBranch() {\r\n    this.allBranches = [];\r\n    this.disabledBranch = false;\r\n    this.dataService.getBranch(this.ngForm.controls[\"areaSeq\"].value).subscribe(d => {\r\n      this.allBranches = d;\r\n      this.disabledBranch = true;\r\n    });\r\n  }\r\n  printFemaleParticipationReport() {\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\" || this.auth.role == \"rm\" || this.auth.role == \"am\") {\r\n      this.returnFlag();\r\n    } else {\r\n      this.returnFlagForAdmin();\r\n    }\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    let regSeq = this.ngForm.get('regSeq').value ? this.ngForm.get('regSeq').value : 0;\r\n    let areaSeq = this.ngForm.get('areaSeq').value ? this.ngForm.get('areaSeq').value : 0;\r\n    let brnchSeq = this.ngForm.get('brnchSeq').value ? this.ngForm.get('brnchSeq').value : 0;\r\n    this.reportsService.printFemalearticipation(toDt, frmDt, this.rpt_flg, areaSeq, regSeq, brnchSeq).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">5 Days Advance Recovery Trend Analysis <i class=\\\"fa fa-print\\\">\\r\\n                  </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport * as _moment from 'moment';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-five-day-advance',\r\n  templateUrl: './five-day-advance.component.html',\r\n  styleUrls: ['./five-day-advance.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class FiveDayAdvanceComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs:Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService,private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d=>\r\n        {this.branchs=d;}  \r\n        );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: [{value: this.auth.emp_branch,disabled: false}, Validators.required,],\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printFiveDaysAdvanceRecoveryTrends(frmDt,toDt, this.ngForm.get(\"branch\").value ).subscribe((response)=>{\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n\r\n\r\n}\r\n","module.exports = \".example-month-picker .mat-calendar-period-button {\\r\\n    pointer-events: none;\\r\\n  }\\r\\n  \\r\\n  .example-month-picker .mat-calendar-arrow {\\r\\n    display: none;\\r\\n  }\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Fund Statement <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"portfolioReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol5\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"toDt\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"toDt\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #toDt disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\n// import {default as _rollupMoment} from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { MatDatepicker } from '@angular/material';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-fund-stmnt',\r\n  templateUrl: './fund-stmnt.component.html',\r\n  styleUrls: ['./fund-stmnt.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class FundStmntComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder,\r\n    private toaster: ToastrService, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  portfolioReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MMM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MMM-yyyy')\r\n    let branch = this.ngForm.get('branch').value;\r\n    this.reportsService.printFundStmntReport(frmDt, toDt, branch).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  date = new FormControl(moment());\r\n\r\n  chosenYearHandler(normalizedYear: Moment, name: string) {\r\n    const ctrlValue = this.date.value;\r\n    console.log(ctrlValue)\r\n    console.log(normalizedYear)\r\n    ctrlValue.year(normalizedYear.year());\r\n    let d = this.ngForm.controls[name].value;\r\n    d.value.year(normalizedYear.year())\r\n    this.ngForm.controls[name].setValue(d);\r\n    this.date.setValue(ctrlValue);\r\n  }\r\n\r\n  chosenMonthHandler(normlizedMonth: Moment, datepicker: MatDatepicker<Moment>, name: string) {\r\n    //const ctrlValue = this.date.value;\r\n    // let d = this.ngForm.controls[name].value;\r\n    // this.ngForm.controls[name].setValue(this.date.value);\r\n    //let d = this.ngForm.controls[name].value;\r\n    //d.value.month(normlizedMonth.month());\r\n    //d.value.year(normlizedMonth.year());\r\n    this.ngForm.controls[name].setValue(normlizedMonth);\r\n    //ctrlValue.month(normlizedMonth.month());\r\n    //this.date.setValue(ctrlValue);\r\n    datepicker.close();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Insurance Claim Report <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-insurance-claim',\r\n  templateUrl: './insurance-claim.component.html',\r\n  styleUrls: ['./insurance-claim.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },]\r\n})\r\nexport class InsuranceClaimComponent implements OnInit {\r\n\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService, private recoveryService: RecoveryService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [''],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MMM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MMM-yyyy')\r\n    this.reportsService.printInsuranceClaimReport(frmDt, toDt, this.ngForm.get(\"branch\").value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n  getPaymentType() {\r\n    this.recoveryService.getRecoveryTypes().subscribe((data => {\r\n      this.tempInstituteArray = data;\r\n    }));\r\n  }\r\n  get f() { return this.ngForm.controls; }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.css']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Overdue Credit <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"overdueForm\\\" (ngSubmit)=\\\"overdueReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol5\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                    <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                      <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                        {{b.brnchNm}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Product Type\\\" formControlName=\\\"prdId\\\">\\r\\n                      <mat-option *ngFor=\\\"let product of allItems\\\" [value]=\\\"product.prdGrpSeq\\\">{{product.prdGrpNm}}\\r\\n                      </mat-option>\\r\\n                      <mat-error *ngIf=\\\"overdueForm.errors?.prdId\\\">\\r\\n                        Payment Mode is <strong>required</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"asDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"As Of Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!overdueForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-overdueloans-report',\r\n  templateUrl: './overdueloans-report.component.html',\r\n  styleUrls: ['./overdueloans-report.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },]\r\n})\r\nexport class OverdueloansReportComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  allItems: any;\r\n  overdueForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private productService: ProductService, private transfersService: TransfersService, private toaster: ToastrService, private fb: FormBuilder, private reportsService: ReportsService, private spinner: NgxSpinnerService) {\r\n    this.overdueForm = this.fb.group({\r\n      prdId: ['', Validators.required],\r\n      asDt: ['', Validators.required]\r\n    });\r\n\r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.overdueForm = this.fb.group({\r\n        prdId: ['', Validators.required],\r\n        asDt: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => {\r\n        this.branchs = d;\r\n      });\r\n      this.overdueForm = this.fb.group({\r\n        prdId: ['', Validators.required],\r\n        asDt: ['', Validators.required],\r\n        branch: [''],\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.maxDate = new Date();\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems = data;\r\n      console.log(this.allItems)\r\n    });\r\n  }\r\n\r\n  overdueReport() {\r\n    this.spinner.show();\r\n    let asDt = new DatePipe('en-US').transform(this.overdueForm.get('asDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printOverDueReport(this.overdueForm.get('prdId').value, asDt, this.overdueForm.controls['branch'].value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">PAR Branch Wise <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-par-branch-wise',\r\n  templateUrl: './par-branch-wise.component.html',\r\n  styleUrls: ['./par-branch-wise.component.css']\r\n})\r\nexport class PARBranchWiseComponent implements OnInit {\r\n\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [''],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  get f() { return this.ngForm.controls; }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MMM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MMM-yyyy')\r\n    this.reportsService.parBranchWise(frmDt, toDt, this.ngForm.get(\"branch\").value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">PAR Report <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"portfolioReport()\\\">\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <div class=\\\"cCol5\\\">\\r\\n                    <!-- <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"frmDt\\\"  placeholder=\\\"From Date:\\\"\\r\\n                        [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field> -->\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"toDt\\\" placeholder=\\\"As Of Date:\\\" [matDatepicker]=\\\"toDt\\\"\\r\\n                        disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"toDt\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #toDt disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-par-md',\r\n  templateUrl: './par-md.component.html',\r\n  styleUrls: ['./par-md.component.css']\r\n})\r\nexport class ParMdComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  // frmDt: string;\r\n  toDt: string;\r\n  constructor(private fb: FormBuilder,\r\n    private toaster: ToastrService, private reportsService: ReportsService, private spinner: NgxSpinnerService) {\r\n    this.ngForm = this.fb.group({\r\n      // frmDt: [new Date,Validators.required],\r\n      toDt: [new Date, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  portfolioReport() {\r\n    this.spinner.show();\r\n    // const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    console.log(toDt)\r\n    this.reportsService.printParMdReport(toDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"mysearchbox\\\">\\r\\n              <h6 class=\\\"d-inline-block searchshow\\\">Party Ledger <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                            <div class=\\\"mysearch\\\">\\r\\n                              <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                               <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\" title=\\\"Type in a name\\\">\\r\\n                            </div>\\r\\n                            </div>\\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n        \\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"scheduleForm\\\" (ngSubmit)=\\\"postedReport()\\\" >\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <div class=\\\"cCol8\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input  matInput required  formControlName=\\\"clntId\\\" \\r\\n                             placeholder=\\\"Client Id:\\\" [matDatepicker]=\\\"picker3\\\" disabled readonly/>\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker  required #picker3 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                      <mat-error *ngIf=\\\"!scheduleForm.get('frstInstDt').valid\\\">\\r\\n                        First Installment Date is <strong>required</strong>\\r\\n                      </mat-error> \\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n              </div>\\r\\n            </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div></div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\n\r\n@Component({\r\n  selector: 'app-party-ledger',\r\n  templateUrl: './party-ledger.component.html',\r\n  styleUrls: ['./party-ledger.component.css']\r\n})\r\nexport class PartyLedgerComponent implements OnInit {\r\n\r\n  scheduleForm: FormGroup;\r\n  maxDate: Date;\r\n  constructor( private reportsService:ReportsService,private fb: FormBuilder) {\r\n    this.maxDate=new Date();\r\n    this.scheduleForm = this.fb.group({\r\n      clntId: [new Date(), Validators.required],\r\n    }); }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n\r\n  postedReport(){\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">PDC Details <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <form [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY'\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-pdc-detail',\r\n  templateUrl: './pdc-detail.component.html',\r\n  styleUrls: ['./pdc-detail.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class PdcDetailComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private reportsService: ReportsService,\r\n    private transfersService: TransfersService, private toaster: ToastrService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == 'admin') {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printPdcDetail(frmDt, toDt, this.ngForm.get(\"branch\").value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Pending Clients <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"overdueReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol4\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Type\\\" formControlName=\\\"typ\\\">\\r\\n                      <mat-option [value]=\\\"0\\\">\\r\\n                        Pending Clients\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"1\\\">\\r\\n                        Exit Clients\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Product Type\\\" formControlName=\\\"prdId\\\">\\r\\n                      <mat-option *ngFor=\\\"let product of allItems\\\" [value]=\\\"product.prdGrpSeq\\\">{{product.prdGrpNm}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"asDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"As Of Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-pending-clients',\r\n  templateUrl: './pending-clients.component.html',\r\n  styleUrls: ['./pending-clients.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },]\r\n})\r\nexport class PendingClientsComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  allItems: any;\r\n  constructor(private productService: ProductService, private toaster: ToastrService, private fb: FormBuilder, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    if (this.auth.role == 'admin') {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n      this.ngForm = this.fb.group({\r\n        typ: ['', Validators.required],\r\n        prdId: ['', Validators.required],\r\n      asDt: ['', Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        typ: ['', Validators.required],\r\n        prdId: ['', Validators.required],\r\n      asDt: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.maxDate=new Date();\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems = data;\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n  overdueReport() {\r\n    console.log(this.auth.emp_branch)\r\n    this.spinner.show();\r\n    let asDt = new DatePipe('en-US').transform(this.ngForm.get('asDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printPendingClients(this.ngForm.get('prdId').value,this.ngForm.get('branch').value,asDt,this.ngForm.get('typ').value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Portfolio Concentration <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"overdueReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol4\\\">\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Product Name\\\" formControlName=\\\"prd\\\">\\r\\n                      <mat-option *ngFor=\\\"let product of allItems\\\" [value]=\\\"product.prdGrpSeq\\\">{{product.prdGrpNm}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"asDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"As Of Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { ProductGroup } from 'src/app/shared/models/productGroup.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-portfolio-concentration',\r\n  templateUrl: './portfolio-concentration.component.html',\r\n  styleUrls: ['./portfolio-concentration.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },]\r\n})\r\nexport class PortfolioConcentrationComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  brnchPrds: any;\r\n  allItems: ProductGroup[] = [];\r\n  constructor(private productService: ProductService, private toaster: ToastrService, private fb: FormBuilder, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    if (this.auth.role == 'admin') {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n      this.ngForm = this.fb.group({\r\n        prd: ['', Validators.required],\r\n      asDt: ['', Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        prd: ['', Validators.required],\r\n      asDt: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.maxDate=new Date();\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems = data;\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n  overdueReport() {\r\n    this.spinner.show();\r\n    let asDt = new DatePipe('en-US').transform(this.ngForm.get('asDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printPortfolioConcentration(this.ngForm.get('prd').value,this.ngForm.get('branch').value,asDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Portfolio Monitoring <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"portfolioReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-portfolio',\r\n  templateUrl: './portfolio.component.html',\r\n  styleUrls: ['./portfolio.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class PortfolioComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private reportsService: ReportsService, private toaster: ToastrService, private recoveryService: RecoveryService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => {\r\n        this.branchs = d;\r\n      });\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: [''],\r\n      });\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  portfolioReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printPortfolooReport(frmDt, toDt, this.ngForm.controls['branch'].value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Product Wise Report Addition <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <form [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-product-wise-report-edition',\r\n  templateUrl: './product-wise-report-edition.component.html',\r\n  styleUrls: ['./product-wise-report-edition.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },]\r\n})\r\nexport class ProductWiseReportEditionComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private reportsService: ReportsService,\r\n    private transfersService: TransfersService, private toaster: ToastrService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == 'admin') {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printProductWiseAddition(frmDt, toDt, this.ngForm.get(\"branch\").value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Projected Clients Loan Completeion <i class=\\\"fa fa-print\\\"> </i>\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                      disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\"\\r\\n                      disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY'\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-projected-clients-loan-completion',\r\n  templateUrl: './projected-clients-loan-completion.component.html',\r\n  styleUrls: ['./projected-clients-loan-completion.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class ProjectedClientsLoanCompletionComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate:Date;\r\n  branchs:Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService,private reportsService:ReportsService,private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate=new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d=>\r\n        {this.branchs=d;}  \r\n        );\r\n\r\n    this.ngForm = this.fb.group({\r\n    frmDt: [new Date(), Validators.required],\r\n    toDt: [new Date(), Validators.required],\r\n    type:['',Validators.required],\r\n    branch:[''],\r\n   });}else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type:['',Validators.required],\r\n        branch:[{value: this.auth.emp_branch,disabled: false}, Validators.required],\r\n    });\r\n \r\n  }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printProjectedClientsLoanCompletetion(frmDt, toDt, this.ngForm.get(\"branch\").value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n  get f() { return this.ngForm.controls; }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Rate of Retention <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"scheduleForm\\\" (ngSubmit)=\\\"postedReport()\\\">\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <div class=\\\"cCol8\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!scheduleForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-rate-of-retention',\r\n  templateUrl: './rate-of-retention.component.html',\r\n  styleUrls: ['./rate-of-retention.component.css']\r\n})\r\nexport class RateOfRetentionComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  scheduleForm: FormGroup;\r\n  maxDate: Date;\r\n  constructor( private reportsService:ReportsService, private toaster: ToastrService,private fb: FormBuilder, private spinner: NgxSpinnerService) {\r\n    this.maxDate=new Date();\r\n    this.scheduleForm = this.fb.group({\r\n      clntId: [new Date(), Validators.required],\r\n    }); }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n\r\n  postedReport(){\r\n    this.spinner.show();\r\n    this.reportsService.printRateOfRetention(this.auth.emp_branch).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OverdueloansReportComponent } from './overdueloans-report/overdueloans-report.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ReportsLeftsideBarComponent } from './reports-leftside-bar/reports-leftside-bar.component';\r\nimport { MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatAutocompleteModule, MatRadioButton, MatExpansionModule, MatRadioModule } from '@angular/material';\r\nimport { PortfolioComponent } from './portfolio/portfolio.component';\r\nimport { FundStmntComponent } from './fund-stmnt/fund-stmnt.component';\r\nimport { ValidationReportComponent } from './validation-report/validation-report.component';\r\nimport { AccountLedgerComponent } from './account-ledger/account-ledger.component';\r\nimport { BookDetailsComponent } from './book-details/book-details.component';\r\nimport { DueRecoveryComponent } from './due-recovery/due-recovery.component';\r\nimport { WomenparticipationComponent } from './womenparticipation/womenparticipation.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PartyLedgerComponent } from './party-ledger/party-ledger.component';\r\nimport { ProjectedClientsLoanCompletionComponent } from './projected-clients-loan-completion/projected-clients-loan-completion.component';\r\nimport { BrnchTurnoverAnlysisComponent } from './brnch-turnover-anlysis/brnch-turnover-anlysis.component';\r\nimport { InsuranceClaimComponent } from './insurance-claim/insurance-claim.component';\r\nimport { PARBranchWiseComponent } from './par-branch-wise/par-branch-wise.component';\r\nimport { BranchPerformanceReviewComponent } from './branch-performance-review/branch-performance-review.component';\r\nimport { FiveDayAdvanceComponent } from './five-day-advance/five-day-advance.component';\r\nimport { TopSheetComponent } from './top-sheet/top-sheet.component';\r\nimport { RateOfRetentionComponent } from './rate-of-retention/rate-of-retention.component';\r\nimport { PdcDetailComponent } from './pdc-detail/pdc-detail.component';\r\nimport { ProductWiseReportEditionComponent } from './product-wise-report-edition/product-wise-report-edition.component';\r\nimport { AdcWiseBranchRecoveryComponent } from './adc-wise-branch-recovery/adc-wise-branch-recovery.component';\r\nimport { PortfolioConcentrationComponent } from './portfolio-concentration/portfolio-concentration.component';\r\nimport { PendingClientsComponent } from './pending-clients/pending-clients.component';\r\nimport { TagClientClaimComponent } from './tag-client-claim/tag-client-claim.component';\r\nimport { AgenciesTargetTrackingComponent } from './agencies-target-tracking/agencies-target-tracking.component';\r\nimport { TransferredClientsComponent } from './transferred-clients/transferred-clients.component';\r\nimport { AuthGuard } from './AuthGuard.service';\r\nimport { TurnAroundTimeComponent } from './turn-around-time/turn-around-time.component';\r\nimport { FemaleParticipationComponent } from './female-participation/female-participation.component';\r\nimport { SharedComponent } from './shared/shared.component';\r\nimport { PortfolioStatusComponent } from './operations/portfolio-status/portfolio-status.component';\r\nimport { ReversedEntriesComponent } from './reversed-entries/reversed-entries.component';\r\nimport { TrailBalanceComponent } from './trail-balance/trail-balance.component';\r\nimport { ParMdComponent } from './par-md/par-md.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { BmBdoRecoveryComponent } from './bm-bdo-recovery/bm-bdo-recovery.component';\r\nimport { ClientHealthBeneficiaryComponent } from './client-health-beneficiary/client-health-beneficiary.component';\r\nimport { ActiveClientsComponent } from './active-clients/active-clients.component';\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'landing', canActivate: [AuthGuard] }, // default route of the module\r\n  { path: 'landing', component: LandingComponent, canActivate: [AuthGuard]},\r\n  { path: 'overdue', component: OverdueloansReportComponent, canActivate: [AuthGuard] },\r\n  { path: 'portfolio', component: PortfolioComponent, canActivate: [AuthGuard] },\r\n  { path: 'fund-stmnt', component: FundStmntComponent, canActivate: [AuthGuard] },\r\n  { path: 'validation', component: ValidationReportComponent, canActivate: [AuthGuard] },\r\n  { path: 'accounts-ledger', component: AccountLedgerComponent, canActivate: [AuthGuard] },\r\n  { path: 'book-details', component: BookDetailsComponent, canActivate: [AuthGuard] },\r\n  { path: 'due-recovery', component: DueRecoveryComponent, canActivate: [AuthGuard] },\r\n  { path: 'women-participation', component: WomenparticipationComponent, canActivate: [AuthGuard] },\r\n  { path: 'party-ledger', component: PartyLedgerComponent, canActivate: [AuthGuard] },\r\n  { path: 'client-health-beneficiary', component: ClientHealthBeneficiaryComponent, canActivate: [AuthGuard] },\r\n  { path: 'brnch-turnover-anlysis', component: BrnchTurnoverAnlysisComponent, canActivate: [AuthGuard] },\r\n  { path: 'insurance-claim', component: InsuranceClaimComponent, canActivate: [AuthGuard] },\r\n  { path: 'par-branch-wise', component: PARBranchWiseComponent, canActivate: [AuthGuard] },\r\n  { path: 'branch-performance-review', component: BranchPerformanceReviewComponent, canActivate: [AuthGuard] },\r\n  { path: 'five-days-advance-recovery', component: FiveDayAdvanceComponent, canActivate: [AuthGuard] },\r\n  { path: 'top-sheet', component: TopSheetComponent, canActivate: [AuthGuard] },\r\n  { path: 'rate-of-retention', component: RateOfRetentionComponent, canActivate: [AuthGuard] },\r\n  { path: 'pdc-detail', component: PdcDetailComponent, canActivate: [AuthGuard] },\r\n  { path: 'product-wise-report-edition', component: ProductWiseReportEditionComponent, canActivate: [AuthGuard] },\r\n  { path: 'projected-clients-loan-completeion', component: ProjectedClientsLoanCompletionComponent, canActivate: [AuthGuard] },\r\n  { path: 'par-branch-wise-report', component: PARBranchWiseComponent, canActivate: [AuthGuard] },\r\n  { path: 'adc-wise-branch-recovery', component: AdcWiseBranchRecoveryComponent, canActivate: [AuthGuard] },\r\n  { path: 'portfolio-concentration', component: PortfolioConcentrationComponent, canActivate: [AuthGuard] },\r\n  { path: 'pending-clients', component: PendingClientsComponent, canActivate: [AuthGuard] },\r\n  { path: 'tagged-client-claim', component: TagClientClaimComponent, canActivate: [AuthGuard] },\r\n  { path: 'agencies-target-tracking', component: AgenciesTargetTrackingComponent, canActivate: [AuthGuard] },\r\n  { path: 'transferred-clients', component: TransferredClientsComponent, canActivate: [AuthGuard] },\r\n  { path: 'turn-around-time', component: TurnAroundTimeComponent, canActivate: [AuthGuard] },\r\n  { path: 'female-participation', component: FemaleParticipationComponent, canActivate: [AuthGuard] },\r\n  { path: 'reversed-enteries', component: ReversedEntriesComponent, canActivate: [AuthGuard] },\r\n  { path: 'trail-balance', component: TrailBalanceComponent, canActivate: [AuthGuard] },\r\n  { path: 'md-par', component: ParMdComponent, canActivate: [AuthGuard] },\r\n  { path: 'bm-bdo-recovery', component: BmBdoRecoveryComponent, canActivate: [AuthGuard] },\r\n  { path: 'active-clients', component: ActiveClientsComponent, canActivate: [AuthGuard] },\r\n\r\n  {\r\n    path: 'operations',\r\n    component: SharedComponent,\r\n    loadChildren: './operations/operations.module#OperationsModule'\r\n  },\r\n  {\r\n    path: 'finance',\r\n    component: SharedComponent,\r\n    loadChildren: './finance/finance.module#FinanceModule'\r\n  },\r\n  {\r\n    path: 'operational-reports',\r\n    component: SharedComponent,\r\n    loadChildren: './operational-reports/operational-reports.module#OperationalReportsModule'\r\n  },\r\n  {\r\n    path: 'rescheduling-reports',\r\n    component: SharedComponent,\r\n    loadChildren: './rescheduling-reports/rescheduling-reports.module#ReschedulingReportsModule'\r\n  },\r\n  {\r\n    path: 'compliance-repot',\r\n    component: SharedComponent,\r\n    loadChildren: './compliance-repot/compliance-repot.module#ComplianceRepotModule'\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, MatAutocompleteModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule, \r\n    SharedModule, \r\n    MatSelectModule, \r\n    MatDatepickerModule, \r\n    MatNativeDateModule,\r\n    NgSelectModule,\r\n    MatExpansionModule,\r\n    MatRadioModule\r\n  ],\r\n  declarations: [OverdueloansReportComponent, ReportsLeftsideBarComponent, PortfolioComponent, FundStmntComponent, ValidationReportComponent, AccountLedgerComponent, BookDetailsComponent, DueRecoveryComponent, WomenparticipationComponent, ClientHealthBeneficiaryComponent, PartyLedgerComponent, BrnchTurnoverAnlysisComponent, InsuranceClaimComponent, PARBranchWiseComponent, BranchPerformanceReviewComponent, FiveDayAdvanceComponent, ProjectedClientsLoanCompletionComponent, TopSheetComponent, PdcDetailComponent, RateOfRetentionComponent, PdcDetailComponent, ProductWiseReportEditionComponent, PARBranchWiseComponent, AdcWiseBranchRecoveryComponent, PortfolioConcentrationComponent, PendingClientsComponent, TagClientClaimComponent, AgenciesTargetTrackingComponent, TransferredClientsComponent, TurnAroundTimeComponent, FemaleParticipationComponent, SharedComponent, ReversedEntriesComponent, TrailBalanceComponent, ParMdComponent, LandingComponent, BmBdoRecoveryComponent, ActiveClientsComponent],\r\n  providers: [AuthGuard],\r\n})\r\nexport class ReportModule { }\r\n","module.exports = \"mat-expansion-panel{\\r\\n    margin: 5px;\\r\\n}\"","module.exports = \"<mat-accordion>\\r\\n\\r\\n        <!------------------------- Starting of Simple Reports------------------------------->\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                Branch MWX Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/overdue')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/overdue']\\\">{{getName(\\\"/overdue\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/portfolio')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/portfolio']\\\">{{getName(\\\"/portfolio\\\")}}</a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/fund-stmnt')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/fund-stmnt']\\\">{{getName(\\\"/fund-stmnt\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/validation')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/validation']\\\">{{getName(\\\"/validation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/accounts-ledger')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/accounts-ledger']\\\">{{getName(\\\"/accounts-ledger\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/book-details')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/book-details']\\\">{{getName(\\\"/book-details\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/due-recovery')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/due-recovery']\\\">{{getName(\\\"/due-recovery\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/client-health-beneficiary')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/client-health-beneficiary']\\\">{{getName(\\\"/client-health-beneficiary\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/brnch-turnover-anlysis')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/brnch-turnover-anlysis']\\\">{{getName(\\\"/brnch-turnover-anlysis\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/insurance-claim')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/insurance-claim']\\\">{{getName(\\\"/insurance-claim\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/par-branch-wise')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/par-branch-wise']\\\">{{getName(\\\"/par-branch-wise\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/five-days-advance-recovery')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/five-days-advance-recovery']\\\">{{getName(\\\"/five-days-advance-recovery\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/top-sheet')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/top-sheet']\\\">{{getName(\\\"/top-sheet\\\")}}</a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\"\\r\\n                                        *ngIf=\\\"hasSubMod('/projected-clients-loan-completeion')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/projected-clients-loan-completeion']\\\">{{getName(\\\"/projected-clients-loan-completeion\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/adc-wise-branch-recovery')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/adc-wise-branch-recovery']\\\">{{getName(\\\"/adc-wise-branch-recovery\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/pending-clients')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/pending-clients']\\\">{{getName(\\\"/pending-clients\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/tagged-client-claim')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/tagged-client-claim']\\\">{{getName(\\\"/tagged-client-claim\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/transferred-clients')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/transferred-clients']\\\">{{getName(\\\"/transferred-clients\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/reversed-enteries')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/reversed-enteries']\\\">{{getName(\\\"/reversed-enteries\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/trail-balance')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/trail-balance']\\\">{{getName(\\\"/trail-balance\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/md-par')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/md-par']\\\">Par MD</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!------------------------- Ending of Simple Reports------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n        <!------------------------- Starting of operationl Reports------------------------------->\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                AM / RM Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/advance-recovery-overall')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/advance-recovery-overall']\\\">{{getName(\\\"/advance-recovery-overall\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/pending-loan-utilization')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/pending-loan-utilization']\\\">{{getName(\\\"/pending-loan-utilization\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/late-closing')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/late-closing']\\\">{{getName(\\\"/late-closing\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/advance-client-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/advance-client-report']\\\">{{getName(\\\"/advance-client-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/advance-maturity-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/advance-maturity-report']\\\">{{getName(\\\"/advance-maturity-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/weekly-target-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/weekly-target-report']\\\">{{getName(\\\"/weekly-target-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/area-disbursement-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/area-disbursement-report']\\\">{{getName(\\\"/area-disbursement-report\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!------------------------- Ending of operational Reports------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <!------------------------- Starting of operations Reports------------------------------->\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                BDO / BM Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/dues-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/dues-report']\\\">{{getName(\\\"/dues-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/consolidated-loans')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/consolidated-loans']\\\">{{getName(\\\"/consolidated-loans\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-segmentation')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-segmentation']\\\">{{getName(\\\"/op-portfolio-segmentation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-at-risk')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-at-risk']\\\">{{getName(\\\"/op-portfolio-at-risk\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/app-risk-flagging')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/app-risk-flagging']\\\">{{getName(\\\"/app-risk-flagging\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/turn-around-time')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/turn-around-time']\\\">{{getName(\\\"/turn-around-time\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/female-participation')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/female-participation']\\\">{{getName(\\\"/female-participation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-status')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-status']\\\">{{getName(\\\"/op-portfolio-status\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/rate-of-renewal')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/rate-of-renewal']\\\">{{getName(\\\"/rate-of-renewal\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/monthly-status')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/monthly-status']\\\">{{getName(\\\"/monthly-status\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/loan-utlization')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/loan-utlization']\\\">{{getName(\\\"/loan-utlization\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\"\\r\\n                                        *ngIf=\\\"hasSubMod('/opp-portfolio-at-risk-time-series')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/opp-portfolio-at-risk-time-series']\\\">{{getName(\\\"/opp-portfolio-at-risk-time-series\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-female-participation-ratio')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-female-participation-ratio']\\\">{{getName(\\\"/op-female-participation-ratio\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/branch-target-managment')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/branch-target-managment']\\\">{{getName(\\\"/branch-target-managment\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/oop-portfolio-status-duration')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/oop-portfolio-status-duration']\\\">{{getName(\\\"/oop-portfolio-status-duration\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/attendance-monitoring')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/attendance-monitoring']\\\">{{getName(\\\"/attendance-monitoring\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/agencies-target-tracking')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/agencies-target-tracking']\\\">{{getName(\\\"/agencies-target-tracking\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/sales-2-pending')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/sales-2-pending']\\\">{{getName(\\\"/sales-2-pending\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/active-clients')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/active-clients']\\\">{{getName(\\\"/active-clients\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                                  <!-- Added By Naveed, Dated: 13/11/2020 -->\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/bm-bdo-recovery')\\\"><a\\r\\n                                        [routerLink]=\\\"['/reports/bm-bdo-recovery']\\\">BM BDO Recovery Report</a>\\r\\n                                </li>\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!------------------------- Ending of operations Reports------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <!------------------------- Starting of finance Reports------------------------------->\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                Finance Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/funds-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/funds-report']\\\">{{getName(\\\"/funds-report\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/recovery-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/recovery-report']\\\">{{getName(\\\"/recovery-report\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/disbursment-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/disbursment-report']\\\">{{getName(\\\"/disbursment-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/fund-managment-tool')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/fund-managment-tool']\\\">{{getName(\\\"/fund-managment-tool\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/organization-tagging-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/finance/organization-tagging-report']\\\">{{getName(\\\"/organization-tagging-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/product-wise-disbursement')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/finance/product-wise-disbursement']\\\">{{getName(\\\"/product-wise-disbursement\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/organization-time')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/finance/organization-time']\\\">{{getName(\\\"/organization-time\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!------------------------- Ending of finance Reports------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n        <!------------------------- Starting of RESCHEDULING Reports------------------------------->\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                Rescheduling Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/client-recovery-status')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/rescheduling-reports/client-recovery-status']\\\">{{getName(\\\"/client-recovery-status\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/due-vs-recovery')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/rescheduling-reports/due-vs-recovery']\\\">{{getName(\\\"/due-vs-recovery\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/managment-dashboard')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/rescheduling-reports/managment-dashboard']\\\">{{getName(\\\"/managment-dashboard\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/rescheduling-portfolio')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/rescheduling-reports/rescheduling-portfolio']\\\">{{getName(\\\"/rescheduling-portfolio\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\"\\r\\n                                        *ngIf=\\\"hasSubMod('/portfolio-quality-old-portfolio')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/rescheduling-reports/portfolio-quality-old-portfolio']\\\">{{getName(\\\"/portfolio-quality-old-portfolio\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                Compliance Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/aml-matches')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/compliance-repot/aml-matches']\\\">{{getName(\\\"/aml-matches\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/cnic-match')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/compliance-repot/cnic-match']\\\">{{getName(\\\"/cnic-match\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!------------------------- Ending of RESCHEDULING Reports------------------------------->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <!------------------ BRANCH MWX REPORTS  ---------------->\\r\\n\\r\\n\\r\\n        <!-- <mat-expansion-panel *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                Branch MWX Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/overdue')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/overdue']\\\">{{getName(\\\"/overdue\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/attendance-monitoring')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/attendance-monitoring']\\\">{{getName(\\\"/attendance-monitoring\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/portfolio')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/portfolio']\\\">{{getName(\\\"/portfolio\\\")}}</a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/fund-stmnt')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/fund-stmnt']\\\">{{getName(\\\"/fund-stmnt\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/validation')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/validation']\\\">{{getName(\\\"/validation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/accounts-ledger')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/accounts-ledger']\\\">{{getName(\\\"/accounts-ledger\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/book-details')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/book-details']\\\">{{getName(\\\"/book-details\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/due-recovery')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/due-recovery']\\\">{{getName(\\\"/due-recovery\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/client-health-beneficiary')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/client-health-beneficiary']\\\">{{getName(\\\"/client-health-beneficiary\\\")}}\\r\\n                                        </a></li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/brnch-turnover-anlysis')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/brnch-turnover-anlysis']\\\">{{getName(\\\"/brnch-turnover-anlysis\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/insurance-claim')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/insurance-claim']\\\">{{getName(\\\"/insurance-claim\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/par-branch-wise')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/par-branch-wise']\\\">{{getName(\\\"/par-branch-wise\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/five-days-advance-recovery')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/five-days-advance-recovery']\\\">{{getName(\\\"/five-days-advance-recovery\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/top-sheet')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/top-sheet']\\\">{{getName(\\\"/top-sheet\\\")}}</a></li>\\r\\n                               <li [routerLinkActive]=\\\"['active']\\\"\\r\\n                                        *ngIf=\\\"hasSubMod('/projected-clients-loan-completeion')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/projected-clients-loan-completeion']\\\">{{getName(\\\"/projected-clients-loan-completeion\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/adc-wise-branch-recovery')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/adc-wise-branch-recovery']\\\">{{getName(\\\"/adc-wise-branch-recovery\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/pending-clients')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/pending-clients']\\\">{{getName(\\\"/pending-clients\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/tagged-client-claim')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/tagged-client-claim']\\\">{{getName(\\\"/tagged-client-claim\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/transferred-clients')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/transferred-clients']\\\">{{getName(\\\"/transferred-clients\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/reversed-enteries')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/reversed-enteries']\\\">{{getName(\\\"/reversed-enteries\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/trail-balance')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/trail-balance']\\\">{{getName(\\\"/trail-balance\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/md-par')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/md-par']\\\">Par MD</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel> -->\\r\\n\\r\\n\\r\\n        <!------------------ AM / RM REPORTS  ---------------->\\r\\n\\r\\n\\r\\n        <!-- <mat-expansion-panel *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                AM / RM Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/advance-recovery-overall')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/advance-recovery-overall']\\\">{{getName(\\\"/advance-recovery-overall\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/pending-loan-utilization')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/pending-loan-utilization']\\\">{{getName(\\\"/pending-loan-utilization\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/late-closing')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/late-closing']\\\">{{getName(\\\"/late-closing\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/advance-client-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/advance-client-report']\\\">{{getName(\\\"/advance-client-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/advance-maturity-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/advance-maturity-report']\\\">{{getName(\\\"/advance-maturity-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/weekly-target-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/weekly-target-report']\\\">{{getName(\\\"/weekly-target-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/area-disbursement-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/area-disbursement-report']\\\">{{getName(\\\"/area-disbursement-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-segmentation')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-segmentation']\\\">{{getName(\\\"/op-portfolio-segmentation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-at-risk')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-at-risk']\\\">{{getName(\\\"/op-portfolio-at-risk\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-status')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-status']\\\">{{getName(\\\"/op-portfolio-status\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/rate-of-renewal')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/rate-of-renewal']\\\">{{getName(\\\"/rate-of-renewal\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/pending-loan-utilization')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operational-reports/pending-loan-utilization']\\\">{{getName(\\\"/pending-loan-utilization\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\"\\r\\n                                        *ngIf=\\\"hasSubMod('/opp-portfolio-at-risk-time-series')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/opp-portfolio-at-risk-time-series']\\\">{{getName(\\\"/opp-portfolio-at-risk-time-series\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-female-participation-ratio')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-female-participation-ratio']\\\">{{getName(\\\"/op-female-participation-ratio\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/oop-portfolio-status-duration')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/oop-portfolio-status-duration']\\\">{{getName(\\\"/oop-portfolio-status-duration\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel> -->\\r\\n\\r\\n\\r\\n        <!------------------ BRANCH MANAGER REPORTS  ---------------->\\r\\n\\r\\n        <!-- <mat-expansion-panel *ngIf=\\\"auth.role == 'bm' || auth.role == 'admin'\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                Branch Manager Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/dues-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/dues-report']\\\">{{getName(\\\"/dues-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/consolidated-loans')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/consolidated-loans']\\\">{{getName(\\\"/consolidated-loans\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-segmentation')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-segmentation']\\\">{{getName(\\\"/op-portfolio-segmentation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-at-risk')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-at-risk']\\\">{{getName(\\\"/op-portfolio-at-risk\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/app-risk-flagging')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/app-risk-flagging']\\\">{{getName(\\\"/app-risk-flagging\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/turn-around-time')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/turn-around-time']\\\">{{getName(\\\"/turn-around-time\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/female-participation')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/female-participation']\\\">{{getName(\\\"/female-participation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-status')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-status']\\\">{{getName(\\\"/op-portfolio-status\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/rate-of-renewal')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/rate-of-renewal']\\\">{{getName(\\\"/rate-of-renewal\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/monthly-status')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/monthly-status']\\\">{{getName(\\\"/monthly-status\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/loan-utlization')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/loan-utlization']\\\">{{getName(\\\"/loan-utlization\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\"\\r\\n                                        *ngIf=\\\"hasSubMod('/opp-portfolio-at-risk-time-series')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/opp-portfolio-at-risk-time-series']\\\">{{getName(\\\"/opp-portfolio-at-risk-time-series\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-female-participation-ratio')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-female-participation-ratio']\\\">{{getName(\\\"/op-female-participation-ratio\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/branch-target-managment')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/branch-target-managment']\\\">{{getName(\\\"/branch-target-managment\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/oop-portfolio-status-duration')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/oop-portfolio-status-duration']\\\">{{getName(\\\"/oop-portfolio-status-duration\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/attendance-monitoring')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/attendance-monitoring']\\\">{{getName(\\\"/attendance-monitoring\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/agencies-target-tracking')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/agencies-target-tracking']\\\">{{getName(\\\"/agencies-target-tracking\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/sales-2-pending')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/sales-2-pending']\\\">{{getName(\\\"/sales-2-pending\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel> -->\\r\\n\\r\\n        <!------------------ BDO     REPORTS  ---------------->\\r\\n\\r\\n\\r\\n        <!-- <mat-expansion-panel *ngIf=\\\"auth.role == 'bdo' || auth.role == 'admin'\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                BDO Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/dues-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/dues-report']\\\">{{getName(\\\"/dues-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/consolidated-loans')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/consolidated-loans']\\\">{{getName(\\\"/consolidated-loans\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-segmentation')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-segmentation']\\\">{{getName(\\\"/op-portfolio-segmentation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-at-risk')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-at-risk']\\\">{{getName(\\\"/op-portfolio-at-risk\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/turn-around-time')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/turn-around-time']\\\">{{getName(\\\"/turn-around-time\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/female-participation')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/female-participation']\\\">{{getName(\\\"/female-participation\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/op-portfolio-status')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/operations/op-portfolio-status']\\\">{{getName(\\\"/op-portfolio-status\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel> -->\\r\\n\\r\\n        <!------------------ FINANCE REPORTS  ---------------->\\r\\n\\r\\n\\r\\n        <!-- <mat-expansion-panel *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                                Finance Reports\\r\\n                        </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"leftmenu\\\">\\r\\n                        <ul class=\\\"leftmenu\\\">\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/funds-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/funds-report']\\\">{{getName(\\\"/funds-report\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/recovery-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/recovery-report']\\\">{{getName(\\\"/recovery-report\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/disbursment-report')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/disbursment-report']\\\">{{getName(\\\"/disbursment-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/fund-managment-tool')\\\"><a\\r\\n                                                [routerLink]=\\\"['/reports/finance/fund-managment-tool']\\\">{{getName(\\\"/fund-managment-tool\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/organization-tagging-report')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/finance/organization-tagging-report']\\\">{{getName(\\\"/organization-tagging-report\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/product-wise-disbursement')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/finance/product-wise-disbursement']\\\">{{getName(\\\"/product-wise-disbursement\\\")}}</a>\\r\\n                                </li>\\r\\n                                <li [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"hasSubMod('/organization-time')\\\">\\r\\n                                        <a\\r\\n                                                [routerLink]=\\\"['/reports/finance/organization-time']\\\">{{getName(\\\"/organization-time\\\")}}</a>\\r\\n                                </li>\\r\\n\\r\\n                        </ul>\\r\\n                </div>\\r\\n        </mat-expansion-panel> -->\\r\\n\\r\\n</mat-accordion>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reports-leftside-bar',\r\n  templateUrl: './reports-leftside-bar.component.html',\r\n  styleUrls: ['./reports-leftside-bar.component.css']\r\n})\r\nexport class ReportsLeftsideBarComponent implements OnInit {\r\n\r\n  constructor() {\r\n\r\n    $(document).ready(function () {\r\n      $('.acc_trigger').toggleClass('inactive-header');\r\n      $('.acc_trigger').click(function () {\r\n        if ($(this).next().is(':hidden')) {\r\n          $('.active-header').toggleClass('active-header').toggleClass('inactive-header').next().slideToggle().toggleClass('open-content');\r\n          $(this).toggleClass('active-header').toggleClass('inactive-header');\r\n          $(this).next().slideToggle().toggleClass('open-content');\r\n        } else {\r\n          $(this).toggleClass('active-header').toggleClass('inactive-header');\r\n          $(this).next().slideToggle().toggleClass('open-content');\r\n        }\r\n      });\r\n\r\n      return false;\r\n    });\r\n  }\r\n  auth;\r\n  subMods =[];\r\n  ngOnInit() {\r\n    this.auth = JSON.parse(sessionStorage.getItem(\"auth\"));\r\n    console.log(this.auth.modules);\r\n    this.auth.modules.forEach(screen => {\r\n      if (screen.modUrl.indexOf(\"reports\") >= 0) {\r\n        this.subMods = screen.subMods;\r\n      }\r\n    });\r\n    console.log(this.subMods)\r\n    \r\n  }\r\n  hasSubMod(url){\r\n    let v = false;\r\n    this.subMods.forEach(sub=>{\r\n      if(sub.subModUrl.indexOf(url) >= 0){\r\n        v = true;\r\n      }\r\n    });\r\n    return v;\r\n  }\r\n\r\n  getName(url){\r\n    let v = \"\";\r\n    this.subMods.forEach(sub=>{\r\n      if(sub.subModUrl.indexOf(url) >= 0){\r\n        v = sub.subModNm;\r\n      }\r\n    });\r\n    return v;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Reversed Enteries <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitReversedEnteries()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-reversed-entries',\r\n  templateUrl: './reversed-entries.component.html',\r\n  styleUrls: ['./reversed-entries.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class ReversedEntriesComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n\r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    }\r\n  }\r\n  branchs;\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  onSubmitReversedEnteries() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printReversedEnteriesReprt(frmDt, toDt, this.ngForm.get('branch').value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shared',\r\n  templateUrl: './shared.component.html',\r\n  styleUrls: ['./shared.component.css']\r\n})\r\nexport class SharedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Tagged Overdue Clients Detail Report <i class=\\\"fa fa-print\\\"> </i>\\r\\n                </h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"overdueReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol4\\\">\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Product Name\\\" formControlName=\\\"prd\\\">\\r\\n                      <mat-option *ngFor=\\\"let product of allItems\\\" [value]=\\\"product.prdGrpSeq\\\">{{product.prdGrpNm}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"asDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"As Of Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ProductGroup } from 'src/app/shared/models/productGroup.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-tag-client-claim',\r\n  templateUrl: './tag-client-claim.component.html',\r\n  styleUrls: ['./tag-client-claim.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },]\r\n})\r\nexport class TagClientClaimComponent implements OnInit {\r\n\r\n \r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  brnchPrds: any;\r\n  allItems: ProductGroup[] = [];\r\n  constructor(private productService: ProductService, private toaster: ToastrService, private fb: FormBuilder, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    if (this.auth.role == 'admin') {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n      this.ngForm = this.fb.group({\r\n        prd: ['', Validators.required],\r\n      asDt: ['', Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        prd: ['', Validators.required],\r\n      asDt: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.maxDate=new Date();\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems = data;\r\n    });\r\n\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n  overdueReport() {\r\n    this.spinner.show();\r\n    let asDt = new DatePipe('en-US').transform(this.ngForm.get('asDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printTaggedClientClaim(this.ngForm.get('prd').value,this.ngForm.get('branch').value,asDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Top Sheet <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol3\\\">\\r\\n                  <!-- <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly /> -->\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Type\\\" formControlName=\\\"flg\\\">\\r\\n                      <mat-option [value]=\\\"0\\\">\\r\\n                        Top Sheet\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"1\\\">\\r\\n                        Tag Top Sheet\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Product Name\\\" formControlName=\\\"prd\\\">\\r\\n                      <mat-option *ngFor=\\\"let product of allItems\\\" [value]=\\\"product.prdGrpSeq\\\">{{product.prdGrpNm}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { _getComponentHostLElementNode } from '@angular/core/src/render3/instructions';\r\nimport { ProductGroup } from '../../../shared/models/productGroup.model';\r\nimport * as _moment from 'moment';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-top-sheet',\r\n  templateUrl: './top-sheet.component.html',\r\n  styleUrls: ['./top-sheet.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class TopSheetComponent implements OnInit {\r\n\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  allItems: ProductGroup[] = [];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private reportsService: ReportsService,\r\n    private transfersService: TransfersService,\r\n    private productService: ProductService, private toaster: ToastrService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n\r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        flg: ['', Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        prd: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        flg: ['', Validators.required],\r\n        prd: ['', Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    }\r\n\r\n\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printTopSheet(frmDt, toDt, this.ngForm.get(\"branch\").value, this.ngForm.get('prd').value, this.ngForm.get('flg').value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Trail Balance <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitTrailBalance()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role == 'bdo' || auth.role == 'bm'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\"\\r\\n                    readonly />\\r\\n\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-trail-balance',\r\n  templateUrl: './trail-balance.component.html',\r\n  styleUrls: ['./trail-balance.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class TrailBalanceComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    \r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    }\r\n\r\n  }\r\n  branchs;\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  onSubmitTrailBalance() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printTrailBalanceReport(frmDt, toDt, this.ngForm.get('branch').value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Transferred Clients <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol4\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker1\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport * as _moment from 'moment';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-transferred-clients',\r\n  templateUrl: './transferred-clients.component.html',\r\n  styleUrls: ['./transferred-clients.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class TransferredClientsComponent implements OnInit {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService, private recoveryService: RecoveryService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [''],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        type: ['', Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printTransferredClients(frmDt,toDt).subscribe((response)=>{\r\n      this.spinner.hide();\r\n    var binaryData = [];\r\n    binaryData.push(response);\r\n    var fileURL= window.URL.createObjectURL(new Blob(binaryData, {type: \"application/pdf\"}));\r\n    window.open(fileURL,'_blank');\r\n  }, (error) => {\r\n    this.spinner.hide();\r\n    if (error.status == 500) {\r\n      this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n    } else if (error) {\r\n      this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n    }\r\n  });\r\n}\r\n  get f() { return this.ngForm.controls; }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Turn Around Time <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <!--------------- REGIONS DROPDOWN---------->\\r\\n\\r\\n                  <div *ngIf=\\\"disabledRegion\\\">\\r\\n                    <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm' && auth.role !='am' && auth.role != 'rm'\\\"\\r\\n                      (change)=\\\"getArea($event)\\\" [items]=\\\"allRegions\\\" bindLabel=\\\"regNm\\\" bindValue=\\\"regSeq\\\" name=\\\"regNm\\\"\\r\\n                      placeholder=\\\"Select Region:\\\" formControlName=\\\"regSeq\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <!--------------- AREA DROPDOWN---------->\\r\\n\\r\\n                  <div *ngIf=\\\"disabledArea\\\">\\r\\n                    <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm' && auth.role !='am'\\\"\\r\\n                      (change)=\\\"getBranch($event)\\\" [items]=\\\"allAreas\\\" bindLabel=\\\"areaNm\\\" bindValue=\\\"areaSeq\\\"\\r\\n                      name=\\\"areaNm\\\" placeholder=\\\"Select Area:\\\" formControlName=\\\"areaSeq\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n\\r\\n                  <!--------------- BRANCH DROPDOWN---------->\\r\\n\\r\\n                  <div *ngIf=\\\"disabledBranch\\\">\\r\\n                    <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"allBranches\\\" bindLabel=\\\"brnchNm\\\"\\r\\n                      bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\" formControlName=\\\"brnchSeq\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n\\r\\n                  <div class=\\\"cCol3\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"frmDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"From Date:\\\"\\r\\n                        [matDatepicker]=\\\"picker1\\\"  readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"To Date:\\\"\\r\\n                        [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ProductGroup } from 'src/app/shared/models/productGroup.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as _moment from 'moment';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Region } from 'src/app/shared/models/region.model';\r\nimport { DataService } from 'src/app/shared/services/data.service';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-turn-around-time',\r\n  templateUrl: './turn-around-time.component.html',\r\n  styleUrls: ['./turn-around-time.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class TurnAroundTimeComponent implements OnInit {\r\n\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  rpt_flg: any;\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  allItems: ProductGroup[] = [];\r\n  allRegions: Region[];\r\n  allAreas: Object;\r\n  allBranches: Object;\r\n  disabledRegion: boolean = false;\r\n  disabledArea: boolean = false;\r\n  disabledBranch: boolean = false;\r\n  constructor(private fb: FormBuilder,\r\n    private reportsService: ReportsService,\r\n    private transfersService: TransfersService,\r\n    private productService: ProductService, private toaster: ToastrService, private dataService: DataService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        brnchSeq: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: [new Date(), Validators.required],\r\n        toDt: [new Date(), Validators.required],\r\n        brnchSeq: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.auth.role == \"admin\") {\r\n\r\n      this.disabledRegion = true;\r\n      this.disabledArea = false;\r\n      this.disabledBranch = false;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: ['', Validators.required],\r\n        areaSeq: [''],\r\n        brnchSeq: [''],\r\n      });\r\n    } else if (this.auth.role == \"rm\") {\r\n\r\n      this.disabledRegion = false;\r\n      this.disabledArea = true;\r\n      this.disabledBranch = true;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: [this.auth.emp_reg],\r\n        areaSeq: [''],\r\n        brnchSeq: [''],\r\n      });\r\n      this.getArea();\r\n    } else if (this.auth.role == \"am\") {\r\n\r\n      this.disabledRegion = false;\r\n      this.disabledArea = false;\r\n      this.disabledBranch = true;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: [0],\r\n        areaSeq: [this.auth.emp_area],\r\n        brnchSeq: [''],\r\n      });\r\n      this.getBranch();\r\n\r\n    } else if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n\r\n      this.disabledRegion = false;\r\n      this.disabledArea = false;\r\n      this.disabledBranch = false;\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: [0],\r\n        areaSeq: [0],\r\n        brnchSeq: [this.auth.emp_branch],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => {\r\n        this.branchs = d;\r\n      });\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new FormControl(moment()), Validators.required],\r\n        frmDt: [new FormControl(moment()), Validators.required],\r\n        regSeq: ['', Validators.required],\r\n        areaSeq: [''],\r\n        brnchSeq: [''],\r\n      });\r\n    }\r\n\r\n    this.transfersService.getRegions().subscribe(data => {\r\n      this.allRegions = data;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  returnFlag() {\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.rpt_flg = 1;\r\n    } else if (this.auth.role == \"am\") {\r\n      this.rpt_flg = 2;\r\n    } else if (this.auth.role == \"rm\") {\r\n      this.rpt_flg = 3;\r\n    }\r\n    return this.rpt_flg;\r\n  }\r\n  returnFlagForAdmin() {\r\n    if (this.auth.role == \"admin\" && this.ngForm.controls['regSeq'].value !== 0 && this.ngForm.controls['areaSeq'].value !== 0 && this.ngForm.controls['brnchSeq'].value !== 0) {\r\n      this.rpt_flg = 1;\r\n    } else if (this.auth.role == \"admin\" && this.ngForm.controls['regSeq'].value !== 0 && this.ngForm.controls['areaSeq'].value !== 0 &&\r\n      this.ngForm.controls['brnchSeq'].value == 0) {\r\n      this.rpt_flg = 2;\r\n    } else if (this.auth.role == \"admin\" && this.ngForm.controls['regSeq'].value !== 0 && this.ngForm.controls['areaSeq'].value == 0 && this.ngForm.controls['brnchSeq'].value == 0) {\r\n      this.rpt_flg = 3;\r\n    }\r\n    return this.rpt_flg;\r\n  }\r\n  getArea() {\r\n    this.allAreas = [];\r\n    this.disabledArea = false;\r\n    this.disabledBranch = false;\r\n    this.dataService.getArea(this.ngForm.controls[\"regSeq\"].value).subscribe(d => {\r\n      this.allAreas = d;\r\n      this.disabledArea = true;\r\n    });\r\n  }\r\n\r\n  getBranch() {\r\n    this.allBranches = [];\r\n    this.disabledBranch = false;\r\n    this.dataService.getBranch(this.ngForm.controls[\"areaSeq\"].value).subscribe(d => {\r\n      this.allBranches = d;\r\n      this.disabledBranch = true;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  printReport() {\r\n    this.spinner.show();\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\" || this.auth.role == \"rm\" || this.auth.role == \"am\") {\r\n      this.returnFlag();\r\n    } else {\r\n      this.returnFlagForAdmin();\r\n    }\r\n    this.spinner.show();\r\n    let regSeq = this.ngForm.get('regSeq').value ? this.ngForm.get('regSeq').value : 0;\r\n    let areaSeq = this.ngForm.get('areaSeq').value ? this.ngForm.get('areaSeq').value : 0;\r\n    let brnchSeq = this.ngForm.get('brnchSeq').value ? this.ngForm.get('brnchSeq').value : 0;\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.reportsService.printTurnAroundTime(frmDt, toDt, this.rpt_flg, areaSeq, regSeq, brnchSeq).subscribe((response) => {\r\n      this.spinner.show();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Validation Report <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form [formGroup]=\\\"scheduleForm\\\" (ngSubmit)=\\\"postedReport()\\\">\\r\\n              <div class=\\\"cRow\\\">\\r\\n                <div class=\\\"cCol12\\\">\\r\\n\\r\\n                  <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n                  <!-- <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n\\r\\n                  <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required\\r\\n                    bindLabel=\\\"brnchNm\\\" bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\"\\r\\n                    formControlName=\\\"branch\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input matInput required formControlName=\\\"frstInstDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"Reported Date:\\\"\\r\\n                      [matDatepicker]=\\\"picker3\\\" disabled readonly />\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker required #picker3 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    <mat-error *ngIf=\\\"!scheduleForm.get('frstInstDt').valid\\\">\\r\\n                      First Installment Date is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer text-center\\\">\\r\\n                <button [disabled]=\\\"!scheduleForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport * as _moment from 'moment';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-validation-report',\r\n  templateUrl: './validation-report.component.html',\r\n  styleUrls: ['./validation-report.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class ValidationReportComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  scheduleForm: FormGroup;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n  constructor(private reportsService: ReportsService, private toaster: ToastrService, private transfersService: TransfersService, private fb: FormBuilder, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n\r\n    if (this.auth.role == \"bm\" || this.auth.role == \"bdo\") {\r\n      this.scheduleForm = this.fb.group({\r\n        frstInstDt: [new Date(), Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required],\r\n      });\r\n    } else {\r\n      this.transfersService.getBranches().subscribe(d => {\r\n        this.branchs = d;\r\n      });\r\n      this.scheduleForm = this.fb.group({\r\n        frstInstDt: [new Date(), Validators.required],\r\n        branch: [''],\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  postedReport() {\r\n    this.spinner.show();\r\n    const d = new DatePipe('en-US').transform(this.scheduleForm.get('frstInstDt').value, 'MM-dd-yyyy')\r\n    let a = this.scheduleForm.controls['branch'].value;\r\n    this.reportsService.getPostedReport(d, a).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-reports-leftside-bar></app-reports-leftside-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"content mb-md-5\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"mysearchbox\\\">\\r\\n                <h6 class=\\\"d-inline-block searchshow\\\">Women Participation <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n                <div class=\\\"mysearch\\\">\\r\\n                  <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n                  <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n                    title=\\\"Type in a name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"printReport()\\\">\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"cRow\\\">\\r\\n                  <div class=\\\"cCol6\\\">\\r\\n                    <input *ngIf=\\\"auth.role != 'admin'\\\" type=\\\"hidden\\\" formControlName=\\\"branch\\\" readonly />\\r\\n\\r\\n\\r\\n                    <mat-form-field *ngIf=\\\"auth.role == 'admin'\\\">\\r\\n                      <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                        <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                          {{b.brnchNm}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput required formControlName=\\\"toDt\\\" [max]=\\\"maxDate\\\" placeholder=\\\"Date:\\\"\\r\\n                        [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport * as _moment from 'moment';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { Auth } from 'src/app/shared/models/Auth.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { ReportsService } from 'src/app/shared/services/reports.service';\r\nimport { RecoveryService } from 'src/app/shared/services/recovery.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment ;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY'\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-womenparticipation',\r\n  templateUrl: './womenparticipation.component.html',\r\n  styleUrls: ['./womenparticipation.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class WomenparticipationComponent implements OnInit {\r\n\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  ngForm: FormGroup;\r\n  tempInstituteArray: any[] = [];\r\n  maxDate: Date;\r\n  branchs:Branch[];\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private reportsService: ReportsService, private recoveryService: RecoveryService,private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d=>\r\n        {this.branchs=d;}  \r\n        );\r\n\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new Date(), Validators.required],\r\n        branch: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        toDt: [new Date(), Validators.required],\r\n        branch: [{value: this.auth.emp_branch,disabled: false}, Validators.required,],\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  printReport() {\r\n    this.spinner.show();\r\n    let branch=this.ngForm.get('branch').value;\r\n    let date=new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'yyyy-MM-dd');\r\n    this.reportsService.printWomenParticipation(date,branch).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() { return this.ngForm.controls; }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}