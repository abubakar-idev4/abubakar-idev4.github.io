{"version":3,"sources":["webpack:///./src/app/shared/services/common.service.ts"],"names":[],"mappings":"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","file":"compliance-repot-compliance-repot-module~loan-app-loan-app-module~organization-organization-module~p~1d619dcb.js","sourcesContent":["import { ApiModel } from '../models/Api.model';\r\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { lov } from '../models/lov.model';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { Community } from '../models/community.model';\r\nimport { NgxSpinnerService } from '../../../../node_modules/ngx-spinner';\r\nimport { formatDate } from '@angular/common';\r\nimport { PaymentSchedule } from '../models/paymentSchedule.model';\r\nimport { Auth } from '../models/Auth.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n    auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n    apiModel: ApiModel = new ApiModel();\r\n    token: string;\r\n\r\n    constructor(public http: HttpClient,\r\n        private router: Router\r\n        , private spinner: NgxSpinnerService,\r\n        @Inject(LOCALE_ID) private locale: string) {\r\n        this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n    }\r\n\r\n    getValues(groupName: string): Observable<lov[]> {\r\n        return this.http.get<lov[]>(this.apiModel.host + '/setupservice/api/ref-cd-vals-by-group-key/' + groupName, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: lov[]) => console.log(p)),\r\n                catchError(this.handleError<lov[]>('Get Group Vlaues : ' + groupName))\r\n            );\r\n    }\r\n    getValuesByRefCdGRp(refCdGrp: string): Observable<lov[]> {\r\n        return this.http.get<lov[]>(this.apiModel.host + '/setupservice/api/ref-cd-val-by-ref-cd-grp/' + refCdGrp, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: lov[]) => console.log(p)),\r\n                catchError(this.handleError<lov[]>('Get Group Vlaues : ' + refCdGrp))\r\n            );\r\n    }\r\n    getSectors(prdSeq: string): Observable<any[]> {\r\n        return this.http.get<any[]>(this.apiModel.host + '/setupservice/api/mw-biz-sect-prd/' + prdSeq, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: lov[]) => console.log(p)),\r\n                catchError(this.handleError<any[]>('Get Group Vlaues : ' + prdSeq))\r\n            );\r\n    }\r\n\r\n    getActivity(sectSeq: string): Observable<any[]> {\r\n        return this.http.get<any[]>(this.apiModel.host + '/setupservice/api/mw-biz-acty-sect/' + sectSeq, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: lov[]) => console.log(p)),\r\n                catchError(this.handleError<any[]>('Get Group Vlaues : ' + sectSeq))\r\n            );\r\n    }\r\n\r\n    getValuesByGroupName(name) {\r\n        return this.http.get<any[]>\r\n            (this.apiModel.host + '/setupservice/api/vals-by-group-name?groupName=' + name, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n                tap((data: any) => console.log(data)),\r\n                catchError(this.handleError('getValuesByGroupName')));\r\n    }\r\n\r\n    getGlAccounts(): Observable<any> {\r\n        return this.http.get<any>\r\n            (this.apiModel.host + '/setupservice/api/gl-accounts', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n                tap((data: any) => console.log(data)),\r\n                catchError(this.handleError('getGlAccounts')));\r\n    }\r\n    getCommunity(): Observable<Community[]> {\r\n        return this.http.get<Community[]>(this.apiModel.host + '/setupservice/api/get-employee-cmnties', { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: Community[]) => console.log(p)),\r\n                catchError(this.handleError<Community[]>('Get Community'))\r\n            );\r\n    }\r\n\r\n    getCommunityForPort(seq): Observable<Community[]> {\r\n        return this.http.get<Community[]>(this.apiModel.host + '/setupservice/api/get-cmnties-by-portfolio/' + seq, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: Community[]) => console.log(p)),\r\n                catchError(this.handleError<Community[]>('Get Community'))\r\n            );\r\n    }\r\n\r\n    getAllFilters(): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/setupservice/api/get-filters/6', { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => console.log(p))\r\n            );\r\n    }\r\n\r\n    getOrganizationforUser(user): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/setupservice/api/mw-ports-for-user/' + user, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => console.log(p))\r\n            );\r\n    }\r\n\r\n    applyFilter(path: string, id): Observable<any> {\r\n        this.spinner.show();\r\n        return this.http.get<any>(this.apiModel.host + '/loanservice/api/get-clients-listing-with-filters/' + path + '/' + id, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); this.spinner.hide(); })\r\n            );\r\n    }\r\n\r\n    getAssociateProductsForProduct(obj): Observable<any> {\r\n        return this.http.post<any>(this.apiModel.host + '/setupservice/api/get-asoc-prds-for-client', obj, { headers: this.apiModel.httpHeaderPost })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    getRecoveryStatus(seq): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/recoverydisbursementservice/api/upcomeing-due-installment/' + seq, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n    getAllAttendanceForToday(obj): Observable<any> {\r\n        return this.http.post<any>(this.apiModel.host + '/adminservice/api/get-attendance-for-date', obj, { headers: this.apiModel.httpHeaderPost })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    getStatusListing(): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/adminservice/api/attendance-status-list', { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    generateAttendanceForToday(obj): Observable<any> {\r\n        return this.http.post<any>(this.apiModel.host + '/adminservice/api/insert-attendance-for-date', obj, { headers: this.apiModel.httpHeaderPost })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    updateAttendanceForEmployee(obj): Observable<any> {\r\n        return this.http.post<any>(this.apiModel.host + '/adminservice/api/update-employee-attendance', obj, { headers: this.apiModel.httpHeaderPost })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n    getLeaveSummary(obj): Observable<any> {\r\n        return this.http.post<any>(this.apiModel.host + '/adminservice/api/get-employee-leave-request', obj, { headers: this.apiModel.httpHeaderPost })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    // Added by Zohaib Asim - Dated 11/11/2020\r\n    // reverse Leave Request\r\n    reverseLeaveRequest(employeeId, appDate): Observable<any> {\r\n        return this.http.delete<any>(this.apiModel.host + '/adminservice/api/reverse-employee-leave-request/' + employeeId + '/' + appDate, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n    // Added by Zohaib Asim - Dated 5/11/2020\r\n    // Will fetch the details of Leave Balance by Employee and Leave ID\r\n    getLeaveBalanceByEmployeeLeaveId(empId: string, leaveId: number): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/adminservice/api/get-employee-leave-balance/' + empId + '/' + leaveId, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    // Will fetch the details of Leave Balance by Employee, Leave ID and Attendance Date\r\n    getLeaveBalanceByEmployeeLeaveIdAndAttDate(empId: string, leaveId: number, attendanceDate: string): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/adminservice/api/get-employee-leave-balance/' + empId + '/' + leaveId + '/' + attendanceDate, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    // Get Attendance details\r\n    getAttendanceDetails(employeeId: string, appDate: string): Observable<any>{\r\n        return this.http.get<any>(this.apiModel.host + '/adminservice/api/get-attendance-details/' + employeeId + '/' + appDate, { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n    // End by Zohaib\r\n\r\n    saveLeaveSummary(obj): Observable<any> {\r\n        return this.http.post<any>(this.apiModel.host + '/adminservice/api/save-employee-leave-request', obj, { headers: this.apiModel.httpHeaderPost })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    postAllPostFlg(date): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/adminservice/api/post-attendance-for-date-get/' + this.auth.emp_branch + '/' + date, { headers: this.apiModel.httpHeaderPost })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    getBrnchsForUsr(): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/setupservice/api/mw-brnches-by-user', { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n\r\n    // Added by Zohaib Asim - Dated 16-12-2020\r\n    // Health Claim Types\r\n    getHlthClmTypes(): Observable<any> {\r\n        return this.http.get<any>(this.apiModel.host + '/setupservice/api/hlth-clm-types', { headers: this.apiModel.httpHeaderGet })\r\n            .pipe(tap((p: any) => { console.log(p); })\r\n            );\r\n    }\r\n    // End by Zohaib Asim \r\n\r\n    public handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n    formatDate(date) {\r\n        if (date === '') {\r\n            return;\r\n        }\r\n        console.log(date);\r\n        return formatDate(date, 'dd/MM/yyyy', this.locale);\r\n    }\r\n    formatDateCustom(date, formate) {\r\n        if (date === '') {\r\n            return;\r\n        }\r\n        console.log(date);\r\n        return formatDate(date, formate, this.locale);\r\n    }\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\r\n        // calculate total pages\r\n        const totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > totalPages) {\r\n            currentPage = totalPages;\r\n        }\r\n\r\n        let startPage: number, endPage: number;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        const startIndex = (currentPage - 1) * pageSize;\r\n        const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        const pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}