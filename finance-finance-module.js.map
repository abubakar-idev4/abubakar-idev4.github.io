{"version":3,"sources":["webpack:///./src/app/pages/report/finance/disbursment-report/disbursment-report.component.css","webpack:///./src/app/pages/report/finance/disbursment-report/disbursment-report.component.html","webpack:///./src/app/pages/report/finance/disbursment-report/disbursment-report.component.ts","webpack:///./src/app/pages/report/finance/finance.module.ts","webpack:///./src/app/pages/report/finance/fund-managment-tool/fund-managment-tool.component.css","webpack:///./src/app/pages/report/finance/fund-managment-tool/fund-managment-tool.component.html","webpack:///./src/app/pages/report/finance/fund-managment-tool/fund-managment-tool.component.ts","webpack:///./src/app/pages/report/finance/funds-report/funds-report.component.css","webpack:///./src/app/pages/report/finance/funds-report/funds-report.component.html","webpack:///./src/app/pages/report/finance/funds-report/funds-report.component.ts","webpack:///./src/app/pages/report/finance/organization-tagging-report/organization-tagging-report.component.css","webpack:///./src/app/pages/report/finance/organization-tagging-report/organization-tagging-report.component.html","webpack:///./src/app/pages/report/finance/organization-tagging-report/organization-tagging-report.component.ts","webpack:///./src/app/pages/report/finance/organization-time/organization-time.component.css","webpack:///./src/app/pages/report/finance/organization-time/organization-time.component.html","webpack:///./src/app/pages/report/finance/organization-time/organization-time.component.ts","webpack:///./src/app/pages/report/finance/product-wise-disbursement/product-wise-disbursement.component.css","webpack:///./src/app/pages/report/finance/product-wise-disbursement/product-wise-disbursement.component.html","webpack:///./src/app/pages/report/finance/product-wise-disbursement/product-wise-disbursement.component.ts","webpack:///./src/app/pages/report/finance/recovery-report/recovery-report.component.css","webpack:///./src/app/pages/report/finance/recovery-report/recovery-report.component.html","webpack:///./src/app/pages/report/finance/recovery-report/recovery-report.component.ts","webpack:///./src/app/shared/services/finance.service.ts","webpack:///./src/app/shared/services/transfers.service.ts"],"names":[],"mappings":"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","file":"finance-finance-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"col-md-9\\\">\\r\\n  <div class=\\\"content mb-md-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"mysearchbox\\\">\\r\\n          <h6 class=\\\"d-inline-block searchshow\\\">Disbursement Report <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n          <div class=\\\"mysearch\\\">\\r\\n            <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n              title=\\\"Type in a name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"disbursementReport()\\\">\\r\\n        <div class=\\\"cRow\\\">\\r\\n          <div class=\\\"cCol6\\\">\\r\\n\\r\\n            <!-- <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Branch\\\" formControlName=\\\"branch\\\">\\r\\n                  <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                    {{b.brnchNm}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n\\r\\n            <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required bindLabel=\\\"brnchNm\\\"\\r\\n              bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\" formControlName=\\\"branch\\\">\\r\\n            </ng-select>\\r\\n\\r\\n            <mat-form-field>\\r\\n              <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                disabled readonly />\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\"\\r\\n                placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-radio-group formControlName=\\\"isXls\\\">\\r\\n              <mat-radio-button value=\\\"1\\\">Excel </mat-radio-button>\\r\\n              <mat-radio-button class=\\\"ml-3\\\" checked value=\\\"0\\\">PDF </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FinanceService } from 'src/app/shared/services/finance.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-disbursment-report',\r\n  templateUrl: './disbursment-report.component.html',\r\n  styleUrls: ['./disbursment-report.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class DisbursmentReportComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  auth = JSON.parse(sessionStorage.getItem(\"auth\"));\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private financeService: FinanceService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        branch: ['', Validators.required],\r\n        frmDt: ['', Validators.required],\r\n        toDt: ['', Validators.required],\r\n        isXls: [0, Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: ['', Validators.required],\r\n        toDt: ['', Validators.required],\r\n        isXls: [0, Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n    // this.ngForm = this.fb.group({\r\n    //   branch: ['', Validators.required],\r\n    //   frmDt: ['', Validators.required],\r\n    //   toDt: ['', Validators.required],\r\n    //   isXls:[0, Validators.required],\r\n    // });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  disbursementReport() {\r\n    this.spinner.show();\r\n    console.log(this.ngForm.controls['branch'].value);\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    let isXls: boolean = this.ngForm.get('isXls').value;\r\n    console.log(isXls);\r\n    this.financeService.printDisbursementReport(frmDt, toDt, this.ngForm.controls['branch'].value, isXls).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      let fileURL = \"\"\r\n      if (isXls == true) {\r\n        console.log(\"ex\");\r\n        fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/vnd.ms-excel\" }));\r\n      }\r\n      else {\r\n        console.log(\"pdf\");\r\n        fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      }\r\n\r\n      console.log(fileURL);\r\n\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FundsReportComponent } from './funds-report/funds-report.component';\r\nimport { RecoveryReportComponent } from './recovery-report/recovery-report.component';\r\nimport { DisbursmentReportComponent } from './disbursment-report/disbursment-report.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatInputModule, MatAutocompleteModule, MatRadioModule } from '@angular/material';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FundManagmentToolComponent } from './fund-managment-tool/fund-managment-tool.component';\r\nimport { OrganizationTaggingReportComponent } from './organization-tagging-report/organization-tagging-report.component';\r\nimport { ProductWiseDisbursementComponent } from './product-wise-disbursement/product-wise-disbursement.component';\r\nimport { OrganizationTimeComponent } from './organization-time/organization-time.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: 'funds-report', component: FundsReportComponent },\r\n  { path: 'recovery-report', component: RecoveryReportComponent },\r\n  { path: 'disbursment-report', component: DisbursmentReportComponent },\r\n  { path: 'fund-managment-tool', component: FundManagmentToolComponent },\r\n  { path: 'organization-tagging-report', component: OrganizationTaggingReportComponent },\r\n  { path: 'product-wise-disbursement', component: ProductWiseDisbursementComponent },\r\n  { path: 'organization-time', component: OrganizationTimeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule, MatSelectModule, MatDatepickerModule, MatNativeDateModule,MatRadioModule,\r\n    NgSelectModule, MatAutocompleteModule, MatInputModule,\r\n  ],\r\n  declarations: [FundsReportComponent, RecoveryReportComponent, DisbursmentReportComponent, FundManagmentToolComponent, OrganizationTaggingReportComponent, ProductWiseDisbursementComponent, OrganizationTimeComponent]\r\n})\r\nexport class FinanceModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-9\\\">\\r\\n  <div class=\\\"content mb-md-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"mysearchbox\\\">\\r\\n          <h6 class=\\\"d-inline-block searchshow\\\">E & P Remittance Ratio <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n          <div class=\\\"mysearch\\\">\\r\\n            <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n              title=\\\"Type in a name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"fundManagmentTool()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n              <!-- <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                  <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                    {{b.brnchNm}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                  disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\"\\r\\n                  placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FinanceService } from 'src/app/shared/services/finance.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-fund-managment-tool',\r\n  templateUrl: './fund-managment-tool.component.html',\r\n  styleUrls: ['./fund-managment-tool.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class FundManagmentToolComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private financeService: FinanceService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      // branch: ['', Validators.required],\r\n      frmDt: ['', Validators.required],\r\n      toDt: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  fundManagmentTool() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.financeService.printFundManagmentTool(frmDt, toDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-9\\\">\\r\\n  <div class=\\\"content mb-md-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"mysearchbox\\\">\\r\\n          <h6 class=\\\"d-inline-block searchshow\\\">Funds Report <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n          <div class=\\\"mysearch\\\">\\r\\n            <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n              title=\\\"Type in a name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"fundsReport()\\\">\\r\\n        <div class=\\\"cRow\\\">\\r\\n          <div class=\\\"cCol6\\\">\\r\\n\\r\\n            <!-- <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                  <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                    {{b.brnchNm}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n            <ng-select *ngIf=\\\"auth.role != 'bdo' && auth.role != 'bm'\\\" [items]=\\\"branchs\\\" required bindLabel=\\\"brnchNm\\\"\\r\\n              bindValue=\\\"brnchSeq\\\" name=\\\"brnchNm\\\" placeholder=\\\"Select Branch:\\\" formControlName=\\\"branch\\\">\\r\\n            </ng-select>\\r\\n\\r\\n            <mat-form-field>\\r\\n              <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                disabled readonly />\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\"\\r\\n                placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-radio-group formControlName=\\\"isXls\\\">\\r\\n              <mat-radio-button value=\\\"1\\\">Excel </mat-radio-button>\\r\\n              <mat-radio-button class=\\\"ml-3\\\" checked value=\\\"0\\\">PDF </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FinanceService } from 'src/app/shared/services/finance.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-funds-report',\r\n  templateUrl: './funds-report.component.html',\r\n  styleUrls: ['./funds-report.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class FundsReportComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  auth = JSON.parse(sessionStorage.getItem(\"auth\"));\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private financeService: FinanceService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    if (this.auth.role == \"admin\") {\r\n      this.transfersService.getBranches().subscribe(d => { this.branchs = d; }\r\n      );\r\n\r\n      this.ngForm = this.fb.group({\r\n        branch: ['', Validators.required],\r\n        frmDt: ['', Validators.required],\r\n        toDt: ['', Validators.required],\r\n        isXls: [0, Validators.required],\r\n      });\r\n    } else {\r\n      this.ngForm = this.fb.group({\r\n        frmDt: ['', Validators.required],\r\n        toDt: ['', Validators.required],\r\n        isXls: [0, Validators.required],\r\n        branch: [{ value: this.auth.emp_branch, disabled: false }, Validators.required,],\r\n      });\r\n    }\r\n    // this.ngForm = this.fb.group({\r\n    //   branch: ['', Validators.required],\r\n    //   frmDt: ['', Validators.required],\r\n    //   toDt: ['', Validators.required],\r\n    //   isXls:[0, Validators.required],\r\n    // });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  fundsReport() {\r\n    this.spinner.show();\r\n    console.log(this.ngForm.controls['branch'].value);\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    let isXls: boolean = this.ngForm.get('isXls').value;\r\n    console.log(isXls);\r\n    this.financeService.printFundsReport(frmDt, toDt, this.ngForm.controls['branch'].value, isXls).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      let fileURL = \"\"\r\n      if (isXls == true) {\r\n        console.log(\"ex\");\r\n        fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/vnd.ms-excel\" }));\r\n      }\r\n      else {\r\n        console.log(\"pdf\");\r\n        fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      }\r\n\r\n      console.log(fileURL);\r\n\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-9\\\">\\r\\n  <div class=\\\"content mb-md-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"mysearchbox\\\">\\r\\n          <h6 class=\\\"d-inline-block searchshow\\\">Client Wise Disbursement <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n          <div class=\\\"mysearch\\\">\\r\\n            <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n              title=\\\"Type in a name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"organizationTaggingReport()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n              <!-- <mat-form-field>\\r\\n                  <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                    <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                      {{b.brnchNm}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field> -->\\r\\n\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                  disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\"\\r\\n                  placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FinanceService } from 'src/app/shared/services/finance.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-organization-tagging-report',\r\n  templateUrl: './organization-tagging-report.component.html',\r\n  styleUrls: ['./organization-tagging-report.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class OrganizationTaggingReportComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private financeService: FinanceService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      // branch: ['', Validators.required],\r\n      frmDt: ['', Validators.required],\r\n      toDt: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  organizationTaggingReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.financeService.printOrganizationTaggingReport(frmDt, toDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-9\\\">\\r\\n  <div class=\\\"content mb-md-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"mysearchbox\\\">\\r\\n          <h6 class=\\\"d-inline-block searchshow\\\">Date Wise Disbursement <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n          <div class=\\\"mysearch\\\">\\r\\n            <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n              title=\\\"Type in a name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"organizationTime()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n              <!-- <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                  <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                    {{b.brnchNm}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                  disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\"\\r\\n                  placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FinanceService } from 'src/app/shared/services/finance.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-organization-time',\r\n  templateUrl: './organization-time.component.html',\r\n  styleUrls: ['./organization-time.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\n\r\nexport class OrganizationTimeComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private financeService: FinanceService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      // branch: ['', Validators.required],\r\n      frmDt: ['', Validators.required],\r\n      toDt: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  organizationTime() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.financeService.printOrganizationTime(frmDt, toDt).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-9\\\">\\r\\n  <div class=\\\"content mb-md-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"mysearchbox\\\">\\r\\n          <h6 class=\\\"d-inline-block searchshow\\\">Product Wise Disbursement <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n          <div class=\\\"mysearch\\\">\\r\\n            <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n              title=\\\"Type in a name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"productWiseDisbursement()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n              <label class=\\\"mb-0\\\">File Type:</label>\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Product Type\\\" formControlName=\\\"prdId\\\">\\r\\n                  <mat-option [value]=\\\"0\\\">All Products</mat-option>\\r\\n                  <mat-option *ngFor=\\\"let product of allItems\\\" [value]=\\\"product.prdGrpSeq\\\">{{product.prdGrpNm}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                  disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\"\\r\\n                  placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FinanceService } from 'src/app/shared/services/finance.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-product-wise-disbursement',\r\n  templateUrl: './product-wise-disbursement.component.html',\r\n  styleUrls: ['./product-wise-disbursement.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class ProductWiseDisbursementComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  allItems: any;\r\n\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private financeService: FinanceService, private productService: ProductService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      // branch: ['', Validators.required],\r\n      prdId: ['', Validators.required],\r\n      frmDt: ['', Validators.required],\r\n      toDt: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.productService.getAllProductGroups().subscribe((data) => {\r\n      this.allItems = data;\r\n      console.log(this.allItems)\r\n    });\r\n  }\r\n\r\n  productWiseDisbursement() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    this.financeService.printProductWiseDisbursement(frmDt, toDt, this.ngForm.controls['prdId'].value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      var fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-9\\\">\\r\\n  <div class=\\\"content mb-md-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"mysearchbox\\\">\\r\\n          <h6 class=\\\"d-inline-block searchshow\\\">Recovery Report <i class=\\\"fa fa-print\\\"> </i></h6>\\r\\n          <div class=\\\"mysearch\\\">\\r\\n            <a href=\\\"#.\\\" class=\\\"remove-search\\\"><i class=\\\"fa fa-window-close\\\"> </i></a>\\r\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search by Name...\\\"\\r\\n              title=\\\"Type in a name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form class=\\\"md-float-material\\\" [formGroup]=\\\"ngForm\\\" (ngSubmit)=\\\"recoveryReport()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"cRow\\\">\\r\\n            <div class=\\\"cCol6-col\\\">\\r\\n\\r\\n              <!-- <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Report Type\\\" formControlName=\\\"branch\\\">\\r\\n                  <mat-option *ngFor=\\\"let b of branchs\\\" [value]=\\\"b.brnchSeq\\\">\\r\\n                    {{b.brnchNm}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"frmDt\\\" placeholder=\\\"From Date:\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n                  disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput required formControlName=\\\"toDt\\\" [min]=\\\"ngForm.controls['frmDt'].value\\\"\\r\\n                  placeholder=\\\"To Date:\\\" [matDatepicker]=\\\"picker2\\\" disabled readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker required #picker2 disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-radio-group formControlName=\\\"isXls\\\">\\r\\n                <mat-radio-button value=\\\"1\\\">Excel </mat-radio-button>\\r\\n                <mat-radio-button class=\\\"ml-3\\\" checked value=\\\"0\\\">PDF </mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-center\\\">\\r\\n          <button [disabled]=\\\"!ngForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Print</button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FinanceService } from 'src/app/shared/services/finance.service';\r\nimport { TransfersService } from 'src/app/shared/services/transfers.service';\r\nimport { Branch } from 'src/app/shared/models/branch.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-recovery-report',\r\n  templateUrl: './recovery-report.component.html',\r\n  styleUrls: ['./recovery-report.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ],\r\n})\r\nexport class RecoveryReportComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  frmDt: string;\r\n  toDt: string;\r\n  maxDate: Date;\r\n  branchs: Branch[];\r\n\r\n  constructor(private fb: FormBuilder, private toaster: ToastrService, private financeService: FinanceService, private transfersService: TransfersService, private spinner: NgxSpinnerService) {\r\n    this.maxDate = new Date();\r\n    this.ngForm = this.fb.group({\r\n      // branch: ['', Validators.required],\r\n      frmDt: ['', Validators.required],\r\n      toDt: ['', Validators.required],\r\n      isXls: [0, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.transfersService.getBranches().subscribe(d => {\r\n      this.branchs = d;\r\n    });\r\n  }\r\n\r\n  recoveryReport() {\r\n    this.spinner.show();\r\n    const frmDt = new DatePipe('en-US').transform(this.ngForm.get('frmDt').value, 'dd-MM-yyyy')\r\n    const toDt = new DatePipe('en-US').transform(this.ngForm.get('toDt').value, 'dd-MM-yyyy')\r\n    let isXls:boolean=this.ngForm.get('isXls').value;\r\n    console.log(isXls);\r\n    this.financeService.printRecoveryReport(frmDt, toDt,isXls).subscribe((response) => {\r\n      this.spinner.hide();\r\n      var binaryData = [];\r\n      binaryData.push(response);\r\n      let  fileURL=\"\"\r\n      if (isXls==true) {\r\n        console.log(\"ex\");\r\n         fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/vnd.ms-excel\" }));\r\n      }\r\n      else {\r\n        console.log(\"pdf\");\r\n         fileURL = window.URL.createObjectURL(new Blob(binaryData, { type: \"application/pdf\" }));\r\n      }\r\n     \r\n      console.log(fileURL);\r\n    \r\n      window.open(fileURL, '_blank');\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      if (error.status == 500) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\");\r\n      } else if (error) {\r\n        this.toaster.error(\"Something Went Wrong\", \"Error\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiModel } from '../models/Api.model';\r\nimport { Auth } from '../models/Auth.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FinanceService {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  apiModel: ApiModel = new ApiModel();\r\n\r\n  constructor(public http: HttpClient,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService) { }\r\n\r\n\r\n  printFundsReport(frmDt, toDt, branch, isXls) {\r\n    const url = `${this.apiModel.host}/reportservice/api/print-funds-report/` + frmDt + `/` + toDt + `/` + branch + `/` + isXls;\r\n    return this.http.get<any>(url, {\r\n      responseType: 'arraybuffer' as 'json',\r\n      headers: this.apiModel.httpHeaderPost\r\n    });\r\n  }\r\n\r\n\r\n  printRecoveryReport(frmDt, toDt, isXls) {\r\n    const url = `${this.apiModel.host}/reportservice/api/print-recovery-report/` + frmDt + `/` + toDt + `/` + isXls;\r\n    return this.http.get<any>(url, {\r\n      responseType: 'arraybuffer' as 'json',\r\n      headers: this.apiModel.httpHeaderPost\r\n    });\r\n  }\r\n\r\n\r\n  printDisbursementReport(frmDt, toDt, branch, isXls) {\r\n    const url = `${this.apiModel.host}/reportservice/api/print-disbursement-report/` + frmDt + `/` + toDt + `/` + branch + `/` + isXls;\r\n    return this.http.get<any>(url, {\r\n      responseType: 'arraybuffer' as 'json',\r\n      headers: this.apiModel.httpHeaderPost\r\n    });\r\n  }\r\n\r\n\r\n  printFundManagmentTool(frmDt, toDt) {\r\n    const url = `${this.apiModel.host}/reportservice/api/print-fund-management-report/` + frmDt + `/` + toDt;\r\n    return this.http.get<any>(url, {\r\n      responseType: 'arraybuffer' as 'json',\r\n      headers: this.apiModel.httpHeaderPost\r\n    });\r\n  }\r\n\r\n\r\n  printOrganizationTaggingReport(frmDt, toDt) {\r\n    const url = `${this.apiModel.host}/reportservice/api/print-organization-tagging-report/` + frmDt + `/` + toDt;\r\n    return this.http.get<any>(url, {\r\n      responseType: 'arraybuffer' as 'json',\r\n      headers: this.apiModel.httpHeaderPost\r\n    });\r\n  }\r\n\r\n\r\n  printProductWiseDisbursement(frmDt, toDt, prd) {\r\n    const url = `${this.apiModel.host}/reportservice/api/print-product-wise-disbursement-report/` + frmDt + `/` + toDt + `/` + prd;\r\n    return this.http.get<any>(url, {\r\n      responseType: 'arraybuffer' as 'json',\r\n      headers: this.apiModel.httpHeaderPost\r\n    });\r\n  }\r\n\r\n\r\n  printOrganizationTime(frmDt, toDt) {\r\n    const url = `${this.apiModel.host}/reportservice/api/print-ogranization-time-report/` + frmDt + `/` + toDt;\r\n    return this.http.get<any>(url, {\r\n      responseType: 'arraybuffer' as 'json',\r\n      headers: this.apiModel.httpHeaderPost\r\n    });\r\n  }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Auth } from '../models/Auth.model';\r\nimport { ApiModel } from '../models/Api.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppDto } from '../models/app-dto.model';\r\nimport { Portfolio } from '../models/portfolio.model';\r\nimport { Region } from '../models/region.model';\r\nimport { Area } from '../models/area.model';\r\nimport { Branch } from '../models/branch.model';\r\nimport { branchPortfolio } from '../models/branchPortfolio.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransfersService {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n  constructor(private http: HttpClient) {\r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n\r\n  // getTransfers(): Observable<AppDto[]> {\r\n  //   return this.http.get<AppDto[]>(this.apiModel.host + '/setupservice/api/all-transfers/' + this.auth.user.username, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n  //     tap((p: AppDto[]) => console.log(p))\r\n  //   );\r\n  // }\r\n\r\n  getTransfers(brnchSeq: number, pageIndex, pageSize, filter, isCount): Observable<{\"apps\": any, \"count\" : Number}> {\r\n    return this.http.get<AppDto[]>(this.apiModel.host + '/setupservice/api/all-transfers?userId=' + this.auth.user.username + '&brnchSeq=' + brnchSeq + '&pageIndex=' + pageIndex + '&pageSize=' + pageSize + '&filter=' + filter + '&isCount=' + isCount, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: {\"apps\": any, \"count\" : Number}) => console.log(p))\r\n    );\r\n  }\r\n\r\n  getPortfoliosByBranch(branchSeq): Observable<Portfolio[]> {\r\n    return this.http.get<Portfolio[]>(this.apiModel.host + '/setupservice/api/mw-ports-by-branch/' + branchSeq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Portfolio[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  //teting Data for umair\r\n  hello() {\r\n    return this.http.get(this.apiModel.host + '/loanservice/api/get-test/', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p) => console.log(p))\r\n    );\r\n  }\r\n  //end testing data for umair\r\n\r\n  getRegions(): Observable<Region[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': this.token\r\n      })\r\n    };\r\n    return this.http.get<Region[]>(this.apiModel.host + '/setupservice/api/mw-regs', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Region[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  getAreas(): Observable<Area[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': this.token\r\n      })\r\n    };\r\n    return this.http.get<Area[]>(this.apiModel.host + '/setupservice/api/mw-areas', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Area[]) => console.log(p))\r\n    );\r\n  }\r\n  getBranches(): Observable<Branch[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': this.token\r\n      })\r\n    };\r\n    return this.http.get<Branch[]>(this.apiModel.host + '/setupservice/api/mw-brnches', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Branch[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  getBranchesByUser(): Observable<Branch[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': this.token\r\n      })\r\n    };\r\n    return this.http.get<Branch[]>(this.apiModel.host + '/setupservice/api/mw-brnches-by-user', { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Branch[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n  updatePort(appDtos: AppDto[]): Observable<AppDto> {\r\n    return this.http.put<AppDto>(this.apiModel.host + '/loanservice/api/update-client-port', appDtos, { headers: this.apiModel.httpHeaderPost })\r\n      .pipe(tap((p: AppDto) => console.log(p))\r\n      );\r\n  }\r\n\r\n  getAllProducts(): Observable<any> {\r\n    return this.http.get<any>(this.apiModel.host + '/setupservice/api/mw-prd-grp-fr-brnch/' + this.auth.emp_branch, { headers: this.apiModel.httpHeaderGet })\r\n      .pipe(tap((p: any) => { console.log(p); })\r\n      );\r\n  }\r\n\r\n  getAllPeriodsOfBranchPortfolio(prdGrpSeq): Observable<any> {\r\n    return this.http.get<any>(this.apiModel.host + '/setupservice/api/brnch-perd-by-prd-grp/' + this.auth.emp_branch + '/' + prdGrpSeq, { headers: this.apiModel.httpHeaderGet })\r\n      .pipe(tap((p: any) => { console.log(p); })\r\n      );\r\n  }\r\n\r\n  getListingsForBranchPortfolio(brnchTrgtSeq): Observable<any> {\r\n    return this.http.get<any>(this.apiModel.host + '/setupservice/api/brnch-trgt-by-prd-grp/' + this.auth.emp_branch + '/' + brnchTrgtSeq, { headers: this.apiModel.httpHeaderPost })\r\n      .pipe(tap((p: any) => { console.log(p); })\r\n      );\r\n  }\r\n\r\n  savingAllBranchPortfolios(arr): Observable<any> {\r\n    return this.http.post<any>(this.apiModel.host + '/setupservice/api/add-port-trgt' , arr, { headers: this.apiModel.httpHeaderPost })\r\n      .pipe(tap((p: any) => { console.log(p); })\r\n      );\r\n  }\r\n}\r\n"],"sourceRoot":""}