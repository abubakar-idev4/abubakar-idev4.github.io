{"version":3,"sources":["webpack:///./src/app/shared/models/expense.model.ts","webpack:///./src/app/shared/services/expense.service.ts","webpack:///./src/app/shared/services/paymentTypes.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;IAcI;IACC,CAAC;IACN,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf0C;AAC6C;AAEvC;AACF;AAEJ;AAQ3C;IAKE,wBAAoB,IAAgB,EAAU,MAAqB;QAA/C,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;QAJnE,SAAI,GAAS,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,aAAQ,GAAa,IAAI,0DAAQ,EAAE,CAAC;QAIlC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;IACD,wCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,4DAA4D,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACvJ,0DAAG,CAAC,UAAC,IAAS,IAAO,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,kDAAyB,GAAzB,UAA0B,GAAG;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,4DAA4D,GAAG,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACtI,0DAAG,CAAC,UAAC,IAAS,IAAO,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,6CAAoB,GAApB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,4DAA4D,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACvJ,0DAAG,CAAC,UAAC,IAAS,IAAO,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,uDAA8B,GAA9B,UAA+B,GAAG;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,4DAA4D,GAAG,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACtI,0DAAG,CAAC,UAAC,IAAS,IAAO,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,yDAAyD;IACzD,yJAAyJ;IACzJ,4CAA4C;IAC5C,OAAO;IACP,IAAI;IAEJ,uDAAuD;IACvD,yJAAyJ;IACzJ,4CAA4C;IAC5C,OAAO;IACP,IAAI;IACJ,+CAAsB,GAAtB,UAAuB,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO;QAC9D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,4CAA4C,GAAG,GAAG,GAAG,UAAU,GAAG,MAAM,GAAG,aAAa,GAAG,SAAS,GAAG,YAAY,GAAG,QAAQ,GAAG,WAAW,GAAG,OAAO,EAAC,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACxP,0DAAG,CAAC,UAAC,CAAqC,IAAK,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAC/D,CAAC;IACJ,CAAC;IACD,mCAAU,GAAV,UAAW,OAAgB;QAA3B,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,+BAA+B,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAC3I,0DAAG,CAAC,UAAC,CAAU,IAAK,YAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,EAAhD,CAAgD,CAAC,CACtE,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb,UAAc,OAAgB;QAA9B,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;aACnI,IAAI,CAAC,0DAAG,CAAC,UAAC,CAAU,IAAK,YAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAU,CAAC,EAAlD,CAAkD,CAAC,CAC5E,CAAC;IACN,CAAC;IACD,uCAAc,GAAd,UAAe,OAAgB;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,+BAA+B,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;aACpI,IAAI,CAAC,0DAAG,CAAC,UAAC,CAAU,IAAK,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CACxC,CAAC;IACN,CAAC;IAED,sCAAa,GAAb,UAAc,EAAU;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,2BAA2B,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACpI,0DAAG,CAAC,UAAC,CAAU,IAAK,cAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B,CAAC,CACnD,CAAC;IACJ,CAAC;IACD,wCAAe,GAAf,UAAgB,EAAU;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,2BAA2B,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACpI,0DAAG,CAAC,UAAC,CAAU,IAAK,cAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B,CAAC,CACnD,CAAC;IACJ,CAAC;IACD,sCAAa,GAAb,UAAc,QAAgB;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,mCAAmC,GAAG,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACjJ,0DAAG,CAAC,UAAC,CAAY,IAAK,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CACtC,CAAC;IACJ,CAAC;IAGD,sCAAa,GAAb,UAAc,OAAO;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,qCAAqC,GAAG,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACvI,0DAAG,CAAC,UAAC,CAAC,IAAK,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAC3B,CAAC;IACJ,CAAC;IAxFU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,4EAAU,EAAkB,wDAAa;OALxD,cAAc,CAyF1B;IAAD,qBAAC;CAAA;AAzF0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfc;AACO;AACT;AACM;AAET;AACK;AACM;AAQ/C;IAIE,6BAAmB,IAAgB,EACf,MAAc,EACd,MAAqB;QAFtB,SAAI,GAAJ,IAAI,CAAY;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QALzC,aAAQ,GAAa,IAAI,0DAAQ,EAAE,CAAC;QAMlC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IACD,2CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,sDAAsD,EAAG,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAE,CAAC,IAAI,CAC5H,0DAAG,CAAC,UAAC,IAAS,IAAK,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IACD,yCAAW,GAAX,UAAY,MAAM;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,4BAA4B,GAAG,MAAM,EAAG,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAC1G,0DAAG,CAAC,UAAC,IAAS,IAAK,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,mDAAqB,GAArB,UAAsB,MAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,MAAc,EAAE,OAAgB,EAAE,QAAgB;QAC3H,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,oCAAoC,GAAG,MAAM,GAAG,aAAa,GAAG,SAAS,GAAG,YAAY,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,WAAW,GAAI,OAAO,GAAG,YAAY,GAAG,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAChP,0DAAG,CAAC,UAAC,IAA8C,IAAK,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,EAC1E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,gDAAkB,GAAlB,UAAmB,MAAM,EAAE,KAAK;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,uCAAuC,GAAG,MAAM,GAAE,GAAG,GAAC,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAC/H,0DAAG,CAAC,UAAC,IAAS,IAAK,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,2CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,8BAA8B,EAAI,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACxH,0DAAG,CAAC,UAAC,IAAS,IAAK,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,qCAAO,GAAP,UAAQ,IAAiB;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,+BAA+B,EACrF,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CACrD,0DAAG,CAAC,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,EACzB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAE,SAAS,CAAC,CAAC,CACzC,CAAC,CAAC;IACL,CAAC;IAGD,iDAAmB,GAAnB,UAAoB,IAAiB;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,2CAA2C,EACjG,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CACrD,0DAAG,CAAC,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,EACzB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAE,SAAS,CAAC,CAAC,CACzC,CAAC,CAAC;IACL,CAAC;IAGD,wCAAU,GAAV,UAAW,IAAiB;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,8BAA8B,EACnF,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CACrD,0DAAG,CAAC,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,EACzB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IACD,wCAAU,GAAV,UAAW,GAAG;QACZ,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,4BAA4B,GAAG,GAAG,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAC,CAAE,CAAC,IAAI,CACzE,0DAAG,CAAC,UAAC,IAAS,IAAK,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IACM,yCAAW,GAAlB,UAAuB,SAAuB,EAAE,MAAU;QAA1D,iBAaC;QAbsB,mDAAuB;QAC5C,MAAM,CAAC,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAC/C,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAK,SAAS,aAAU,CAAC,CAAC;YAEzD,8DAA8D;YAC9D,OAAO,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAErD,yDAAyD;YACzD,MAAM,CAAC,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IApFU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAKyB,+DAAU;YACP,sDAAM;YACN,wDAAa;OAN9B,mBAAmB,CAqF/B;IAAD,0BAAC;CAAA;AArF+B","file":"compliance-repot-compliance-repot-module~pages-admin-admin-module~pages-expense-management-expense-m~0ba978f1.js","sourcesContent":["export class Expense {\r\n    expSeq:number;\r\n\tpymtTypSeq:number;\r\n\tbrnchSeq:number;\r\n    expnsStsKey:number;\r\n    expnsId:String;\r\n    expnsDscr:String;\r\n    instrNum:String;\r\n    expnsAmt:number;\r\n    expnsTypSeq:number;\r\n    expRef:any;\r\n    postFlg;\r\n    pymtRctFlg:number;\r\n    rmrks:string;\r\n    constructor()\r\n    {}\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../../node_modules/@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { ApiModel } from '../models/Api.model';\r\nimport { Expense } from '../models/expense.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Auth } from '../models/Auth.model';\r\nimport { ClientHealthInsuranceClaim } from '../models/client-health-insurance-claim.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpenseService {\r\n  auth: Auth = JSON.parse(sessionStorage.getItem('auth'));\r\n  apiModel: ApiModel = new ApiModel();\r\n  token: string;\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) {\r\n    console.log(this.auth.emp_branch)\r\n    console.log(this.auth.role)\r\n    this.token = 'Bearer ' + sessionStorage.getItem('token');\r\n  }\r\n  getPaymentModes() {\r\n    return this.http.get<any[]>\r\n      (this.apiModel.host + '/recoverydisbursementservice/api/get-type-branch-catgry/6/' + this.auth.emp_branch, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((data: any) => { }));\r\n  }\r\n\r\n  getPaymentModesByBranches(seq) {\r\n    return this.http.get<any[]>\r\n      (this.apiModel.host + '/recoverydisbursementservice/api/get-type-branch-catgry/6/' + seq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((data: any) => { }));\r\n  }\r\n\r\n  getAllCatgoriesModes() {\r\n    return this.http.get<any[]>\r\n      (this.apiModel.host + '/recoverydisbursementservice/api/get-type-branch-catgry/2/' + this.auth.emp_branch, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((data: any) => { }));\r\n  }\r\n\r\n  getAllCatgoriesModesByBranches(seq) {\r\n    return this.http.get<any[]>\r\n      (this.apiModel.host + '/recoverydisbursementservice/api/get-type-branch-catgry/2/' + seq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n        tap((data: any) => { }));\r\n  }s\r\n\r\n  // getExpenses(username: string): Observable<Expense[]> {\r\n  //   return this.http.get<Expense[]>(this.apiModel.host + '/setupservice/api/mw-exp-by-user/' + username, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n  //     tap((p: Expense[]) => console.log(p))\r\n  //   );\r\n  // }\r\n\r\n  // getExpensesByBranchSeq(seq): Observable<Expense[]> {\r\n  //   return this.http.get<Expense[]>(this.apiModel.host + '/setupservice/api/mw-exp-by-brnch-seq/' + seq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n  //     tap((p: Expense[]) => console.log(p))\r\n  //   );\r\n  // }\r\n  getExpensesByBranchSeq(seq, pageIndex, pageSize, filter, isCount): Observable<{\"exp\":Expense[], \"count\": Number}> {\r\n    return this.http.get<Expense[]>(this.apiModel.host + '/setupservice/api/mw-exp-by-brnch-seq?seq=' + seq + '&filter=' + filter + '&pageIndex=' + pageIndex + '&pageSize=' + pageSize + '&isCount=' + isCount,{ headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: {\"exp\":Expense[], \"count\": Number}) => console.log(p))\r\n    );\r\n  }\r\n  addExpense(Expense: Expense): Observable<Expense> {\r\n    return this.http.post<Expense>(this.apiModel.host + '/setupservice/api/add-new-exp', Expense, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n      tap((p: Expense) => this.toastr.success('Expense Added', 'Success!'))\r\n    );\r\n  }\r\n\r\n  updateExpense(Expense: Expense): Observable<Expense> {\r\n    return this.http.put<Expense>(this.apiModel.host + '/setupservice/api/update-exp', Expense, { headers: this.apiModel.httpHeaderPost })\r\n      .pipe(tap((p: Expense) => this.toastr.success('Expense Updated', 'Success!'))\r\n      );\r\n  }\r\n  reverseExpense(Expense: Expense): Observable<Expense> {\r\n    return this.http.put<Expense>(this.apiModel.host + '/setupservice/api/reverse-exp', Expense, { headers: this.apiModel.httpHeaderPost })\r\n      .pipe(tap((p: Expense) => console.log(p))\r\n      );\r\n  }\r\n\r\n  deleteExpense(id: string) {\r\n    return this.http.delete<Expense>(this.apiModel.host + '/setupservice/api/mw-exp/' + id, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Expense) => console.log(`Delete Expense`))\r\n    );\r\n  }\r\n  deleteItExpense(id: string) {\r\n    return this.http.delete<Expense>(this.apiModel.host + '/setupservice/api/mw-exp/' + id, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Expense) => console.log(`Delete Expense`))\r\n    );\r\n  }\r\n  getItExpenses(username: string): Observable<Expense[]> {\r\n    return this.http.get<Expense[]>(this.apiModel.host + '/setupservice/api/mw-exp-by-user/' + username, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p: Expense[]) => console.log(p))\r\n    );\r\n  }\r\n\r\n\r\n  getClntOdDays(clntSeq) {\r\n    return this.http.get(this.apiModel.host + '/adminservice/api/get-clnt-od-days/' + clntSeq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((p) => console.log(p))\r\n    );\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {ApiModel} from '../models/Api.model';\r\nimport {PaymentType} from '../models/paymentType.model';\r\nimport {Observable, of} from 'rxjs';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {MwPdcDtlDTOs} from '../models/pdc.model';\r\nimport {PaymentSchedule} from '../models/paymentSchedule.model';\r\nimport {DisbursementVoucherListItem} from '../models/disbursementVoucherListItem.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentTypesService {\r\n  apiModel: ApiModel = new ApiModel();\r\n  paymentTypes: PaymentType;\r\n\r\n  constructor(public http: HttpClient,\r\n              private router: Router,\r\n              private toastr: ToastrService) {\r\n    console.log('Payment Types Service Initiated');\r\n  }\r\n  getTypeStatus() {\r\n    return this.http.get<PaymentSchedule[]>\r\n    (this.apiModel.host + '/setupservice/api/vals-by-group-name?groupName=Types' , { headers: this.apiModel.httpHeaderGet } ).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getTypeStatus')));\r\n  }\r\n  getAllTypes(number) {\r\n    return this.http.get<PaymentType>\r\n    (this.apiModel.host + '/setupservice/api/mw-typs/' + number , { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n\r\n  getAllTypesByCategory(number: number, pageIndex: number, pageSize: number, filter: String, isCount: boolean, brnchSeq: number):Observable<{'typs': PaymentType[], 'count': Number}> {\r\n    return this.http.get<PaymentType>\r\n    (this.apiModel.host + '/setupservice/api/mw-typs?ctgryId=' + number + '&pageIndex=' + pageIndex + '&pageSize=' + pageSize + '&filter=' + filter + '&isCount=' +  isCount + '&brnchSeq=' + brnchSeq, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: {'typs': PaymentType[], 'count': Number}) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n  getAllTypesByBrnch(number, brnch) {\r\n    return this.http.get<PaymentType>\r\n    (this.apiModel.host + '/setupservice/api/mw-typs-brnch-wise/' + number +\"/\"+brnch, { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n\r\n  getAllBrnches() {\r\n    return this.http.get(this.apiModel.host + '/setupservice/api/mw-brnches'  , { headers: this.apiModel.httpHeaderGet }).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('getAllTypes')));\r\n  }\r\n  addType(disb: PaymentType): Observable<PaymentType> {\r\n    console.log(disb);\r\n    return this.http.post<PaymentType>(this.apiModel.host + '/setupservice/api/add-new-typ' ,\r\n      disb, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n      tap((p => console.log(p)),\r\n      catchError(this.handleError( 'addType'))\r\n    ));\r\n  }\r\n\r\n\r\n  getTypeByIdAndCtgry(disb: PaymentType): Observable<PaymentType> {\r\n    return this.http.post<PaymentType>(this.apiModel.host + '/setupservice/api/mw-typs-by-id-and-ctgry' ,\r\n      disb, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n      tap((p => console.log(p)),\r\n      catchError(this.handleError( 'getType'))\r\n    ));\r\n  }\r\n\r\n\r\n  updateType(disb: PaymentType): Observable<PaymentType> {\r\n    return this.http.put<PaymentType>(this.apiModel.host + '/setupservice/api/update-typ' ,\r\n      disb, { headers: this.apiModel.httpHeaderPost }).pipe(\r\n      tap((p => console.log(p)),\r\n      catchError(this.handleError( 'updateType'))));\r\n  }\r\n  deleteType(seq): Observable<PaymentType> {\r\n    const url = this.apiModel.host + '/setupservice/api/mw-typs/' + seq;\r\n    return this.http.delete(url, { headers: this.apiModel.httpHeaderGet} ).pipe(\r\n      tap((data: any) => console.log(data)),\r\n      catchError(this.handleError('deleteType')));\r\n  }\r\n  public handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n      this.toastr.error(error.message, `${operation} failed:`);\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":""}