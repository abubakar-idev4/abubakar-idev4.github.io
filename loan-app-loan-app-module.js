(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["loan-app-loan-app-module"],{

/***/ "./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<nav aria-label=\"breadcrumb\">\r\n  <ol class=\"breadcrumb breadcrumb-arrow\">\r\n    <li [routerLinkActive]=\"['active']\" *ngFor=\"let b of breadcrumbs; let last = last\" [ngClass]=\"{'is-disable': b.isDisable == true}\">\r\n      <a [routerLink]=\"b.isDisable ?  null : b.href\"> <i\r\n        class=\"fa \" [ngClass]=\"{'fa-user fa-check-square ':(b.isSaved === true && b.isDisable == false),\r\n      'fa-user fa-exclamation ':(b.isSaved !== true && b.isDisable == false)}\"\r\n      ></i>  {{ b.label }}</a>\r\n    </li>\r\n\r\n    <!--<li [routerLinkActive]=\"['active']\">-->\r\n      <!--<a  [routerLink]=\"['/loan-origination/personal-info']\">-->\r\n      <!--<i-->\r\n      <!--class=\"fa fa-user\" [ngClass]=\"{'fa-check-square':isSavedPersonalInfo === true,-->\r\n      <!--'fa-exclamation':isSavedPersonalInfo !== true}\"-->\r\n    <!--&gt;</i> -->\r\n      <!--Personal Info</a>-->\r\n    <!--</li>-->\r\n\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/loan-info']\">Credit Info-->\r\n      <!--<i class=\"fa fa-user\"-->\r\n         <!--[ngClass]=\"{'fa-check-square':isSavedLoanInfo === true,-->\r\n      <!--'fa-exclamation':isSavedLoanInfo !== true}\"></i></a></li>-->\r\n    <!---->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/mfcib']\">MFCIB and Other Credit-->\r\n      <!--<i class=\"fa fa-user \"-->\r\n         <!--[ngClass]=\"{'fa-check-square':isSavedMFCIB === true,-->\r\n      <!--'fa-exclamation':isSavedMFCIB !== true}\"></i></a></li>-->\r\n    <!---->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/insurance-info']\">Insurance Info-->\r\n      <!--<i class=\"fa fa-user \"-->\r\n         <!--[ngClass]=\"{'fa-check-square':isSavedInsurance === true,-->\r\n      <!--'fa-exclamation':isSavedInsurance !== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/nominee']\">Nominee Info-->\r\n      <!--<i class=\"fa fa-user \"-->\r\n         <!--[ngClass]=\"{'fa-check-square':isSavedNominee === true,-->\r\n      <!--'fa-exclamation':isSavedNominee !== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/co-borrower']\"> Co-borrower Info-->\r\n      <!--<i class=\"fa fa-user \"-->\r\n         <!--[ngClass]=\"{'fa-check-square':isSavedBorrower === true,-->\r\n      <!--'fa-exclamation':isSavedBorrower !== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/business-appraisal']\">Business Appraisal-->\r\n      <!--<i class=\"fa fa-user \"-->\r\n         <!--[ngClass]=\"{'fa-check-square':isSavedbusiness === true,-->\r\n      <!--'fa-exclamation':isSavedbusiness !== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/school-appraisal']\">School Appraisal-->\r\n      <!--<i class=\"fa fa-user \"-->\r\n         <!--[ngClass]=\"{'fa-check-square':isSavedSchool === true,-->\r\n    <!--'fa-exclamation':isSavedSchool !== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/expected-loan-utilication']\">Expected Credit Utilization-->\r\n      <!--<i class=\"fa fa-user \"-->\r\n     <!--[ngClass]=\"{'fa-check-square':isSavedExpected === true,'fa-exclamation':isSavedExpected-->\r\n      <!--!== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/psc']\">PSC-->\r\n      <!--<i class=\"fa fa-user \" [ngClass]=\"{'fa-check-square':isSavedPsc === true,-->\r\n      <!--'fa-exclamation':isSavedPsc !== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/documents']\">Documeants-->\r\n      <!--<i class=\"fa fa-user \" [ngClass]=\"{'fa-check-square':isSavedDocuments === true,-->\r\n      <!--'fa-exclamation':isSavedDocuments !== true}\"></i></a></li>-->\r\n    <!--<li [routerLinkActive]=\"['active']\"><a [routerLink]=\"['/loan-origination/submit']\">Submit Application-->\r\n      <!--<i class=\"fa fa-user \" [ngClass]=\"{'fa-check-square':isSavedSubmit === true,-->\r\n      <!--'fa-exclamation':isSavedSubmit !== true}\"></i></a></li>-->\r\n  </ol>\r\n</nav>\r\n"

/***/ }),

/***/ "./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.ts ***!
  \***************************************************************************/
/*! exports provided: BreadcrumbComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreadcrumbComponent", function() { return BreadcrumbComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var BreadcrumbComponent = /** @class */ (function () {
    function BreadcrumbComponent(router, breadcrumbProvider, loanService) {
        var _this = this;
        this.router = router;
        this.breadcrumbProvider = breadcrumbProvider;
        this.loanService = loanService;
        this.breadcrumbs = [];
        this.router.events.subscribe(function (e) {
            if (e instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivationEnd"]) {
                if (e.snapshot.data.breadcrumbs) {
                    _this.breadcrumbs = Object.assign([], e.snapshot.data.breadcrumbs);
                }
                else {
                    if (_this.breadcrumbs.length <= 0 && e.snapshot.data.defaultBreadcrumbs) {
                        _this.breadcrumbs = Object.assign([], e.snapshot.data.defaultBreadcrumbs);
                    }
                }
            }
        });
        this.breadcrumbProvider._addItem.subscribe(function (breadcrumb) {
            var f = -1;
            for (var i = 0; i < _this.breadcrumbs.length; i++) {
                if (_this.breadcrumbs[i].label == breadcrumb.label) {
                    _this.breadcrumbs[i] = breadcrumb;
                    f = i;
                }
            }
            if (f < 0)
                _this.breadcrumbs.push(breadcrumb);
        });
    }
    BreadcrumbComponent.prototype.ngOnInit = function () {
    };
    BreadcrumbComponent.prototype.ngDoCheck = function () {
    };
    BreadcrumbComponent.prototype.tytPreGetBool = function (pre) {
        return sessionStorage.getItem(pre) === 'true' ? true : false;
    };
    BreadcrumbComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-breadcrumb',
            template: __webpack_require__(/*! ./breadcrumb.component.html */ "./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.html"),
            styles: [__webpack_require__(/*! ./breadcrumb.component.css */ "./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_2__["BreadcrumbProvider"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__["LoanService"]])
    ], BreadcrumbComponent);
    return BreadcrumbComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.css":
/*!*****************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.css ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".tar{text-align: right};"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.html":
/*!******************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n      <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n      <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" id=\"basic-tab\" data-toggle=\"tab\" href=\"#basincinfo\" role=\"tab\" aria-controls=\"home\"\r\n            aria-selected=\"true\">Basic\r\n            Info</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"address-tab\" data-toggle=\"tab\" href=\"#addressTab\" role=\"tab\" aria-controls=\"addressTab\"\r\n            aria-selected=\"false\">Business\r\n            Address Detail</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"incomeid\" data-toggle=\"tab\" href=\"#incomeTab\" role=\"tab\" aria-controls=\"incomeTab\"\r\n            aria-selected=\"false\">Income</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"expensesid\" data-toggle=\"tab\" href=\"#expensesTab\" role=\"tab\" aria-controls=\"expensesTab\"\r\n            aria-selected=\"false\">Expenses</a>\r\n        </li>\r\n        <!-- <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"livestockid\" data-toggle=\"tab\" href=\"#livestockTab\" role=\"tab\"\r\n            aria-controls=\"livestockTab\" aria-selected=\"false\">Existing Livestock</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"financeid\" data-toggle=\"tab\" href=\"#financeTab\" role=\"tab\" aria-controls=\"financeTab\"\r\n            aria-selected=\"false\">Est. Cost To Finance New Livestock</a>\r\n        </li> -->\r\n      </ul>\r\n      <form (ngSubmit)=\"onBusinessAppraisalFormSubmit()\" #businessAppraisalForm=\"ngForm\">\r\n        <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"basincinfo\" role=\"tabpanel\" aria-labelledby=\"basic-tab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Business Sector\" (selectionChange)=\"onSectorChange()\" [(ngModel)]=\"model.businessAppraisal.sectorKey\"\r\n                    [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"sectorKey\" required>\r\n                    <mat-option *ngFor=\"let edu of filterBy('bizSectSortOrdr', sector)\" [value]=\"edu.bizSectSeq\">\r\n                      {{edu.bizSectNm}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"sector\" bindLabel=\"codeValue\" bindValue=\"codeKey\" placeholdevr=\"Select Sector\" name=\"codeValue\" [(ngModel)]=\"model.businessAppraisal.sectorKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Activity\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    [(ngModel)]=\"model.businessAppraisal.activityKey\" name=\"activityKey\" required>\r\n                    <mat-option *ngFor=\"let edu of activity\" [value]=\"edu.bizActySeq\">\r\n                      {{edu.bizActyNm}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"activity\" bindLabel=\"codeValue\" bindValue=\"codeKey\" placeholder=\"Select Activity\" name=\"codeValue\" [(ngModel)]=\"model.businessAppraisal.activityKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input (keypress)=\"onlyLetters($event)\" matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" required [(ngModel)]=\"model.businessAppraisal.businessDetailStr\"\r\n                    id=\"businessDetailStrId\" name=\"businessDetailStr\" #businessDetailStr=\"ngModel\" pattern=\"([a-zA-Z 0-9/ ,]\\s*)+\"\r\n                    [errorStateMatcher]=\"matcher\" placeholder=\"Business Detail\">\r\n                  <mat-error *ngIf=\"businessDetailStr.invalid\">\r\n                    Business Detail is <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"['Manufacturing Of Cloth','Production of Textile']\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Business detail\"\r\n                  name=\"codeValue\" [(ngModel)]=\"model.businessAppraisal.businessDetailKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1-5\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Personal(s) Running Business\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    (selectionChange)=\"onPersonelChange()\" [(ngModel)]=\"model.businessAppraisal.personRunningBusinessKey\"\r\n                    name=\"personRunningBusinessKey\" required>\r\n                    <mat-option *ngFor=\"let edu of businessRunner\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"businessRunner\" bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Personnel(s) Running the Business\"\r\n                  [(ngModel)]=\"model.businessAppraisal.personRunningBusinessKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Business ownership\" [(ngModel)]=\"model.businessAppraisal.businessOwnerShip\"\r\n                    [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"businessOwnerShip\" required>\r\n                    <mat-option *ngFor=\"let edu of businessOwnership\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Business Property Ownership\" [(ngModel)]=\"model.businessAppraisal.bizPropertyOwnKey\"\r\n                    [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"bizPropertyOwnKey\" required>\r\n                    <mat-option *ngFor=\"let edu of propertyOwnership\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" placeholder=\"Business Phone number\" [disabled]=\"readonly && auth.role!='admin'\" matInput id=\"phoneNumber\"\r\n                    name=\"bizPhoneNum\" maxlength=\"11\" pattern=\"^[0-9]{11}$\" [errorStateMatcher]=\"matcher\" [(ngModel)]=\"model.businessAppraisal.bizPhoneNum\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1-5\" style=\"display:none\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" placeholder=\"Client Participation Percentage\" matInput [disabled]=\"readonly && auth.role!='admin'\" id=\"clientPercentage\" name=\"clientPercentage\"\r\n                    readonly [(ngModel)]=\"cpPercentage\" disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"2\" pattern=\"\\d*\" max=\"99\" min=\"0\"\r\n                    required id=\"noYears\" name=\"noYears\" #years=\"ngModel\" [errorStateMatcher]=\"matcher\" (change)=\"calculateTotalMonth()\"\r\n                    [(ngModel)]=\"model.businessAppraisal.yearsInBusiness\" matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"No. of Years in Business\">\r\n                  <mat-error *ngIf=\"years.invalid\">\r\n                    business years are\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"2\" pattern=\"^(0?[0-9]|1[012])$\" min=\"1\" max=\"12\"\r\n                    max=\"12\" required id=\"noMonths\" name=\"noMonths\" [errorStateMatcher]=\"matcher\" (change)=\"calculateTotalMonth()\"\r\n                    [(ngModel)]=\"model.businessAppraisal.monthsInBusiness\" placeholder=\"No. of Months in Business\"\r\n                    matInput [disabled]=\"readonly && auth.role!='admin'\" #months=\"ngModel\">\r\n                  <mat-error *ngIf=\"months.invalid\">\r\n                    business months are\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" placeholder=\"Business Duration Months\" id=\"totalmnths\" name=\"totalmnths\" matInput [disabled]=\"readonly && auth.role!='admin'\"\r\n                    [(ngModel)]=\"totalmnths\" readonly disabled>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"addressTab\" role=\"tabpanel\" aria-labelledby=\"address-tab\">\r\n            <div class=\"pt-1 pb-1\">\r\n              <mat-label>Is Business Address same as Client's home address ?</mat-label>\r\n              <br>\r\n              <mat-radio-group [disabled]=\"readonly && auth.role!='admin'\" [(ngModel)]=\"model.businessAppraisal.isbizAddrSAC\" (change)=\"sameAsClientAddressChange()\"\r\n                name=\"isbizAddrSAC\" required>\r\n                <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">\r\n                  {{disFlag.name}}</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div *ngIf=\"!model.businessAppraisal.isbizAddrSAC\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"province\" name=\"province\" [(ngModel)]=\"model.businessAppraisal.businessAddress.provinceName\"\r\n                      readonly placeholder=\"Province\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input required matInput readonly id=\"district\" name=\"district\" [(ngModel)]=\"model.businessAppraisal.businessAddress.districtName\"\r\n                      readonly placeholder=\"District\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"tehsil\" name=\"tehsil\" [(ngModel)]=\"model.businessAppraisal.businessAddress.tehsilName\"\r\n                      readonly placeholder=\"Tehsil\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"uc\" name=\"uc\" [(ngModel)]=\"model.businessAppraisal.businessAddress.ucName\"\r\n                      readonly placeholder=\"UC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"city\" name=\"city\" [(ngModel)]=\"model.businessAppraisal.businessAddress.cityName\"\r\n                      readonly placeholder=\"City\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 mt-3\" *ngIf=\"!model.businessAppraisal.isbizAddrSAC\">\r\n                  <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" class=\"btn btn-dots\" data-toggle=\"modal\" data-target=\"#Location\"></button>\r\n                  <div class=\"modal fade\" id=\"Location\" role=\"dialog\">\r\n                    <div class=\"modal-dialog bigger mymodal\">\r\n                      <!-- Modal content-->\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\">Location </h5>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <div class=\"table-responsive\">\r\n                            <table class=\"table last-left\">\r\n                              <thead class=\"thead-light last-left\">\r\n                                <tr>\r\n                                  <th>Province</th>\r\n                                  <th>District</th>\r\n                                  <th>Tehsil</th>\r\n                                  <th width=\"20%\">UC</th>\r\n                                  <th>City</th>\r\n                                  <th>Select</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody class=\"evenodd\">\r\n                                <tr *ngFor=\"let address of addresses\">\r\n                                  <td>{{address.provinceName}} </td>\r\n                                  <td>{{address.districtName}}</td>\r\n                                  <td>{{address.tehsilName}}</td>\r\n                                  <td>{{address.ucName}}</td>\r\n                                  <td>{{address.cityName}}</td>\r\n                                  <td>\r\n                                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary btn-min\" (click)=\"selectAddress(address)\">Select</button>\r\n                                  </td>\r\n                                </tr>\r\n\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"houseNum\" name=\"houseHum\" [(ngModel)]=\"model.businessAppraisal.businessAddress.houseNum\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"House Number\" required [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"street\" name=\"street\" [(ngModel)]=\"model.businessAppraisal.businessAddress.sreet_area\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Street/Area\" required [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                    <ng-select [disabled]=\"readonly && auth.role!='admin'\" [items]=\"communityArray\" required bindLabel=\"cmntyNm\"\r\n                      bindValue=\"cmntySeq\" name=\"cmntyNm\" placeholder=\"Select Community\" [(ngModel)]=\"model.businessAppraisal.businessAddress.community\">\r\n                    </ng-select>\r\n                  </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" required id=\"village\" name=\"village\" [(ngModel)]=\"model.businessAppraisal.businessAddress.village\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Village\" [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"other\" required name=\"other\" [(ngModel)]=\"model.businessAppraisal.businessAddress.otherDetails\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Other Details\" [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"incomeTab\" role=\"tabpanel\" aria-labelledby=\"incomeTab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" (change)=\"incomeChange()\" min=\"0\" (change)=\"incomeChange()\"\r\n                    placeholder=\"Max Monthly Sale\" id=\"maxMonthSale\" name=\"maxMonthSale\" maxlength=\"6\" #maxMonthlySale=\"ngModel\"\r\n                    [(ngModel)]=\"model.businessAppraisal.maxMonthSale\" matInput [disabled]=\"readonly && auth.role!='admin'\" required [errorStateMatcher]=\"matcher\">\r\n                  <mat-error *ngIf=\"maxMonthlySale.invalid\">\r\n                    max monthly sale is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" min=\"0\" max=\"12\" (keypress)=\"onlyNumbers($event)\" matInput [disabled]=\"readonly && auth.role!='admin'\" required maxlength=\"2\"\r\n                    pattern=\"^(0?[1-9]|1[012])$\" #maxSaleMonth=\"ngModel\" [errorStateMatcher]=\"matcher\" (change)=\"maxMonthChange()\"\r\n                    placeholder=\"No. of Month\" id=\"maxSaleMonth\" name=\"maxSaleMonth\" [(ngModel)]=\"model.businessAppraisal.maxSaleMonth\">\r\n                  <mat-error *ngIf=\"maxSaleMonth.invalid\">\r\n                    max sale month is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" min=\"0\" (keypress)=\"onlyNumbers($event)\" (change)=\"incomeChange()\" placeholder=\"Minimum Monthly Sale\"\r\n                    id=\"minMonthSale\" name=\"minMonthSale\" maxlength=\"6\" #minMonthlySale=\"ngModel\" [(ngModel)]=\"model.businessAppraisal.minMonthSale\"\r\n                    matInput [disabled]=\"readonly && auth.role!='admin'\" required [errorStateMatcher]=\"matcher\">\r\n                  <mat-error *ngIf=\"minMonthlySale.invalid\">\r\n                    min monthly sale is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" min=\"0\" max=\"12\" (change)=\"minMonthChange()\" placeholder=\"No. of Month\" id=\"minSaleMonth\"\r\n                    name=\"minSaleMonth\" min=\"0\" max=\"12\" matInput [disabled]=\"readonly && auth.role!='admin'\" required (keypress)=\"onlyNumbers($event)\" maxlength=\"2\"\r\n                    pattern=\"^(0?[1-9]|1[012])$\" #minSaleMonth=\"ngModel\" [(ngModel)]=\"model.businessAppraisal.minSaleMonth\"\r\n                    matInput [disabled]=\"readonly && auth.role!='admin'\" required>\r\n                  <mat-error *ngIf=\"minSaleMonth.invalid\">\r\n                    min sale month is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput disabled placeholder=\"Average Monthly Income\" id=\"averageMonthIncome\" name=\"averageMonthIncome\"\r\n                     [(ngModel)]=\"averageIncome\" readonly>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Primary Income</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\" (click)=\"addPrimaryIncome()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n                    <div class=\"modal fade\" id=\"addPrimaryIncome\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onPrimaryIncomeFormSubmit()\" #primaryIncomeForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Primary Income</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Primary Income\" [(ngModel)]=\"primaryIncome.incomeTypeKey\"\r\n                                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of primaryIncomeType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"primaryIncome\"\r\n                                      name=\"primaryIncome\" [(ngModel)]=\"primaryIncome.incomeAmount\" [errorStateMatcher]=\"matcher\"\r\n                                      (keypress)=\"onlyNumbers($event)\" placeholder=\"Primary Income Amount\"\r\n                                      #primaryIncomeAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"primaryIncomeAmount.invalid\">\r\n                                      primary income is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\" [disabled]=\"!primaryIncomeForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Primary Income</th>\r\n                        <th>Primary Income Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let primary of model.businessAppraisal.primaryIncome\">\r\n                        <td>{{findValueFromKey(primary.incomeTypeKey, primaryIncomeTypeOrig)}}</td>\r\n                        <td>{{primary.incomeAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"editPIncome(primary)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"deletePIncome(primary)\" class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Primary Income:</b>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\" value=\"{{totalPrimaryIncome  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Secondary Income</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\" (click)=\"addSecondaryIncome()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"addSecondaryIncome\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onSecondaryIncomeFormSubmit()\" #secondaryIncomeForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Secondary Income</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Secondary Income\" [(ngModel)]=\"secondaryIncome.incomeTypeKey\"\r\n                                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of secondaryIncomeType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"secondryIncomeAmount\"\r\n                                      name=\"secondryIncomeAmount\" [(ngModel)]=\"secondaryIncome.incomeAmount\"\r\n                                      [errorStateMatcher]=\"matcher\" (keypress)=\"onlyNumbers($event)\" placeholder=\"Secondary Income Amount\"\r\n                                      #secondryIncomeAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"secondryIncomeAmount.invalid\">\r\n                                      secondary income is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\" [disabled]=\"!secondaryIncomeForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Secondary Income</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let secondary of model.businessAppraisal.secondaryIncome\">\r\n                        <td>{{findValueFromKey(secondary.incomeTypeKey, secondaryIncomeTypeOrig)}}</td>\r\n                        <td>{{secondary.incomeAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button  [disabled]=\"readonly && auth.role!='admin'\" (click)=\"editSIncome(secondary)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button  [disabled]=\"readonly && auth.role!='admin'\" (click)=\"deleteSIncome(secondary)\" class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a href=\"#\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-history\"></i>\r\n                          </a> -->\r\n                        </td>\r\n                      </tr>\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Secondary Income:</b>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\" value=\"{{totalSecondaryIncome  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"expensesTab\" role=\"tabpanel\" aria-labelledby=\"expensesTab\">\r\n            <div class=\"profitwrap\">\r\n              <div class=\"profitbx text-right mb-2 ml-2\">\r\n                <div>\r\n                  <b>Total Business Profit: {{businessProfit | currency:'PKR':''}}</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mb-2\">\r\n                <div>\r\n                  <b>Net Desposable Income: {{netDeposible | currency:'PKR':''}}</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"clearfix\"></div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Business Expenses</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\" (click)=\"BusinessExpenses()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"BusinessExpenses\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onBusinessExpenseFormSubmit()\" #businessExpenseForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Business Expenses</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Business Expenses Type\" [(ngModel)]=\"businessExpense.expTypKey\"\r\n                                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of businessExpenseType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"businessExpAmount\"\r\n                                      name=\"businessExpAmount\" [(ngModel)]=\"businessExpense.expAmount\"\r\n                                      [errorStateMatcher]=\"matcher\" (keypress)=\"onlyNumbers($event)\" placeholder=\"Expense Amount\"\r\n                                      #businessExpAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"businessExpAmount.invalid\">\r\n                                      business expense amount is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\" [disabled]=\"!businessExpenseForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Expense Type</th>\r\n                        <th>Expense Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let bExpense of model.businessAppraisal.businessExpense\">\r\n                        <td>{{findValueFromKey(bExpense.expTypKey, businessExpenseTypeOrig)}}</td>\r\n                        <td>{{bExpense.expAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"editBExpense(bExpense)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"deleteBExpense(bExpense)\" class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>-->\r\n                        </td>\r\n                      </tr>\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Business Expense:</b>\r\n                          <br>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\" value=\"{{totalBusinessExpense  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Household Expenses</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\" (click)=\"HouseholdExpenses()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"HouseholdExpenses\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onHouseholdExpenseFormSubmit()\" #householdExpenseForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Household Expenses</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Household Expenses Type\" [(ngModel)]=\"householdExpense.expTypKey\"\r\n                                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of houseHoldExpenseType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"hhExpAmount\"\r\n                                      name=\"hhExpAmount\" [(ngModel)]=\"householdExpense.expAmount\" [errorStateMatcher]=\"matcher\"\r\n                                      (keypress)=\"onlyNumbers($event)\" placeholder=\"Household Amount\" #hhExpAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"hhExpAmount.invalid\">\r\n                                      house hold expense amount is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\" [disabled]=\"!householdExpenseForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Expense Type</th>\r\n                        <th>Expense Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let hExpense of model.businessAppraisal.householdExpense\">\r\n                        <td>{{findValueFromKey(hExpense.expTypKey, houseHoldExpenseTypeOrig)}}</td>\r\n                        <td>{{hExpense.expAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" *ngIf=\"!hExpense.DSED\" (click)=\"editHExpense(hExpense)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" *ngIf=\"!hExpense.DSED\" (click)=\"deleteHExpense(hExpense)\" class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>-->\r\n                        </td>\r\n                      </tr>\r\n                      <!-- <tr *ngFor=\"let hExpense of model.businessAppraisal.householdExpense\">\r\n                        <td>Other Credits</td>\r\n                        <td>{{hExpense.expAmount}}</td>\r\n                        <td>\r\n                          <a (click)=\"editHExpense(hExpense)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </a>\r\n                          <a (click)=\"deleteHExpense(hExpense)\" class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </a>\r\n                           <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>\r\n                        </td>\r\n                      </tr> -->\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Household Expense:</b>\r\n                          <br>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\" value=\"{{totalHouseholdExpense  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"livestockTab\" role=\"tabpanel\" aria-labelledby=\"livestockTab\">\r\n            <div class=\"row\">\r\n              <div class=\"profitbx text-right mb-2 mr-2 ml-2\">\r\n                <div>\r\n                  <b>Total Head Count:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mb-2\">\r\n                <div>\r\n                  <b>Total Est. Market Value:</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 addBtn\">\r\n                <button class=\"btn btn-primary btn-sm\" [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" data-toggle=\"modal\" (click)=\"openLivestock()\"><i\r\n                    class=\"fa fa-plus\"></i> Add</button>\r\n                <div class=\"modal fade\" id=\"livestock\" role=\"dialog\">\r\n                  <div class=\"modal-dialog big mymodal\">\r\n\r\n                    <!-- Modal content-->\r\n                    <form (ngSubmit)=\"onSubmitLivestock()\" [formGroup]=\"livestockForm\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\">Add Animal</h5>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <div class=\"cRow\">\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Kind Of Animal:\" formControlName=\"kindOfAnimal\" name=\"key\"\r\n                                  [errorStateMatcher]=\"matcher\">\r\n                                  <mat-option [value]=\"1\">A 1</mat-option>\r\n                                  <mat-option [value]=\"2\">C 2</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select  [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Type:\" formControlName=\"animalType\" name=\"key1\"\r\n                                  [errorStateMatcher]=\"matcher\">\r\n                                  <mat-option [value]=\"1\">D2</mat-option>\r\n                                  <mat-option [value]=\"2\">E2</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" name=\"key2\" [disabled]=\"readonly && auth.role!='admin'\" matInput placeholder=\"Breed:\" [errorStateMatcher]=\"matcher\"\r\n                                  formControlName=\"breedVal\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" name=\"key3\" placeholder=\"Headcount:\" (keypress)=\"onlyNumbers($event)\"\r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"headcount\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" name=\"key4\" placeholder=\"Est. Market Value:\" (keypress)=\"onlyNumbers($event)\"\r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"marketVal\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"modal-footer text-center\">\r\n                          <button type=\"submit\" class=\"btn btn-primary btn-min\">Ok</button>\r\n                          <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\" id=\"myTable\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th>Sr. No.</th>\r\n                    <th>Kind Of Animal</th>\r\n                    <th>Type</th>\r\n                    <th>Breed</th>\r\n                    <th>Head Count</th>\r\n                    <th>Est. Market Value</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let stock of livestock\">\r\n                    <td>1</td>\r\n                    <td>{{stock.kindOfAnimal}}</td>\r\n                    <td>{{stock.animalType}}</td>\r\n                    <td>{{stock.breedVal}}</td>\r\n                    <td>{{stock.headcount}}</td>\r\n                    <td>{{stock.marketVal}}</td>\r\n                    <td>\r\n                      <a href=\"\" class=\"iconBtn simplebtn \"><i class=\"fa fa-pencil\"></i></a>\r\n                      <a href=\"\" class=\"iconBtn delBtn simplebtn \"><i class=\"fa fa-trash-o\"></i></a>\r\n                      <a href=\"\" class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"financeTab\" role=\"tabpanel\" aria-labelledby=\"financeTab\">\r\n            <div class=\"row\">\r\n              <div class=\"profitbx text-right mb-2 mr-2 ml-2\">\r\n                <div>\r\n                  <b>Total Head Count:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mr-2 mb-2\">\r\n                <div>\r\n                  <b>Total Est. Market Value:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mr-2 mb-2\">\r\n                <div>\r\n                  <b>% Funded by Client:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mr-2 mb-2\">\r\n                <div>\r\n                  <b>% Funded by Kashf:</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 addBtn\">\r\n                <button class=\"btn btn-primary btn-sm\" type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" data-toggle=\"modal\" (click)=\"openFinance()\"><i\r\n                    class=\"fa fa-plus\"></i> Add</button>\r\n                <div class=\"modal fade\" id=\"finance\" role=\"dialog\">\r\n                  <div class=\"modal-dialog big mymodal\">\r\n\r\n                    <!-- Modal content-->\r\n                    <form (ngSubmit)=\"onSubmitFinance()\" [formGroup]=\"financeForm\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\">Add Animal</h5>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <div class=\"cRow\">\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Kind Of Animal:\" formControlName=\"kindOfAnimal\" name=\"prdGrpSts\"\r\n                                  [errorStateMatcher]=\"matcher\">\r\n                                  <mat-option [value]=\"1\"></mat-option>\r\n                                  <mat-option [value]=\"2\"></mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Type:\" formControlName=\"animalType\" name=\"key1\"\r\n                                  [errorStateMatcher]=\"matcher\">\r\n                                  <mat-option [value]=\"1\"></mat-option>\r\n                                  <mat-option [value]=\"2\"></mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" name=\"key2\" matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Breed:\" [errorStateMatcher]=\"matcher\"\r\n                                  formControlName=\"breedVal\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" name=\"key3\" placeholder=\"Headcount:\" (keypress)=\"onlyNumbers($event)\"\r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"headcount\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" name=\"key4\" placeholder=\"Est. Purchase Value:\" (keypress)=\"onlyNumbers($event)\"\r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"purchaseVal\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" name=\"key5\" placeholder=\"Amount Financed By Client:\"\r\n                                  (keypress)=\"onlyNumbers($event)\" [errorStateMatcher]=\"matcher\" formControlName=\"finCliVal\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" name=\"key6\" placeholder=\"Amount Financed By Kashf:\"\r\n                                  (keypress)=\"onlyNumbers($event)\" [errorStateMatcher]=\"matcher\" formControlName=\"finKshVal\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"modal-footer text-center\">\r\n                          <button type=\"submit\" class=\"btn btn-primary btn-min\">Ok</button>\r\n                          <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\" id=\"myTable\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th>Sr. No.</th>\r\n                    <th>Kind Of Animal</th>\r\n                    <th>Type</th>\r\n                    <th>Breed</th>\r\n                    <th>Head Count</th>\r\n                    <th>Est. Purcahase Value</th>\r\n                    <th>Amount Financed by Client</th>\r\n                    <th>Amount Financed by Kashf</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let fin of finance\">\r\n                    <td>1</td>\r\n                    <td>{{fin.kindOfAnimal}}</td>\r\n                    <td>{{fin.animalType}}</td>\r\n                    <td>{{fin.breedVal}}</td>\r\n                    <td>{{fin.headcount}}</td>\r\n                    <td>{{fin.purchaseVal}}</td>\r\n                    <td>{{fin.finCliVal}}</td>\r\n                    <td>{{fin.finKshVal}}</td>\r\n                    <td>\r\n                      <a href=\"\" class=\"iconBtn simplebtn \"><i class=\"fa fa-pencil\"></i></a>\r\n                      <a href=\"\" class=\"iconBtn delBtn simplebtn \"><i class=\"fa fa-trash-o\"></i></a>\r\n                      <a href=\"\" class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <button (click)=\"continueClicked()\" [disabled]=\"!formSaved\" type=\"button\" class=\"btn btn-primary\">Continue</button>\r\n        <button class=\"btn btn-default\" [disabled]=\"readonly && auth.role!='admin'\" type=\"submit\">Save</button>\r\n      </form>\r\n\r\n      <div class=\"modal fade\" id=\"deletePConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Primary Income</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmPDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteSConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Secondary Income</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmSDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteBConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Business Expense</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmBDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteHConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Household Expense</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmHDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: MY_FORMATS, BusinessAppraisalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BusinessAppraisalComponent", function() { return BusinessAppraisalComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/models/address.model */ "./src/app/shared/models/address.model.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/models/PrimaryIncome.model */ "./src/app/shared/models/PrimaryIncome.model.ts");
/* harmony import */ var _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/models/BusinessExpense.model */ "./src/app/shared/models/BusinessExpense.model.ts");
/* harmony import */ var _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/models/BusinessAppraisal.model */ "./src/app/shared/models/BusinessAppraisal.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_16__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















var moment = moment__WEBPACK_IMPORTED_MODULE_16__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var BusinessAppraisalComponent = /** @class */ (function () {
    function BusinessAppraisalComponent(router, fb, loanService, commonService, spinner, breadcrumbProvider, toaster) {
        this.router = router;
        this.fb = fb;
        this.loanService = loanService;
        this.commonService = commonService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.livestock = [];
        this.finance = [];
        this.formSaved = false;
        this.coborrowerFormData = new Object();
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_12__["MyErrorStateMatcher"]();
        this.disFlags = [{ name: 'Yes', value: true }, { name: 'No', value: false }];
        this.otherLoanAmountPerMonth = 0;
        this.otherLoans = [];
        this.addresses = [];
        this.address = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.totalPrimaryIncome = 0;
        this.totalSecondaryIncome = 0;
        this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.totalBusinessExpense = 0;
        this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.totalHouseholdExpense = 0;
        this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.averageIncome = 0;
        this.netDeposible = 0;
        this.businessProfit = 0;
    }
    BusinessAppraisalComponent.prototype.onPersonelChange = function () {
        var p = this.findValueFromKey(this.model.businessAppraisal.personRunningBusinessKey, this.businessRunner);
        if (p == 'SELF') {
            this.cpPercentage = '100%';
        }
        else {
            this.cpPercentage = '50%';
        }
    };
    BusinessAppraisalComponent.prototype.calculateTotalMonth = function () {
        if (this.model.businessAppraisal.monthsInBusiness == null || this.model.businessAppraisal.monthsInBusiness == '') {
            this.model.businessAppraisal.monthsInBusiness = 0;
        }
        if (this.model.businessAppraisal.yearsInBusiness == '' || this.model.businessAppraisal.yearsInBusiness == null) {
            this.model.businessAppraisal.yearsInBusiness = 0;
        }
        if (this.model.businessAppraisal.monthsInBusiness == 0 && this.model.businessAppraisal.yearsInBusiness == 0) {
            this.toaster.error('Invalid Years/Months');
            return;
        }
        if ((this.model.businessAppraisal.monthsInBusiness == undefined || this.model.businessAppraisal.monthsInBusiness == null) && (this.model.businessAppraisal.yearsInBusiness == undefined || this.model.businessAppraisal.yearsInBusiness == null)) {
            this.totalmnths = null;
        }
        else if (this.model.businessAppraisal.yearsInBusiness == undefined || this.model.businessAppraisal.yearsInBusiness == null) {
            this.totalmnths = +this.model.businessAppraisal.monthsInBusiness;
        }
        else if (this.model.businessAppraisal.monthsInBusiness == undefined || this.model.businessAppraisal.monthsInBusiness == null) {
            this.totalmnths = Math.floor((+this.model.businessAppraisal.yearsInBusiness * 12));
        }
        else {
            this.totalmnths = Math.floor((+this.model.businessAppraisal.yearsInBusiness * 12) + +this.model.businessAppraisal.monthsInBusiness);
        }
    };
    // calculate
    BusinessAppraisalComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedbusiness', this.formSaved.toString());
    };
    BusinessAppraisalComponent.prototype.calculateTotalValues = function () {
        this.calculateTotalMonth();
        this.totalPrimaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.primaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.primaryIncome[i].incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
        }
        this.totalSecondaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.secondaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.secondaryIncome[i].incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
        }
        this.totalBusinessExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.businessExpense.length; i++) {
            var x = +this.model.businessAppraisal.businessExpense[i].expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
        }
        this.totalHouseholdExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.householdExpense.length; i++) {
            var x = +this.model.businessAppraisal.householdExpense[i].expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
        }
        this.incomeChange();
    };
    BusinessAppraisalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.livestockForm = this.fb.group({
            kindOfAnimal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            breedVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            headcount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            marketVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            animalType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required]
        });
        this.financeForm = this.fb.group({
            kindOfAnimal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            breedVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            headcount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            purchaseVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            animalType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            finCliVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            finKshVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required]
        });
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem("basicCrumbs"));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, "/loan-origination/app/" + element.formUrl, element.isSaved);
        });
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        console.log(this.model);
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (!this.model.businessAppraisal) {
            this.model.businessAppraisal = new _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_6__["BusinessAppraisal"](this.model.loanAppSeq, this.model.formSeq);
            this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
            this.model.businessAppraisal.primaryIncome = [];
            this.model.businessAppraisal.secondaryIncome = [];
            this.model.businessAppraisal.businessExpense = [];
            this.model.businessAppraisal.householdExpense = [];
        }
        else {
            this.calculateTotalValues();
        }
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.loanService.getBusinessAppraisal(this.model.loanAppSeq).subscribe(function (res) {
                console.log(res);
                if (res.BusinessApraisal != null && res.BusinessIncome != null) {
                    // this.addresses = res;
                    // this.addresses = res;
                    // this.model.businessAppraisal = res.BusinessAprasal;
                    Object.assign(_this.model.businessAppraisal, res.BusinessApraisal, _this.model.businessAppraisal);
                    Object.assign(_this.model.businessAppraisal, res.BusinessIncome, _this.model.businessAppraisal);
                    // this.model.businessAppraisal.primaryIncome = res.primaryIncome;
                    // this.model.businessAppraisal.secondaryIncome = res.secondaryIncome;
                    // this.model.businessAppraisal.businessExpense = res.businessExpense;
                    // this.model.businessAppraisal.householdExpense = res.householdExpense;
                    // this.model.businessAppraisal.businessAddress = res.BusinessAprasal;
                    var addr = res.BusinessApraisal;
                    _this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
                    _this.model.businessAppraisal.businessAddress.provinceName = addr.provinceName;
                    _this.model.businessAppraisal.businessAddress.districtName = addr.districtName;
                    _this.model.businessAppraisal.businessAddress.tehsilName = addr.tehsilName;
                    _this.model.businessAppraisal.businessAddress.ucName = addr.ucName;
                    _this.model.businessAppraisal.businessAddress.cityName = addr.cityName;
                    _this.model.businessAppraisal.businessAddress.houseNum = addr.houseNum;
                    _this.model.businessAppraisal.businessAddress.sreet_area = addr.sreet_area;
                    _this.model.businessAppraisal.businessAddress.village = addr.village;
                    _this.model.businessAppraisal.businessAddress.otherDetails = addr.otherDetails;
                    _this.model.businessAppraisal.businessAddress.city = addr.city;
                    _this.model.businessAppraisal.businessAddress.tehsil = addr.tehsil;
                    _this.model.businessAppraisal.businessAddress.district = addr.district;
                    _this.model.businessAppraisal.businessAddress.uc = addr.uc;
                    _this.model.businessAppraisal.businessAddress.community = addr.community;
                    // Object.assign(this.model.businessAppraisal.businessAddress, res.BusinessApraisal, this.model.businessAppraisal.businessAddress);
                    console.log(_this.model);
                    if (_this.model.businessAppraisal.activityKey != null && _this.model.businessAppraisal.activityKey != 0 && _this.model.businessAppraisal.activityKey != undefined) {
                        _this.loanService.getBusinessActyForActySeq(_this.model.businessAppraisal.activityKey).subscribe(function (res) {
                            console.log(res);
                            // this.model.
                            if (res.length > 0) {
                                _this.activity = res;
                                _this.model.businessAppraisal.sectorKey = res[0].bizSectSeq;
                            }
                        });
                    }
                }
                _this.calculateTotalValues();
                _this.onPersonelChange();
                _this.loadLovs();
                _this.onSectorChangeLocal();
            }, function (error) {
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            this.loadLovs();
            this.onSectorChangeLocal();
        }
        this.model.businessAppraisal.clientSeq = this.model.clientSeq;
        this.model.businessAppraisal.loanAppSeq = this.model.loanSeq;
        this.getLocations();
    };
    BusinessAppraisalComponent.prototype.getLocations = function () {
        var _this = this;
        this.loanService.getLocationsForPort(this.model.portSeq).subscribe(function (res) {
            console.log(res);
            _this.addresses = res;
            // this.addresses = res;
        }, function (error) {
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    BusinessAppraisalComponent.prototype.continueClicked = function () {
        var _this = this;
        // this.router.navigate(['loan-origination/expected-loan-utilication']);
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    BusinessAppraisalComponent.prototype.findValueFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == key) {
                    return array[i].codeValue;
                }
            }
        }
    };
    BusinessAppraisalComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue == value) {
                    return array[i].codeKey;
                }
            }
        }
        return -1;
    };
    BusinessAppraisalComponent.prototype.findSeqFromCd = function (cd, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeRefCd == cd) {
                    return array[i].codeKey;
                }
            }
        }
        return -1;
    };
    BusinessAppraisalComponent.prototype.findCdFromSeq = function (seq, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == seq) {
                    return array[i].codeRefCd;
                }
            }
        }
        return -1;
    };
    BusinessAppraisalComponent.prototype.onBusinessAppraisalFormSubmit = function () {
        var _this = this;
        this.spinner.show();
        console.log(this.model.businessAppraisal);
        // this.coborrowerFormData = Object.assign(this.coborrowerFormData ,this.model.coBorrower,this.model.coBorrowerAddress);
        // this.model.businessAppraisal.businessAddress.tehsil = '1';
        // this.model.businessAppraisal.businessAddress.union = '1';
        // this.model.businessAppraisal.businessAddress.uc = '1';
        // this.model.businessAppraisal.businessAddress.district = '1';
        // this.model.businessAppraisal.businessAddress.city = '1';
        if (this.model.businessAppraisal.monthsInBusiness == 0 && this.model.businessAppraisal.yearsInBusiness == 0) {
            this.toaster.error('Invalid Years/Months');
            this.spinner.hide();
            return;
        }
        if (!this.model.businessAppraisal.isbizAddrSAC) {
            if (this.model.businessAppraisal.businessAddress.provinceName == null ||
                this.model.businessAppraisal.businessAddress.provinceName === '' ||
                this.model.businessAppraisal.businessAddress.otherDetails == null ||
                this.model.businessAppraisal.businessAddress.otherDetails === '' ||
                this.model.businessAppraisal.businessAddress.houseNum == null ||
                this.model.businessAppraisal.businessAddress.houseNum === '' ||
                this.model.businessAppraisal.businessAddress.village == null ||
                this.model.businessAppraisal.businessAddress.village === '' ||
                this.model.businessAppraisal.businessAddress.otherDetails == null ||
                this.model.businessAppraisal.businessAddress.otherDetails === '') {
                $('#address-tab').click();
                this.toaster.warning('Fields Missing in Address');
                this.spinner.hide();
                return;
            }
        }
        if (this.model.businessAppraisal.maxMonthSale === null ||
            this.model.businessAppraisal.maxMonthSale === '' ||
            this.model.businessAppraisal.maxSaleMonth == null || this.model.businessAppraisal.maxSaleMonth === '' ||
            this.model.businessAppraisal.minMonthSale == null || this.model.businessAppraisal.minMonthSale === '' ||
            this.model.businessAppraisal.minSaleMonth == null || this.model.businessAppraisal.minSaleMonth === '') {
            $('#incomeid').click();
            this.toaster.warning('Fields Missing in Income');
            this.spinner.hide();
            return;
        }
        console.log(this.model.businessAppraisal.maxSaleMonth + this.model.businessAppraisal.minSaleMonth);
        if (this.model.businessAppraisal.maxSaleMonth > 12 || this.model.businessAppraisal.maxSaleMonth < 0
            || this.model.businessAppraisal.minSaleMonth > 12 || this.model.businessAppraisal.minSaleMonth < 0) {
            $('#incomeid').click();
            this.toaster.warning('invalid Months');
            this.spinner.hide();
            return;
        }
        // if (this.model.businessAppraisal.primaryIncome != null || this.model.businessAppraisal.primaryIncome != undefined) {
        //   if (this.model.businessAppraisal.primaryIncome.length <= 0) {
        //     this.toaster.error("Primary Income Missing."); this.spinner.hide();
        //     return;
        //   }
        // }
        if (this.model.businessAppraisal.businessExpense != null || this.model.businessAppraisal.businessExpense != undefined) {
            if (this.model.businessAppraisal.businessExpense.length <= 0) {
                $('#expensesTab').click();
                this.toaster.error("Business Expense Missing.");
                this.spinner.hide();
                return;
            }
        }
        if (this.model.businessAppraisal.householdExpense != null || this.model.businessAppraisal.householdExpense != undefined) {
            if (this.model.businessAppraisal.householdExpense.length <= 0) {
                $('#expensesTab').click();
                this.toaster.error("Household Expense Missing.");
                this.spinner.hide();
                return;
            }
        }
        if (this.model.businessAppraisal.householdExpense != null && this.model.businessAppraisal.householdExpense != undefined) {
            if (this.model.businessAppraisal.householdExpense.length == 1) {
                if (this.findCdFromSeq(this.model.businessAppraisal.householdExpense[0].expTypKey, this.houseHoldExpenseTypeOrig) == "0017") {
                    $('#expensesTab').click();
                    this.toaster.error("Add Household Expense.");
                    this.spinner.hide();
                    return;
                }
            }
        }
        var formData = new _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_6__["BusinessAppraisal"](this.model.loanAppSeq, this.model.formSeq);
        // let address = JSON.parse(JSON.stringify(this.model.businessAddress));
        // formData = Object.assign(this.model.businessAppraisal,formData, this.model.businessAddress);
        // console.log(formData)
        console.log(this.model.businessAppraisal2);
        this.model.businessAppraisal = Object.assign(this.model.businessAppraisal, this.model.businessAppraisal.businessAddress, this.model.businessAppraisal);
        console.log(this.model.businessAppraisal);
        this.model.businessAppraisal.loanAppSeq = this.model.loanAppSeq;
        this.model.businessAppraisal.formSeq = this.model.formSeq;
        if (this.model.businessAppraisal.bizAprslSeq != null && this.model.businessAppraisal.bizAprslSeq != "" && this.model.businessAppraisal.bizAprslSeq != 0) {
            this.formSaved = true;
            this.model.businessAppraisal.businessAddress.bizSeq = this.model.businessAppraisal.bizAprslSeq;
            console.log('EDIT');
            console.log(this.model.businessAppraisal);
            this.loanService.updateBusinessAppraisal(this.model.businessAppraisal).subscribe(function (res) {
                console.log(res);
                _this.formSaved = true;
                //   console.log(res.incomeHdrSeq);
                //   this.model.businessAppraisal.primaryIncome.forEach(obj => {
                //     obj.IncomeHdrSeq = res.incomeHdrSeq;
                //     this.incomeService(obj);
                //   });
                //   this.model.businessAppraisal.secondaryIncome.forEach(obj => {
                //     obj.IncomeHdrSeq = res.incomeHdrSeq;
                //     this.incomeService(obj);
                //   });
                //   this.model.businessAppraisal.businessExpense.forEach(obj =>{
                //     obj.bizAprslSeq = res.bizAprslSeq;
                //     this.loanService.saveExpense(obj);
                //   });
                //   this.model.businessAppraisal.householdExpense.forEach(obj =>{
                //     obj.bizAprslSeq = res.bizAprslSeq;
                //     this.loanService.saveExpense(obj);
                //   });
                //   console.log(this.model);
                // sessionStorage.setItem("model", JSON.stringify(this.model));
                _this.formSaved = true;
                _this.spinner.hide();
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
                console.log(_this.model);
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                console.log(JSON.parse(sessionStorage.getItem("model")));
                _this.spinner.hide();
            }, function (error) {
                _this.toaster.error("Error");
                _this.spinner.hide();
                console.log('err In Business Appraisal Service');
                console.log('err', error);
            });
        }
        else {
            this.loanService.saveBusinessAppraisal(this.model.businessAppraisal).subscribe(function (res) {
                console.log(res);
                _this.toaster.success("Saved");
                // console.log(res.incomeHdrSeq);
                // this.model.businessAppraisal.primaryIncome.forEach(obj => {
                //   obj.IncomeHdrSeq = res.incomeHdrSeq;
                //   this.incomeService(obj);
                // });
                // this.model.businessAppraisal.secondaryIncome.forEach(obj => {
                //   obj.IncomeHdrSeq = res.incomeHdrSeq;
                //   this.incomeService(obj);
                // });
                // this.model.businessAppraisal.businessExpense.forEach(obj => {
                //   obj.bizAprslSeq = res.bizAprslSeq;
                //   this.expenseService(obj);
                // });
                // this.model.businessAppraisal.householdExpense.forEach(obj => {
                //   obj.bizAprslSeq = res.bizAprslSeq;
                //   this.expenseService(obj);
                // });
                _this.model.businessAppraisal.bizAprslSeq = res.bizAprslSeq;
                _this.model.businessAppraisal.bizAddressSeq = res.bizAddressSeq;
                _this.model.businessAppraisal.incomeHdrSeq = res.incomeHdrSeq;
                _this.model.businessAddress = res.bizAddressSeq;
                _this.model.businessAppraisal.businessAddress.addrSeq = res.bizAddressSeq;
                console.log(_this.model);
                _this.spinner.hide();
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                console.log(JSON.parse(sessionStorage.getItem("model")));
                _this.formSaved = true;
            }, function (error) {
                _this.spinner.hide();
                console.log('err In Business Appraisal Service');
                console.log('err', error);
                _this.toaster.error("Error");
            });
        }
        // console.log(this.coborrowerFormData);
        // console.log(this.model);
        // this.loanService.saveNominee(this.coborrowerFormData).subscribe((res) =>{
        //   console.log(res);
        //   sessionStorage.setItem("model", JSON.stringify(this.model));
        //   this.formSaved = true;
        // },(error)  => {
        //   console.log("err In Loan Service");
        // 	console.log("err", error);
        // });
    };
    BusinessAppraisalComponent.prototype.selectAddress = function (add) {
        console.log(add);
        this.address = add;
        this.model.businessAppraisal.businessAddress.provinceName = add.provinceName;
        this.model.businessAppraisal.businessAddress.districtName = add.districtName;
        this.model.businessAppraisal.businessAddress.tehsilName = add.tehsilName;
        this.model.businessAppraisal.businessAddress.ucName = add.ucName;
        this.model.businessAppraisal.businessAddress.cityName = add.cityName;
        this.model.businessAppraisal.businessAddress.city = add.city;
        this.model.businessAppraisal.businessAddress.tehsil = add.tehsil;
        this.model.businessAppraisal.businessAddress.district = add.district;
        this.model.businessAppraisal.businessAddress.uc = add.uc;
        // Object.assign(this.model.businessAppraisal.businessAddress, add, this.model.businessAppraisal.businessAddress);
        console.log(this.model.businessAppraisal.businessAddress);
    };
    BusinessAppraisalComponent.prototype.addPrimaryIncome = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#addPrimaryIncome').modal('show');
        this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.isEdit = false;
    };
    BusinessAppraisalComponent.prototype.addSecondaryIncome = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#addSecondaryIncome').modal('show');
        this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.isEdit = false;
    };
    BusinessAppraisalComponent.prototype.HouseholdExpenses = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#HouseholdExpenses').modal('show');
        this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.isEdit = false;
    };
    BusinessAppraisalComponent.prototype.BusinessExpenses = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#BusinessExpenses').modal('show');
        this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.isEdit = false;
    };
    BusinessAppraisalComponent.prototype.onPrimaryIncomeFormSubmit = function () {
        this.primaryIncome.incomeCategoryKey = 1;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalPrimaryIncome = 0;
            this.model.businessAppraisal.primaryIncome[this.itemToEdit.index] = this.primaryIncome;
            for (var i = 0; i < this.model.businessAppraisal.primaryIncome.length; i++) {
                var x = +this.model.businessAppraisal.primaryIncome[i].incomeAmount;
                this.totalPrimaryIncome = this.totalPrimaryIncome + x;
            }
            ;
            this.removeItemsFromLOVUsingBizApp();
            $('#addPrimaryIncome').modal('hide');
            this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        }
        else {
            console.log(this.primaryIncome);
            if (this.model.businessAppraisal.primaryIncome == undefined)
                this.model.businessAppraisal.primaryIncome = [];
            this.model.businessAppraisal.primaryIncome.push(this.primaryIncome);
            var x = +this.primaryIncome.incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
            $('#addPrimaryIncome').modal('hide');
            this.removeItemsFromLOVUsingBizApp();
            this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    BusinessAppraisalComponent.prototype.onSecondaryIncomeFormSubmit = function () {
        this.secondaryIncome.incomeCategoryKey = 2;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalSecondaryIncome = 0;
            this.model.businessAppraisal.secondaryIncome[this.itemToEdit.index] = this.secondaryIncome;
            for (var i = 0; i < this.model.businessAppraisal.secondaryIncome.length; i++) {
                var x = +this.model.businessAppraisal.secondaryIncome[i].incomeAmount;
                this.totalSecondaryIncome = this.totalSecondaryIncome + x;
            }
            this.removeItemsFromLOVUsingBizApp();
            $('#addSecondaryIncome').modal('hide');
            this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        }
        else {
            console.log(this.secondaryIncome);
            if (this.model.businessAppraisal.secondaryIncome == undefined)
                this.model.businessAppraisal.secondaryIncome = [];
            this.model.businessAppraisal.secondaryIncome.push(this.secondaryIncome);
            var x = +this.secondaryIncome.incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
            $('#addSecondaryIncome').modal('hide');
            this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
            this.removeItemsFromLOVUsingBizApp();
            console.log(this.model.businessAppraisal.secondaryIncome);
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    BusinessAppraisalComponent.prototype.onBusinessExpenseFormSubmit = function () {
        this.businessExpense.expCategoryKey = 1;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalBusinessExpense = 0;
            this.model.businessAppraisal.businessExpense[this.itemToEdit.index] = this.businessExpense;
            for (var i = 0; i < this.model.businessAppraisal.businessExpense.length; i++) {
                var x = +this.model.businessAppraisal.businessExpense[i].expAmount;
                this.totalBusinessExpense = this.totalBusinessExpense + x;
            }
            this.removeItemsFromLOVUsingBizApp();
            $('#BusinessExpenses').modal('hide');
            this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        }
        else {
            if (this.model.businessAppraisal.businessExpense == undefined)
                this.model.businessAppraisal.businessExpense = [];
            this.model.businessAppraisal.businessExpense.push(this.businessExpense);
            var x = +this.businessExpense.expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
            this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
            this.removeItemsFromLOVUsingBizApp();
            $('#BusinessExpenses').modal('hide');
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    BusinessAppraisalComponent.prototype.onHouseholdExpenseFormSubmit = function () {
        this.householdExpense.expCategoryKey = 2;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalHouseholdExpense = 0;
            this.model.businessAppraisal.householdExpense[this.itemToEdit.index] = this.householdExpense;
            for (var i = 0; i < this.model.businessAppraisal.householdExpense.length; i++) {
                var x = +this.model.businessAppraisal.householdExpense[i].expAmount;
                this.totalHouseholdExpense = this.totalHouseholdExpense + x;
            }
            this.removeItemsFromLOVUsingBizApp();
            $('#HouseholdExpenses').modal('hide');
            this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        }
        else {
            if (this.model.businessAppraisal.householdExpense == undefined)
                this.model.businessAppraisal.householdExpense = [];
            this.model.businessAppraisal.householdExpense.push(this.householdExpense);
            var x = +this.householdExpense.expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
            this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
            this.removeItemsFromLOVUsingBizApp();
            $('#HouseholdExpenses').modal('hide');
            console.log(this.model.businessAppraisal.householdExpense);
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    BusinessAppraisalComponent.prototype.incomeService = function (income) {
        this.loanService.saveIncome(income).subscribe(function (res) {
            console.log(res);
        }, function (error) {
            console.log('err In ADD INCOME Service');
            console.log('err', error);
        });
    };
    BusinessAppraisalComponent.prototype.expenseService = function (expense) {
        this.loanService.saveExpense(expense).subscribe(function (res) {
            console.log(res);
        }, function (error) {
            console.log('err In Expense Service');
            console.log('err', error);
        });
    };
    BusinessAppraisalComponent.prototype.cancelClicked = function () {
    };
    BusinessAppraisalComponent.prototype.editPIncome = function (primaryIncome) {
        var _this = this;
        this.primaryIncome = JSON.parse(JSON.stringify(primaryIncome));
        this.itemToEdit = JSON.parse(JSON.stringify(primaryIncome));
        this.itemToEdit.index = this.model.businessAppraisal.primaryIncome.indexOf(primaryIncome);
        this.primaryIncomeTypeOrig.forEach(function (element) {
            if (element.codeKey == primaryIncome.incomeTypeKey) {
                _this.primaryIncomeType.push(element);
            }
        });
        $('#addPrimaryIncome').modal('show');
        this.isEdit = true;
    };
    BusinessAppraisalComponent.prototype.deletePIncome = function (pIncome) {
        $('#deletePConfirmation').modal('show');
        this.pItemToDel = pIncome;
    };
    BusinessAppraisalComponent.prototype.confirmPDelete = function () {
        var index = this.model.businessAppraisal.primaryIncome.indexOf(this.pItemToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.primaryIncome.splice(index, 1);
        }
        this.totalPrimaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.primaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.primaryIncome[i].incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#addPrimaryIncome').modal('hide');
        $('#deletePConfirmation').modal('hide');
    };
    BusinessAppraisalComponent.prototype.editSIncome = function (secondaryIncome) {
        var _this = this;
        this.secondaryIncome = JSON.parse(JSON.stringify(secondaryIncome));
        this.itemToEdit = JSON.parse(JSON.stringify(secondaryIncome));
        this.itemToEdit.index = this.model.businessAppraisal.secondaryIncome.indexOf(secondaryIncome);
        $('#addSecondaryIncome').modal('show');
        this.secondaryIncomeTypeOrig.forEach(function (element) {
            if (element.codeKey == secondaryIncome.incomeTypeKey) {
                _this.secondaryIncomeType.push(element);
            }
        });
        this.isEdit = true;
    };
    BusinessAppraisalComponent.prototype.deleteSIncome = function (sIncome) {
        this.sIncomeToDel = sIncome;
        $('#deleteSConfirmation').modal('show');
    };
    BusinessAppraisalComponent.prototype.confirmSDelete = function () {
        var index = this.model.businessAppraisal.secondaryIncome.indexOf(this.sIncomeToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.secondaryIncome.splice(index, 1);
        }
        this.totalSecondaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.secondaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.secondaryIncome[i].incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#addSecondaryIncome').modal('hide');
        $('#deleteSConfirmation').modal('hide');
    };
    BusinessAppraisalComponent.prototype.editBExpense = function (bExpense) {
        var _this = this;
        this.businessExpense = JSON.parse(JSON.stringify(bExpense));
        this.itemToEdit = JSON.parse(JSON.stringify(bExpense));
        this.itemToEdit.index = this.model.businessAppraisal.businessExpense.indexOf(bExpense);
        $('#BusinessExpenses').modal('show');
        this.businessExpenseTypeOrig.forEach(function (element) {
            if (element.codeKey == bExpense.expTypKey) {
                _this.businessExpenseType.push(element);
            }
        });
        this.isEdit = true;
    };
    BusinessAppraisalComponent.prototype.deleteBExpense = function (bExpense) {
        this.bExpenseToDel = bExpense;
        $('#deleteBConfirmation').modal('show');
    };
    BusinessAppraisalComponent.prototype.confirmBDelete = function () {
        var index = this.model.businessAppraisal.businessExpense.indexOf(this.bExpenseToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.businessExpense.splice(index, 1);
        }
        this.totalBusinessExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.businessExpense.length; i++) {
            var x = +this.model.businessAppraisal.businessExpense[i].expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#BusinessExpenses').modal('hide');
        $('#deleteBConfirmation').modal('hide');
    };
    BusinessAppraisalComponent.prototype.editHExpense = function (hExpense) {
        var _this = this;
        this.householdExpense = JSON.parse(JSON.stringify(hExpense));
        this.itemToEdit = JSON.parse(JSON.stringify(hExpense));
        this.itemToEdit.index = this.model.businessAppraisal.householdExpense.indexOf(hExpense);
        $('#HouseholdExpenses').modal('show');
        this.houseHoldExpenseTypeOrig.forEach(function (element) {
            if (element.codeKey == hExpense.expTypKey) {
                _this.houseHoldExpenseType.push(element);
            }
        });
        this.isEdit = true;
    };
    BusinessAppraisalComponent.prototype.deleteHExpense = function (hExpense) {
        this.hExpenseToDel = hExpense;
        $('#deleteHConfirmation').modal('show');
    };
    BusinessAppraisalComponent.prototype.confirmHDelete = function () {
        var index = this.model.businessAppraisal.householdExpense.indexOf(this.hExpenseToDel);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.householdExpense.splice(index, 1);
        }
        this.totalHouseholdExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.householdExpense.length; i++) {
            var x = +this.model.businessAppraisal.householdExpense[i].expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#HouseholdExpenses').modal('hide');
        $('#deleteHConfirmation').modal('hide');
    };
    BusinessAppraisalComponent.prototype.onSectorChange = function () {
        var _this = this;
        if (this.model.businessAppraisal.sectorKey > 0) {
            this.model.businessAppraisal.activityKey = undefined;
            this.spinner.show();
            this.commonService.getActivity(this.model.businessAppraisal.sectorKey).subscribe(function (res) {
                res.forEach(function (acty) {
                    if (acty.bizActySortOrdr == null) {
                        acty.bizActySortOrdr = 9999;
                    }
                });
                _this.activity = res;
                _this.sorting(_this.activity, 'bizActySortOrdr');
                _this.spinner.hide();
            }, function (error) {
                console.log('err', error);
                _this.spinner.hide();
            });
        }
    };
    BusinessAppraisalComponent.prototype.onSectorChangeLocal = function () {
        var _this = this;
        if (this.model.businessAppraisal.sectorKey > 0) {
            this.spinner.show();
            this.commonService.getActivity(this.model.businessAppraisal.sectorKey).subscribe(function (res) {
                _this.spinner.hide();
                _this.activity = res;
            }, function (error) {
                _this.spinner.hide();
                console.log('err', error);
            });
        }
    };
    BusinessAppraisalComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getSectors(this.model.loanProd).subscribe(function (res) {
            res.forEach(function (sect) {
                if (sect.bizSectSortOrdr == null) {
                    sect.bizSectSortOrdr = 9999;
                }
            });
            _this.sector = res;
            _this.sorting(_this.sector, 'bizSectSortOrdr');
            console.log(_this.sector);
        }, function (error) {
            console.log('err', error);
        });
        // this.commonService.getValues(REF_CD_GRP_KEYS.ACTIVITY).subscribe((res) => {
        //   this.activity = res;
        // }, (error) => {
        //   console.log('err', error);
        // });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_LOCATION"]).subscribe(function (res) {
            _this.propertyOwnership = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_RUNNER"]).subscribe(function (res) {
            _this.businessRunner = res;
            _this.onPersonelChange();
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_OWNERSHIP"]).subscribe(function (res) {
            _this.businessOwnership = res;
        }, function (error) {
            console.log('err', error);
        });
        // this.disability = this.lovService("OCCUPATION");
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["INCOME_TYPE"]).subscribe(function (res) {
            _this.primaryIncomeType = res;
            _this.primaryIncomeTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.businessAppraisal.primaryIncome.forEach(function (x) {
                _this.removeItemFromLOV(x.incomeTypeKey, _this.primaryIncomeType);
            });
            console.log(res);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SECOND_INCOME_SOURCE"]).subscribe(function (res) {
            _this.secondaryIncomeType = res;
            _this.secondaryIncomeTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.businessAppraisal.secondaryIncome.forEach(function (x) {
                _this.removeItemFromLOV(x.incomeTypeKey, _this.secondaryIncomeType);
            });
            console.log(res);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["HOUSEHOLD_EXPENSES"]).subscribe(function (res) {
            _this.houseHoldExpenseType = res;
            _this.houseHoldExpenseTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.businessAppraisal.householdExpense.forEach(function (x) {
                _this.removeItemFromLOV(x.expTypKey, _this.houseHoldExpenseType);
            });
            // Other Loans
            _this.loanService.getMfcibLoans(_this.model.loanAppSeq).subscribe(function (res) {
                _this.mfcibArray = res;
                var key = _this.findSeqFromCd("0017", _this.houseHoldExpenseTypeOrig);
                _this.model.businessAppraisal.householdExpense.forEach(function (exp) {
                    if (exp.expTypKey == key) {
                        exp.DSED = true;
                    }
                });
                res.forEach(function (obj) {
                    if (obj.loanCompletionDate) {
                        if (obj.isExpense) {
                            var date = new Date();
                            var months = _this.monthDiff(date, new Date(obj.loanCompletionDate));
                            if (months == 0) {
                                _this.otherLoanAmountPerMonth = +_this.otherLoanAmountPerMonth + +obj.currentOutStandingAmount;
                            }
                            else {
                                var amount = Math.floor(obj.currentOutStandingAmount / months);
                                _this.otherLoanAmountPerMonth = +_this.otherLoanAmountPerMonth + +amount;
                            }
                        }
                        var array = obj.loanCompletionDate.split('T', 1);
                        if (array.length) {
                            obj.loanCompletionDate = array[0];
                        }
                    }
                });
                if (_this.otherLoanAmountPerMonth > 0) {
                    var key_1 = _this.findSeqFromCd("0017", _this.houseHoldExpenseType);
                    if (key_1 >= 0) {
                        _this.model.businessAppraisal.householdExpense.forEach(function (expense) {
                            if (expense.expTypKey == key_1) {
                                var index = _this.model.businessAppraisal.householdExpense.indexOf(expense);
                                if (index >= 0) {
                                    _this.model.businessAppraisal.householdExpense.splice(index, 1);
                                }
                            }
                        });
                        var otherLoan = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
                        otherLoan.expAmount = "" + _this.otherLoanAmountPerMonth;
                        otherLoan.expTypKey = key_1;
                        otherLoan.expCategoryKey = 2;
                        otherLoan.DSED = true;
                        _this.model.businessAppraisal.householdExpense.push(otherLoan);
                        console.log(otherLoan);
                        _this.totalHouseholdExpense = _this.totalHouseholdExpense + +otherLoan.expAmount;
                        _this.removeItemFromLOV(key_1, _this.houseHoldExpenseType);
                        console.log(_this.houseHoldExpenseType);
                        console.log(_this.houseHoldExpenseTypeOrig);
                    }
                }
                console.log(_this.otherLoans);
            }, function (error) {
                console.log('err', error);
            });
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_EXPENSES"]).subscribe(function (res) {
            _this.businessExpenseType = res;
            _this.businessExpenseTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.businessAppraisal.businessExpense.forEach(function (x) {
                _this.removeItemFromLOV(x.expTypKey, _this.businessExpenseType);
            });
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getCommunityForPort(this.model.portKey).subscribe(function (res) {
            _this.communityArray = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    BusinessAppraisalComponent.prototype.removeItemsFromLOVUsingBizApp = function () {
        var _this = this;
        this.primaryIncomeType = JSON.parse(JSON.stringify(this.primaryIncomeTypeOrig));
        this.secondaryIncomeType = JSON.parse(JSON.stringify(this.secondaryIncomeTypeOrig));
        this.businessExpenseType = JSON.parse(JSON.stringify(this.businessExpenseTypeOrig));
        this.houseHoldExpenseType = JSON.parse(JSON.stringify(this.houseHoldExpenseTypeOrig));
        this.model.businessAppraisal.primaryIncome.forEach(function (x) {
            _this.removeItemFromLOV(x.incomeTypeKey, _this.primaryIncomeType);
        });
        this.model.businessAppraisal.secondaryIncome.forEach(function (x) {
            _this.removeItemFromLOV(x.incomeTypeKey, _this.secondaryIncomeType);
        });
        this.model.businessAppraisal.businessExpense.forEach(function (x) {
            _this.removeItemFromLOV(x.expTypKey, _this.businessExpenseType);
        });
        this.model.businessAppraisal.householdExpense.forEach(function (x) {
            _this.removeItemFromLOV(x.expTypKey, _this.houseHoldExpenseType);
        });
    };
    BusinessAppraisalComponent.prototype.removeItemFromLOV = function (key, lov) {
        var index = -1;
        for (var i = 0; i < lov.length; i++) {
            if (key == lov[i].codeKey) {
                index = i;
                break;
            }
        }
        if (index >= 0) {
            lov.splice(index, 1);
        }
    };
    BusinessAppraisalComponent.prototype.monthDiff = function (d1, d2) {
        var months;
        months = (d2.getFullYear() - d1.getFullYear()) * 12;
        months -= d1.getMonth() + 1;
        months += d2.getMonth();
        return months <= 0 ? 0 : months;
    };
    BusinessAppraisalComponent.prototype.incomeChange = function () {
        this.averageIncome = Math.floor(((this.model.businessAppraisal.maxMonthSale * this.model.businessAppraisal.maxSaleMonth) + (this.model.businessAppraisal.minMonthSale * this.model.businessAppraisal.minSaleMonth)) / 12);
        console.log(this.averageIncome);
        if (this.averageIncome == NaN)
            this.averageIncome = 0;
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    BusinessAppraisalComponent.prototype.maxMonthChange = function () {
        this.model.businessAppraisal.minSaleMonth = 12 - +this.model.businessAppraisal.maxSaleMonth;
        this.incomeChange();
    };
    BusinessAppraisalComponent.prototype.minMonthChange = function () {
        this.model.businessAppraisal.maxSaleMonth = 12 - +this.model.businessAppraisal.minSaleMonth;
    };
    BusinessAppraisalComponent.prototype.calculateNetDeposible = function () {
        this.netDeposible = this.totalPrimaryIncome + this.totalSecondaryIncome + this.averageIncome - this.totalBusinessExpense - this.totalHouseholdExpense;
    };
    BusinessAppraisalComponent.prototype.calculateBusinessProfit = function () {
        this.businessProfit = +this.averageIncome - +this.totalBusinessExpense;
    };
    BusinessAppraisalComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    BusinessAppraisalComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    BusinessAppraisalComponent.prototype.sameAsClientAddressChange = function () {
        console.log(this.model.city);
        if (this.model.businessAppraisal.isbizAddrSAC) {
            if (this.model.city == null || this.model.city <= 0) {
                this.toaster.show("Client Address not found!", "Error");
                this.model.businessAppraisal.isbizAddrSAC = false;
                return;
            }
            this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
            this.model.businessAppraisal.businessAddress.provinceName = this.model.provinceName;
            this.model.businessAppraisal.businessAddress.districtName = this.model.districtName;
            this.model.businessAppraisal.businessAddress.tehsilName = this.model.tehsilName;
            this.model.businessAppraisal.businessAddress.ucName = this.model.ucName;
            this.model.businessAppraisal.businessAddress.cityName = this.model.cityName;
            this.model.businessAppraisal.businessAddress.houseNum = this.model.houseNum;
            this.model.businessAppraisal.businessAddress.sreet_area = this.model.sreet_area;
            this.model.businessAppraisal.businessAddress.village = this.model.village;
            this.model.businessAppraisal.businessAddress.otherDetails = this.model.otherDetails;
            this.model.businessAppraisal.businessAddress.city = this.model.city;
            this.model.businessAppraisal.businessAddress.tehsil = this.model.tehsil;
            this.model.businessAppraisal.businessAddress.district = this.model.district;
            this.model.businessAppraisal.businessAddress.uc = this.model.uc;
            // this.model.businessAppraisal.businessAddress = <Address>JSON.parse(JSON.stringify(this.model));
            // this.model.businessAppraisal.businessAddress=Object.assign(this.model.businessAppraisal.businessAddress, this.model, this.model.businessAppraisal.businessAddress);
        }
        else {
            this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        }
    };
    BusinessAppraisalComponent.prototype.filterBy = function (prop, array) {
        if (array != undefined) {
            if (array.length) {
                return array.sort(function (a, b) { return a[prop] > b[prop] ? 1 : a[prop] === b[prop] ? 0 : -1; });
            }
        }
        return [];
    };
    BusinessAppraisalComponent.prototype.sortByKey = function (array, key) {
        return array.sort(function (a, b) {
            var x = (a[key] == null) ? 99 : a[key];
            var y = (b[key] == null) ? 99 : b[key];
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        });
    };
    BusinessAppraisalComponent.prototype.sorting = function (array, key) {
        function sortByKey(a, b) {
            var x = (a[key] == null) ? 99 : a[key];
            var y = (b[key] == null) ? 99 : b[key];
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        }
        // console.log(array.sort(sortByKey))
        array.sort(sortByKey);
    };
    //livestock
    BusinessAppraisalComponent.prototype.openLivestock = function () {
        $('#livestock').modal('show');
    };
    BusinessAppraisalComponent.prototype.onSubmitLivestock = function () {
        console.log(this.livestockForm);
        this.livestock.push(this.livestockForm.value);
        console.log(this.livestock);
    };
    //finance
    BusinessAppraisalComponent.prototype.openFinance = function () {
        $('#finance').modal('show');
    };
    BusinessAppraisalComponent.prototype.onSubmitFinance = function () {
        console.log(this.financeForm);
        this.finance.push(this.financeForm.value);
        console.log(this.finance);
    };
    BusinessAppraisalComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-business-appraisal',
            template: __webpack_require__(/*! ./business-appraisal.component.html */ "./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.html"),
            styles: [__webpack_require__(/*! ./business-appraisal.component.css */ "./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_15__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_14__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_15__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_15__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormBuilder"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__["LoanService"],
            _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_9__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_10__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_11__["ToastrService"]])
    ], BusinessAppraisalComponent);
    return BusinessAppraisalComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.css":
/*!*************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.css ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.html":
/*!**************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n    <div class=\"container-fluid\">\r\n      <app-breadcrumb></app-breadcrumb>\r\n      <div class=\"content\">\r\n        <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n  \r\n  \r\n        <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" id=\"nominee-tab\" data-toggle=\"tab\" href=\"#nominee\" role=\"tab\" aria-controls=\"home\"\r\n              aria-selected=\"true\">Client Relative Info</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" id=\"address-tab\" data-toggle=\"tab\" href=\"#addressTab\" role=\"tab\" aria-controls=\"addressTab\"\r\n              aria-selected=\"false\">Address</a>\r\n          </li>\r\n        </ul>\r\n        <form (ngSubmit)=\"onclientRelFormSubmit()\" #clientRelForm=\"ngForm\">\r\n  \r\n          <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\">\r\n            <div class=\"tab-pane fade show active\" id=\"nominee\" role=\"tabpanel\" aria-labelledby=\"nominee-tab\">\r\n              <!-- <div class=\"pt-1 pb-1\">\r\n                <label>Client Relative Same as Nominee</label>\r\n                <br>\r\n                <div class=\"custom-control custom-radio custom-control-inline\">\r\n                  <input type=\"radio\" id=\"sameAsBorrowerYes\" name=\"sameAsBorrowerYes\" class=\"custom-control-input\"\r\n                         [(ngModel)]=\"model.clientRel.isSame\" value=\"true\">\r\n                  <label class=\"custom-control-label\" for=\"sameAsBorrowerYes\">Yes</label>\r\n                </div>\r\n                <div class=\"custom-control custom-radio custom-control-inline\">\r\n                  <input type=\"radio\" id=\"sameAsBorrowerNo\" name=\"sameAsBorrowerNo\" class=\"custom-control-input\"\r\n                         [(ngModel)]=\"model.clientRel.isSame\" value=\"false\">\r\n                  <label class=\"custom-control-label\" for=\"sameAsBorrowerNo\">No</label>\r\n                </div>\r\n              </div> -->\r\n              <h6 class=\"colorBlack mt-2 mb-2\">Client Relative Detail</h6>\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keyup)=\"cnicPattern($event, 'clientRel')\" maxlength=\"15\" required pattern=\"^[0-9+]{5}-[0-9+]{7}-[0-9]{1}$\"\r\n                      id=\"cobCNIC\" name=\"cobCNIC\" matInput [disabled]=\"readonly\" placeholder=\"CNIC\" minlength=\"15\" #cobCNIC=\"ngModel\"\r\n                      [errorStateMatcher]=\"matcher\" [(ngModel)]=\"cnicPatternObj.cobCNIC\">\r\n                    <mat-error *ngIf=\"cobCNIC.invalid\">\r\n                      cnic number is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input matInput [readonly]=\"readonly\" [min]=\"now\" name=\"Expiry\" id=\"cnicExpryDate\" [(ngModel)]=\"model.clientRel.cnicExpryDate\"\r\n                      readonly disabled placeholder=\"CNIC Expiry Date\" [matDatepicker]=\"picker1\" #cnicExpryDate=\"ngModel\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker startView=\"year\" #picker1 disabled=\"false\"></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <button class=\"velBtn\" type=\"button\" *ngIf=\"!validated\" [disabled]=\"cobCNIC.invalid || cnicExpryDate.invalid\" (click)=\"validate()\">Validate\r\n                    with KASHF</button>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"validated\">\r\n                <div class=\"cRow\">\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyLetters($event)\" required matInput [readonly]=\"readonly && auth.role!='admin'\" id=\"firstName\" #firstName=\"ngModel\"\r\n                        pattern=\"([a-zA-Z ]{3,30}\\s*)+\" [errorStateMatcher]=\"matcher\" name=\"firstName\" [(ngModel)]=\"model.clientRel.firstName\"\r\n                        placeholder=\"First Name\">\r\n                      <mat-error *ngIf=\"firstName.invalid\">\r\n                        first name is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyLetters($event)\" id=\"lastName\" name=\"lastName\" #lastName=\"ngModel\"\r\n                        pattern=\"([a-zA-Z ]{3,30}\\s*)+\" [errorStateMatcher]=\"matcher\" [(ngModel)]=\"model.clientRel.lastName\"\r\n                        placeholder=\"Last Name\" matInput [readonly]=\"readonly && auth.role!='admin'\">\r\n                      <mat-error *ngIf=\"lastName.invalid\">\r\n                        last name is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <!-- <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"fatherFirstName\" name=\"fatherFirstName\" [(ngModel)]=\"model.clientRel.fatherFirstName\" placeholder=\"Father First Name\"\r\n                      matInput>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"fatherLastName\" name=\"fatherLastName\" [(ngModel)]=\"model.clientRel.fatherLastName\" placeholder=\"Father Last Name\"\r\n                      matInput>\r\n                  </mat-form-field>\r\n                </div> -->\r\n                  <div class=\"cCol1 \">\r\n                    <mat-form-field>\r\n                    \r\n                        <input matInput [disabled]=\"readonly\" (keypress)=\"onlyNumbers($event)\" type=\"text\" required maxlength=\"11\"\r\n                        [(ngModel)]=\"model.clientRel.phone\" id=\"phone\" name=\"phone\" placeholder=\"Phone No.\"\r\n                        pattern=\"^[0-9]{11}$\" [errorStateMatcher]=\"matcher\" #phone=\"ngModel\">\r\n                      <mat-error *ngIf=\"phone.invalid\">\r\n                        phone is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field> <!-- [max]=\"eightenYearsBefore\"  [min]=\"minDobYear\"-->\r\n                      <input matInput [readonly]=\"readonly\" required name=\"dob\" [matDatepicker]=\"picker3\" [max]=\"eightenYearsBefore\" \r\n                      (dateChange)=\"onDOBChange(model.clientRel.dob)\" placeholder=\"Date of birth\" [value]=\"date.value\" [(ngModel)]=\"model.clientRel.dob\" readonly\r\n                        disabled>\r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                      <mat-datepicker startView=\"multi-year\" #picker3 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1 \">\r\n                    <mat-form-field>\r\n                      <input matInput [readonly]=\"readonly\" type=\"text\" readonly disabled [(ngModel)]=\"age\" id=\"age\" name=\"age\" placeholder=\"Age\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly\" placeholder=\"Select Gender\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                        [(ngModel)]=\"model.clientRel.genderKey\" name=\"genderKey\" required>\r\n                        <mat-option *ngFor=\"let edu of gender\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"gender\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Gender\"\r\n                    [(ngModel)]=\"model.clientRel.genderKey\">\r\n                  </ng-select> -->\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly\" placeholder=\"Select Occupation\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                        [(ngModel)]=\"model.clientRel.occupationKey\" name=\"occupationKey\" required>\r\n                        <mat-option *ngFor=\"let edu of occupation\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"occupation\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Occupation\"\r\n                    [(ngModel)]=\"model.clientRel.occupationKey\"></ng-select> -->\r\n                  </div>\r\n  \r\n                </div>\r\n                <div class=\"cRow\">\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Relation\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                        [(ngModel)]=\"model.clientRel.relationKey\" name=\"relationKey\" required>\r\n                        <mat-option *ngFor=\"let edu of relationType\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"relationType\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Relationship with Client\"\r\n                    [(ngModel)]=\"model.clientRel.relationKey\"></ng-select> -->\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Marital Status\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                        [(ngModel)]=\"model.clientRel.maritalStatusKey\" name=\"maritalStatusKey\" required>\r\n                        <mat-option *ngFor=\"let edu of maritalStatus\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"maritalStatus\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Marital Status\"\r\n                    [(ngModel)]=\"model.clientRel.maritalStatusKey\"></ng-select> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"addressTab\" role=\"tabpanel\" aria-labelledby=\"address-tab\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"province\" name=\"province\" [(ngModel)]=\"model.clientRel.provinceName\"\r\n                      readonly placeholder=\"Province\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input required matInput readonly id=\"district\" name=\"district\" [(ngModel)]=\"model.clientRel.districtName\"\r\n                      readonly placeholder=\"District\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"tehsil\" name=\"tehsil\" [(ngModel)]=\"model.clientRel.tehsilName\"\r\n                      readonly placeholder=\"Tehsil\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"uc\" name=\"uc\" [(ngModel)]=\"model.clientRel.ucName\" readonly\r\n                      placeholder=\"UC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"city\" name=\"city\" [(ngModel)]=\"model.clientRel.cityName\"\r\n                      readonly placeholder=\"City\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 mt-3\">\r\n                  <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" class=\"btn btn-dots\" data-toggle=\"modal\" data-target=\"#Location\"></button>\r\n                </div>\r\n              </div>\r\n  \r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"houseNum\" required name=\"houseHum\" [(ngModel)]=\"model.clientRel.houseNum\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"House Number\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"street\" required name=\"street\" [(ngModel)]=\"model.clientRel.sreet_area\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Street/Area\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"village\" required name=\"village\" [(ngModel)]=\"model.clientRel.village\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Village\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"other\" name=\"other\" required [(ngModel)]=\"model.clientRel.otherDetails\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Other Details\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n  \r\n          <button (click)=\"continueClicked()\" [disabled]=\"!formSaved\" type=\"button\" class=\"btn btn-primary\">Continue</button>\r\n          <button class=\"btn btn-default\" [disabled]=\"readonly && auth.role!='admin'\"  type=\"submit\">Save</button>\r\n        </form>\r\n        <div class=\"modal fade\" id=\"Location\" role=\"dialog\">\r\n          <div class=\"modal-dialog bigger mymodal\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Location </h5>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table last-left\">\r\n                    <thead class=\"thead-light last-left\">\r\n                      <tr>\r\n                        <th>Province</th>\r\n                        <th>District</th>\r\n                        <th>Tehsil</th>\r\n                        <th width=\"20%\">UC</th>\r\n                        <th>City</th>\r\n                        <th>Select</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody class=\"evenodd\">\r\n                      <tr *ngFor=\"let address of addresses\">\r\n                        <td>{{address.provinceName}} </td>\r\n                        <td>{{address.districtName}}</td>\r\n                        <td>{{address.tehsilName}}</td>\r\n                        <td>{{address.ucName}}</td>\r\n                        <td>{{address.cityName}}</td>\r\n                        <td>\r\n                          <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"selectAddress(address)\">Select</button>\r\n                        </td>\r\n                      </tr>\r\n  \r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n  \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.ts":
/*!************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.ts ***!
  \************************************************************************************************/
/*! exports provided: MY_FORMATS, ClientRelativesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientRelativesComponent", function() { return ClientRelativesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/models/address.model */ "./src/app/shared/models/address.model.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/models/Nominee.model */ "./src/app/shared/models/Nominee.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/models/CNICPattern.model */ "./src/app/shared/models/CNICPattern.model.ts");
/* harmony import */ var _shared_models_History_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/models/History.model */ "./src/app/shared/models/History.model.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_15__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















var moment = moment__WEBPACK_IMPORTED_MODULE_15__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var ClientRelativesComponent = /** @class */ (function () {
    function ClientRelativesComponent(router, loanService, commonService, spinner, breadcrumbProvider, toaster) {
        this.router = router;
        this.loanService = loanService;
        this.commonService = commonService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.formSaved = false;
        this.clientRelFormData = new Object();
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_9__["MyErrorStateMatcher"]();
        this.validated = false;
        this.history = new _shared_models_History_model__WEBPACK_IMPORTED_MODULE_12__["History"]();
        this.hasCob = false;
        this.addresses = [];
        this.address = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        this.residenceArray = [];
        this.cnicPatternObj = new _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_11__["CNICPattern"]();
        this.clientPhone = "";
        this.validated = true;
        this.now = new Date();
        this.now.setDate((this.now.getDate() + 1));
        var month;
        if ((this.now.getMonth() + 1) < 10) {
            month = '0' + (this.now.getMonth());
        }
        else {
            month = '' + (this.now.getMonth());
        }
        var day;
        if ((this.now.getDate() + 1) < 10) {
            day = '0' + (this.now.getDate());
        }
        else {
            day = '' + (this.now.getDate());
        }
        var year = this.now.getFullYear();
        var currentDate = year + '-' + month + '-' + day;
        this.date = currentDate;
        this.eightenYearsBefore = new Date((year - 18), month, (+day - 1));
        this.minDobYear = new Date((year - 64), month, (+day + 1));
    }
    ClientRelativesComponent.prototype.validate = function () {
        var _this = this;
        if (/^([0-9])\1*$/.test(this.model.clientRel.cnicNum)) {
            this.toaster.error("Invalid CNIC", "CNIC Number");
            this.spinner.hide();
            return;
        }
        if (this.model.clientRel.cnicExpryDate == undefined || this.model.clientRel.cnicExpryDate == '') {
            this.toaster.error("Select CNIC Expiry Date");
            return;
        }
        if (this.model.cnicNum == this.model.clientRel.cnicNum) {
            this.toaster.error("Client Relative can not be same as Client");
            return;
        }
        var newNom = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_4__["Nominee"]();
        newNom.cnicNum = this.model.clientRel.cnicNum;
        newNom.cnicExpryDate = this.model.clientRel.cnicExpryDate;
        this.model.clientRel = newNom;
        this.clientPhone = "";
        this.age = null;
        this.spinner.show();
        this.loanService.validateCNIC(this.model.clientRel.cnicNum).subscribe(function (res) {
            _this.spinner.hide();
            console.log(res);
            // if(res.canProceed){
            //   if (res.client) {
            //     this.history = Object.assign(this.history, res.client, this.history);
            //     this.model.clientRel = this.history;
            //   }else if (res.clientRel) {
            //     this.history = Object.assign(this.history, res.clientRel, this.history);
            //     this.model.clientRel = this.history;
            //   }
            //   this.validated = true;
            // }else if( !res.canProceed){
            //   this.toaster.error(res.reason);
            // }
            if (res.client) {
                _this.history = Object.assign(_this.history, res.client, _this.history);
                _this.history.title = "Client";
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else if (res.clientRel) {
                _this.history = Object.assign(_this.history, res.clientRel, _this.history);
                _this.history.title = "Client";
                if (_this.history.type == "1") {
                    _this.history.title = "Nominee";
                }
                else if (_this.history.type == "3") {
                    _this.history.title = "Coborrower";
                }
                else if (_this.history.type == "2") {
                    _this.history.title = "Next-of-Kin";
                }
                else if (_this.history.type == "4") {
                    _this.history.title = "Client Relative";
                }
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else {
                _this.validated = true;
            }
            console.log(_this.history);
        }, function (error) {
            _this.spinner.hide();
        });
        if (+this.model.clientRel.cnicNum % 2) {
            this.model.clientRel.genderKey = this.findKeyFromValue('MALE', this.gender);
        }
        else {
            this.model.clientRel.genderKey = this.findKeyFromValue('FEMALE', this.gender);
        }
    };
    ClientRelativesComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedBorrower', this.formSaved.toString());
    };
    ClientRelativesComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (!this.model.clientRel) {
            this.model.clientRel = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_4__["Nominee"]();
        }
        this.model.clientRel.loanAppSeq = this.model.loanAppSeq;
        this.model.clientRel.formSeq = this.model.formSeq;
        this.model.clientRel.typFlg = 4;
        if (!this.model.clientRelAddress) {
            this.model.clientRelAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        }
        this.model.clientRel.clientSeq = this.model.clientSeq;
        this.getLocations();
        console.log(this.model);
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.loanService.getClntRel(this.model.clientRel).subscribe(function (res) {
                console.log(res);
                if (res != null && +res.cnicNum != 0) {
                    _this.validated = true;
                    _this.formSaved = true;
                    _this.hasCob = true;
                    res.clientSeq = _this.model.clientSeq;
                    _this.model.clientRel = res;
                    // Object.assign(this.model.clientRelAddress, res, this.model.clientRel);
                    var array = void 0;
                    if (_this.model.clientRel.dob) {
                        array = _this.model.clientRel.dob.split('T', 1);
                        console.log(array.length);
                        if (array.length) {
                            _this.model.clientRel.dob = array[0];
                        }
                    }
                    console.log(_this.model.clientRel.cnicExpryDate);
                    if (_this.model.clientRel.cnicExpryDate) {
                        array = _this.model.clientRel.cnicExpryDate.split('T', 1);
                        console.log(array.length);
                        console.log(array[0]);
                        if (array.length) {
                            _this.model.clientRel.cnicExpryDate = array[0];
                        }
                    }
                    _this.setPattern();
                    console.log(_this.model.clientRel.cnicExpryDate);
                    _this.clientPhone = _this.model.clientRel.phone;
                    _this.age = _this.calculateAge(new Date(_this.model.clientRel.dob));
                }
                else {
                    _this.getPreviousClientRel();
                }
            }, function (error) {
                console.log('err', error);
            });
            console.log(this.model);
        }
        else if (this.model.clientRel.clntRelSeq != undefined && this.model.clientRel.clntRelSeq != 0) {
            this.hasCob = true;
            this.validated = true;
            this.clientPhone = this.model.clientRel.phone;
            this.age = this.calculateAge(new Date(this.model.clientRel.dob));
            this.setPattern();
        }
        else {
            this.getPreviousClientRel();
        }
        this.loadLovs();
    };
    ClientRelativesComponent.prototype.getPreviousClientRel = function () {
        var _this = this;
        this.loanService.getClientRelFromPreviousLoan(this.model.clientRel).subscribe(function (res) {
            if (res != null) {
                _this.validated = true;
                res.clientSeq = _this.model.clientSeq;
                res.loanAppSeq = _this.model.loanAppSeq;
                res.clientRelSeq = null;
                res.formSeq = _this.model.formSeq;
                res.clntRelSeq = null;
                _this.model.clientRel = res;
                // Object.assign(this.model.clientRelAddress, res, this.model.clientRel);
                var array = void 0;
                if (_this.model.clientRel.dob) {
                    array = _this.model.clientRel.dob.split('T', 1);
                    console.log(array.length);
                    if (array.length) {
                        _this.model.clientRel.dob = array[0];
                    }
                }
                console.log(_this.model.clientRel.cnicExpryDate);
                if (_this.model.clientRel.cnicExpryDate) {
                    array = _this.model.clientRel.cnicExpryDate.split('T', 1);
                    console.log(array.length);
                    console.log(array[0]);
                    if (array.length) {
                        _this.model.clientRel.cnicExpryDate = array[0];
                    }
                }
                _this.setPattern();
                console.log(_this.model.clientRel.cnicExpryDate);
                _this.clientPhone = _this.model.clientRel.phone;
                _this.age = _this.calculateAge(new Date(_this.model.clientRel.dob));
            }
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, 'Error');
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    ClientRelativesComponent.prototype.onDOBChange = function (dob) {
        this.age = this.calculateAge(new Date(dob));
    };
    ClientRelativesComponent.prototype.calculateAge = function (birthday) {
        var ageDifMs = Date.now() - birthday.getTime();
        var ageDate = new Date(ageDifMs); // miliseconds from epoch
        return Math.abs(ageDate.getUTCFullYear() - 1970);
    };
    ClientRelativesComponent.prototype.continueClicked = function () {
        var _this = this;
        // this.router.navigate(['loan-origination/business-appraisal']);
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                    _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    ClientRelativesComponent.prototype.getLocations = function () {
        var _this = this;
        this.loanService.getLocationsForPort(this.model.portSeq).subscribe(function (res) {
            console.log(res);
            _this.addresses = res;
            // this.addresses = res;
        }, function (error) {
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    ClientRelativesComponent.prototype.onclientRelFormSubmit = function () {
        var _this = this;
        this.spinner.show();
        if (this.model.clientRel.provinceName == null || this.model.clientRel.provinceName === '' || this.model.clientRel.otherDetails == null ||
            this.model.clientRel.otherDetails === '' ||
            this.model.clientRel.houseNum == null || this.model.clientRel.houseNum === '' || this.model.clientRel.village == null ||
            this.model.clientRel.village === '' || this.model.clientRel.otherDetails == null || this.model.clientRel.otherDetails === '') {
            $('#address-tab').click();
            this.toaster.warning('Fields Missing in Address');
            this.spinner.hide();
            return;
        }
        // this.model.clientRel = Object.assign(this.clientRelFormData, this.model.clientRel, this.model.clientRel);
        this.model.clientRel.formSeq = this.model.formSeq;
        // this.clientRelFormData.tehsil = '1';
        // this.clientRelFormData.union = '1';
        // this.clientRelFormData.uc = '1';
        // this.clientRelFormData.district = '1';
        // this.clientRelFormData.city = '1';
        // this.clientRelFormData.province='1';
        console.log(this.clientRelFormData);
        this.model.clientRel.loanAppSeq = this.model.loanAppSeq;
        console.log(this.model);
        if (this.hasCob) {
            console.log('EDIT');
            this.model.clientRel.typFlg = 4;
            this.model.clientRel.isclientRel = true;
            console.log(this.clientRelFormData);
            this.loanService.updateClientRel(this.model.clientRel).subscribe(function (res) {
                _this.spinner.hide();
                console.log(res);
                _this.model.clientRel.clntRelSeq = res.clntRelSeq;
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
                _this.toaster.success('Saved');
            }, function (error) {
                _this.spinner.hide();
                // this.toaster.error(error.error.error, 'Error');
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            this.model.clientRel.typFlg = 4;
            this.loanService.saveClientRel(this.model.clientRel).subscribe(function (res) {
                _this.spinner.hide();
                console.log(res);
                _this.model.clientRel.clntRelSeq = res.clntRelSeq;
                _this.formSaved = true;
                _this.hasCob = true;
                _this.toaster.success('Saved');
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        console.log(forms);
                        console.log(_this.router.url);
                        console.log('/loan-origination/app/' + forms.formUrl);
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                            console.log('TREIIII');
                            console.log(forms);
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }, function (error) {
                _this.spinner.hide();
                _this.toaster.error(error.error.error, 'Error');
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
    };
    ClientRelativesComponent.prototype.selectAddress = function (add) {
        this.address = add;
        Object.assign(this.model.clientRel, add, this.model.clientRel);
        console.log(this.model.clientRel);
    };
    ClientRelativesComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["RELATIVE_RELATION_KEL"]).subscribe(function (res) {
            _this.relationType = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["OCCUPATION"]).subscribe(function (res) {
            _this.occupation = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["GENDER"]).subscribe(function (res) {
            _this.gender = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["MARITAL_STATUS"]).subscribe(function (res) {
            _this.maritalStatus = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    ClientRelativesComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    ClientRelativesComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    ClientRelativesComponent.prototype.setPattern = function () {
        var _this = this;
        ///  CNIC Pattern
        this.cnicPatternObj.cobCNIC = "";
        var str = this.model.clientRel.cnicNum + "";
        var charArray = str.split("");
        charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + '-';
            _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + item;
        });
    };
    ClientRelativesComponent.prototype.cnicPattern = function (event, type) {
        var _this = this;
        if (this.readonly) {
            this.readonly = false;
        }
        // this.validated = false;
        var dt = this.model.clientRel.cnicExpryDate;
        this.model.clientRel = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_4__["Nominee"]();
        this.model.clientRel.cnicExpryDate = dt;
        this.age = "";
        // this.model.clientRel = new Nominee();
        if (event.keyCode == 8 || event.keyCode == 9
            || event.keyCode == 27 || event.keyCode == 13
            || (event.keyCode == 65 && event.ctrlKey === true))
            return;
        if ((event.keyCode < 48 || event.keyCode > 57))
            event.preventDefault();
        var length = 0;
        if (type == "client") {
            if (this.cnicPatternObj.clientCNIC.length)
                length = this.cnicPatternObj.clientCNIC.length;
            if (length <= 15) {
                this.cnicPatternObj.clientCNIC = this.cnicPatternObj.clientCNIC.replace(/-/g, '');
                var array = this.cnicPatternObj.clientCNIC.split('');
                this.cnicPatternObj.clientCNIC = "";
                this.model.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + "-";
                        }
                        if (_this.cnicPatternObj.clientCNIC.length < 15) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + char;
                            _this.model.cnicNum = _this.model.cnicNum + char;
                        }
                    }
                });
            }
        }
        else if (type == "nominee") {
            if (this.cnicPatternObj.nomCnic.length)
                length = this.cnicPatternObj.nomCnic.length;
            if (length < 15) {
                this.cnicPatternObj.nomCnic = this.cnicPatternObj.nomCnic.replace(/-/g, '');
                var array = this.cnicPatternObj.nomCnic.split('');
                this.cnicPatternObj.nomCnic = "";
                this.model.nominee.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + "-";
                        }
                        if (_this.cnicPatternObj.nomCnic.length < 15) {
                            _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + char;
                            _this.model.nominee.cnicNum = _this.model.nominee.cnicNum + char;
                        }
                    }
                });
            }
        }
        else if (type == "clientRel") {
            if (this.cnicPatternObj.cobCNIC.length)
                length = this.cnicPatternObj.cobCNIC.length;
            this.cnicPatternObj.cobCNIC = this.cnicPatternObj.cobCNIC.replace(/-/g, '');
            var array = this.cnicPatternObj.cobCNIC.split('');
            this.cnicPatternObj.cobCNIC = "";
            this.model.clientRel.cnicNum = "";
            array.forEach(function (char, index) {
                var asciiCode = char.charCodeAt(0);
                if (asciiCode >= 48 && asciiCode <= 57) {
                    if (index == 5 || index == 12) {
                        _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + "-";
                    }
                    if (_this.cnicPatternObj.cobCNIC.length < 15) {
                        _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + char;
                        _this.model.clientRel.cnicNum = _this.model.clientRel.cnicNum + char;
                    }
                }
            });
        }
    };
    // cnicPattern(event: any, type: any) {
    //   console.log(event)
    //   if (event.charCode == 8 || event.charCode == 9
    //     || event.charCode == 27 || event.charCode == 13
    //     || (event.charCode == 65 && event.ctrlKey === true))
    //     return;
    //   if ((event.charCode < 48 || event.charCode > 57))
    //     event.preventDefault();
    // this.validated = false;
    //   let length: number = 0;
    //   if (type == "client") {
    //     if (this.cnicPatternObj.clientCNIC.length)
    //       length = this.cnicPatternObj.clientCNIC.length;
    //     if (length < 15) {
    //       if (length == 5 || length == 13)
    //         this.cnicPatternObj.clientCNIC = this.cnicPatternObj.clientCNIC + "-";
    //       this.model.cnicNum = this.cnicPatternObj.clientCNIC.replace(/-/g, '');
    //       this.model.cnicNum = this.model.cnicNum + event.key;
    //     }
    //   } else if (type == "nominee") {
    //     if (this.cnicPatternObj.nomCnic.length)
    //       length = this.cnicPatternObj.nomCnic.length;
    //     if (length < 15) {
    //       if (length == 5 || length == 13)
    //         this.cnicPatternObj.nomCnic = this.cnicPatternObj.nomCnic + "-";
    //       if (this.model.nominee.cnicNum == undefined)
    //         this.model.nominee.cnicNum = "";
    //       this.model.nominee.cnicNum = this.cnicPatternObj.nomCnic.replace(/-/g, '');
    //       this.model.nominee.cnicNum = this.model.nominee.cnicNum + event.key;
    //     }
    //   } else if (type == "clientRel") {
    //     if (this.cnicPatternObj.cobCNIC.length)
    //       length = this.cnicPatternObj.cobCNIC.length;
    //     if (length < 15) {
    //       if (length == 5 || length == 13)
    //         this.cnicPatternObj.cobCNIC = this.cnicPatternObj.cobCNIC + "-";
    //       this.model.clientRel.cnicNum = this.cnicPatternObj.cobCNIC.replace(/-/g, '');
    //       this.model.clientRel.cnicNum = this.model.clientRel.cnicNum + event.key;
    //     }
    //   }
    // }
    ClientRelativesComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue == value) {
                    return array[i].codeKey;
                }
            }
        }
    };
    ClientRelativesComponent.prototype.phoneNumber = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
        if (this.clientPhone.length == 0)
            this.clientPhone = "(" + this.clientPhone;
        if (this.clientPhone.length == 5)
            this.clientPhone = this.clientPhone + ")";
        if (this.clientPhone.length < 13) {
            this.model.clientRel.phone = this.clientPhone.replace(/[(]/g, '');
            this.model.clientRel.phone = this.clientPhone.replace(/[)]/g, '');
            this.model.clientRel.phone = this.clientPhone.replace(/ /g, '');
            this.model.clientRel.phone = this.model.clientRel.phone + event.key;
        }
        console.log(this.model.nominee.phone);
    };
    ClientRelativesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-client-relatives',
            template: __webpack_require__(/*! ./client-relatives.component.html */ "./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.html"),
            styles: [__webpack_require__(/*! ./client-relatives.component.css */ "./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_14__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_13__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_14__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_14__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__["LoanService"], _shared_services_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_6__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_7__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_8__["ToastrService"]])
    ], ClientRelativesComponent);
    return ClientRelativesComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.css":
/*!***************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.css ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div *ngIf=\"model.selfPDC\">\r\n      <h1 *ngIf=\"model.selfPDC\"> Self PDC </h1>\r\n      <button (click)=\"continueClicked()\" *ngIf=\"model.selfPDC\" class=\"btn btn-primary\">Continue</button>\r\n    </div>\r\n    <div *ngIf=\"model.isSAN && !model.selfPDC\">\r\n      <h1> Co-Borrower Same as Nominee </h1>\r\n      <button (click)=\"continueClicked()\" class=\"btn btn-primary\">Continue</button>\r\n    </div>\r\n    <div class=\"content\" *ngIf=\"!model.selfPDC && !model.isSAN\">\r\n      <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n\r\n\r\n      <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" id=\"nominee-tab\" data-toggle=\"tab\" href=\"#nominee\" role=\"tab\" aria-controls=\"home\"\r\n            aria-selected=\"true\">Co-borrower\r\n            Info\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"!model.relAddrAsClntFlg\">\r\n          <a class=\"nav-link\" id=\"address-tab\" data-toggle=\"tab\" href=\"#addressTab\" role=\"tab\"\r\n            aria-controls=\"addressTab\" aria-selected=\"false\">Address</a>\r\n        </li>\r\n      </ul>\r\n      <form (ngSubmit)=\"onCoBorrowerFormSubmit()\" #coBorrowerForm=\"ngForm\">\r\n\r\n        <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"nominee\" role=\"tabpanel\" aria-labelledby=\"nominee-tab\">\r\n            <!-- <div class=\"pt-1 pb-1\">\r\n              <label>Co-borrower Same as Nominee</label>\r\n              <br>\r\n              <div class=\"custom-control custom-radio custom-control-inline\">\r\n                <input type=\"radio\" id=\"sameAsBorrowerYes\" name=\"sameAsBorrowerYes\" class=\"custom-control-input\"\r\n                       [(ngModel)]=\"model.coBorrower.isSame\" value=\"true\">\r\n                <label class=\"custom-control-label\" for=\"sameAsBorrowerYes\">Yes</label>\r\n              </div>\r\n              <div class=\"custom-control custom-radio custom-control-inline\">\r\n                <input type=\"radio\" id=\"sameAsBorrowerNo\" name=\"sameAsBorrowerNo\" class=\"custom-control-input\"\r\n                       [(ngModel)]=\"model.coBorrower.isSame\" value=\"false\">\r\n                <label class=\"custom-control-label\" for=\"sameAsBorrowerNo\">No</label>\r\n              </div>\r\n            </div> -->\r\n            <h6 class=\"colorBlack mt-2 mb-2\">Co-borrower Detail</h6>\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keyup)=\"cnicPattern($event, 'co-borrower')\" maxlength=\"15\" required\r\n                    pattern=\"^[0-9+]{5}-[0-9+]{7}-[0-9]{1}$\" id=\"cobCNIC\" name=\"cobCNIC\" [disabled]=\"validated && !readonly\" matInput\r\n                    placeholder=\"CNIC\" minlength=\"15\" #cobCNIC=\"ngModel\" [errorStateMatcher]=\"matcher\"\r\n                    [(ngModel)]=\"cnicPatternObj.cobCNIC\">\r\n                  <mat-error *ngIf=\"cobCNIC.invalid\">\r\n                    cnic number is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input matInput [disabled]=\"readonly && auth.role!='admin'\" [min]=\"now\" name=\"Expiry\" id=\"cnicExpryDate\"\r\n                    [(ngModel)]=\"model.coBorrower.cnicExpryDate\" readonly disabled placeholder=\"CNIC Expiry Date\" (dateChange)=\"onExpChange(model.coBorrower.cnicExpryDate)\"\r\n                    [matDatepicker]=\"picker1\" #cnicExpryDate=\"ngModel\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                  <mat-datepicker startView=\"year\" #picker1 disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <button class=\"velBtn\" type=\"button\" *ngIf=\"!validated\" [disabled]=\"cobCNIC.invalid || cnicExpryDate.invalid\"\r\n                  (click)=\"validate()\">Validate\r\n                  with KASHF</button>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"validated\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyLetters($event)\" required [disabled]=\"readonly && auth.role!='admin'\" matInput\r\n                      id=\"firstName\" #firstName=\"ngModel\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" [errorStateMatcher]=\"matcher\"\r\n                      name=\"firstName\" [(ngModel)]=\"model.coBorrower.firstName\" placeholder=\"First Name\">\r\n                    <mat-error *ngIf=\"firstName.invalid\">\r\n                      first name is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyLetters($event)\" id=\"lastName\" name=\"lastName\"\r\n                      #lastName=\"ngModel\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" [errorStateMatcher]=\"matcher\"\r\n                      [(ngModel)]=\"model.coBorrower.lastName\" placeholder=\"Last Name\" matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"lastName.invalid\">\r\n                      last name is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"fatherFirstName\" name=\"fatherFirstName\" required\r\n                      [(ngModel)]=\"model.coBorrower.fatherFirstName\" placeholder=\"Father First Name\" matInput\r\n                      [disabled]=\"readonly\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"fatherLastName\" name=\"fatherLastName\" required\r\n                      [(ngModel)]=\"model.coBorrower.fatherLastName\" placeholder=\"Father Last Name\" matInput\r\n                      [disabled]=\"readonly\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput [disabled]=\"readonly\" (keypress)=\"onlyNumbers($event)\" type=\"text\" required maxlength=\"11\"\r\n                      [(ngModel)]=\"model.coBorrower.phone\" id=\"phone\" name=\"phone\" placeholder=\"Phone No.\"\r\n                      pattern=\"^[0-9]{11}$\" [errorStateMatcher]=\"matcher\" #phone=\"ngModel\">\r\n                    <mat-error *ngIf=\"phone.invalid\">\r\n                      phone is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" required name=\"dob\" [matDatepicker]=\"picker3\" [max]=\"eightenYearsBefore\" [min]=\"minDobYear\" \r\n                      (dateChange)=\"onDOBChange(model.coBorrower.dob)\" placeholder=\"Date of birth\" [value]=\"date.value\"\r\n                      [(ngModel)]=\"model.coBorrower.dob\" readonly disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker startView=\"multi-year\" #picker3 disabled=\"false\"></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput [disabled]=\"readonly\" type=\"text\" readonly disabled [(ngModel)]=\"age\" id=\"age\"\r\n                      name=\"age\" placeholder=\"Age\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Select Gender\" [errorStateMatcher]=\"matcher\"\r\n                      pattern=\"^[1-9]\\d*$\" [(ngModel)]=\"model.coBorrower.genderKey\" name=\"genderKey\" required>\r\n                      <mat-option *ngFor=\"let edu of gender\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"gender\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Gender\"\r\n                  [(ngModel)]=\"model.coBorrower.genderKey\">\r\n                </ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Select Occupation\" [errorStateMatcher]=\"matcher\"\r\n                      pattern=\"^[1-9]\\d*$\" [(ngModel)]=\"model.coBorrower.occupationKey\" name=\"occupationKey\" required>\r\n                      <mat-option *ngFor=\"let edu of occupation\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"occupation\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Occupation\"\r\n                  [(ngModel)]=\"model.coBorrower.occupationKey\"></ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Relation\" [errorStateMatcher]=\"matcher\"\r\n                      pattern=\"^[1-9]\\d*$\" [(ngModel)]=\"model.coBorrower.relationKey\" name=\"relationKey\" required>\r\n                      <mat-option *ngFor=\"let edu of relationType\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"relationType\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Relationship with Client\"\r\n                  [(ngModel)]=\"model.coBorrower.relationKey\"></ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Marital Status\" [errorStateMatcher]=\"matcher\"\r\n                      pattern=\"^[1-9]\\d*$\" [(ngModel)]=\"model.coBorrower.maritalStatusKey\" name=\"maritalStatusKey\"\r\n                      required>\r\n                      <mat-option *ngFor=\"let edu of maritalStatus\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"maritalStatus\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Marital Status\"\r\n                  [(ngModel)]=\"model.coBorrower.maritalStatusKey\"></ng-select> -->\r\n                </div>\r\n              </div>\r\n              <div class=\"cRow\">\r\n                <div class=\"pt-1 pb-1\">\r\n                  <mat-label>Is Co-Borrower Address Same As Client's Address ?</mat-label>\r\n                  <br>\r\n                  <mat-radio-group [disabled]=\"readonly && auth.role!='admin'\" [(ngModel)]=\"model.relAddrAsClntFlg\"\r\n                    (change)=\"sameAsClientAddressChange()\" name=\"isbizAddrSAC\" required>\r\n                    <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">\r\n                      {{disFlag.name}}</mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"!model.relAddrAsClntFlg\"  class=\"tab-pane fade\" id=\"addressTab\" role=\"tabpanel\" aria-labelledby=\"address-tab\">\r\n            \r\n            <div *ngIf=\"!model.relAddrAsClntFlg\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"province\" name=\"province\"\r\n                      [(ngModel)]=\"model.coBorrower.provinceName\" readonly placeholder=\"Province\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input required matInput readonly id=\"district\" name=\"district\"\r\n                      [(ngModel)]=\"model.coBorrower.districtName\" readonly placeholder=\"District\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"tehsil\" name=\"tehsil\"\r\n                      [(ngModel)]=\"model.coBorrower.tehsilName\" readonly placeholder=\"Tehsil\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"uc\" name=\"uc\"\r\n                      [(ngModel)]=\"model.coBorrower.ucName\" readonly placeholder=\"UC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"city\" name=\"city\"\r\n                      [(ngModel)]=\"model.coBorrower.cityName\" readonly placeholder=\"City\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 mt-3\">\r\n                  <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" class=\"btn btn-dots\" data-toggle=\"modal\" data-target=\"#Location\"></button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"houseNum\" required name=\"houseHum\"\r\n                      [(ngModel)]=\"model.coBorrower.houseNum\" [disabled]=\"readonly && auth.role!='admin'\" matInput placeholder=\"House Number\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"street\" required name=\"street\"\r\n                      [(ngModel)]=\"model.coBorrower.sreet_area\" matInput [disabled]=\"readonly && auth.role!='admin'\"\r\n                      placeholder=\"Street/Area\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <ng-select [disabled]=\"readonly && auth.role!='admin'\" [items]=\"communityArray\" required bindLabel=\"cmntyNm\"\r\n                    bindValue=\"cmntySeq\" name=\"cmntyNm\" placeholder=\"Select Community\" [(ngModel)]=\"model.coBorrower.community\">\r\n                  </ng-select>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"village\" required name=\"village\"\r\n                      [(ngModel)]=\"model.coBorrower.village\" matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Village\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"other\" name=\"other\" required [(ngModel)]=\"model.coBorrower.otherDetails\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Other Details\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button (click)=\"continueClicked()\" [disabled]=\"!formSaved\" type=\"button\"\r\n          class=\"btn btn-primary\">Continue</button>\r\n        <button class=\"btn btn-default\" [disabled]=\"readonly && auth.role!='admin'\" type=\"submit\">Save</button>\r\n      </form>\r\n      <div class=\"modal fade\" id=\"Location\" role=\"dialog\">\r\n        <div class=\"modal-dialog bigger mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Location </h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table last-left\">\r\n                  <thead class=\"thead-light last-left\">\r\n                    <tr>\r\n                      <th>Province</th>\r\n                      <th>District</th>\r\n                      <th>Tehsil</th>\r\n                      <th width=\"20%\">UC</th>\r\n                      <th>City</th>\r\n                      <th>Select</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody class=\"evenodd\">\r\n                    <tr *ngFor=\"let address of addresses\">\r\n                      <td>{{address.provinceName}} </td>\r\n                      <td>{{address.districtName}}</td>\r\n                      <td>{{address.tehsilName}}</td>\r\n                      <td>{{address.ucName}}</td>\r\n                      <td>{{address.cityName}}</td>\r\n                      <td>\r\n                        <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary btn-min\"\r\n                          (click)=\"selectAddress(address)\">Select</button>\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.ts ***!
  \**************************************************************************************/
/*! exports provided: MY_FORMATS, CoBorrowerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoBorrowerComponent", function() { return CoBorrowerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/models/address.model */ "./src/app/shared/models/address.model.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/models/Nominee.model */ "./src/app/shared/models/Nominee.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/models/CNICPattern.model */ "./src/app/shared/models/CNICPattern.model.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _shared_models_History_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/models/History.model */ "./src/app/shared/models/History.model.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_15__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















var moment = moment__WEBPACK_IMPORTED_MODULE_15__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var CoBorrowerComponent = /** @class */ (function () {
    function CoBorrowerComponent(router, loanService, commonService, spinner, breadcrumbProvider, toaster) {
        this.router = router;
        this.loanService = loanService;
        this.commonService = commonService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.formSaved = false;
        this.coborrowerFormData = new Object();
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_9__["MyErrorStateMatcher"]();
        this.validated = false;
        this.disFlags = [{ name: 'Yes', value: true }, { name: 'No', value: false }];
        this.history = new _shared_models_History_model__WEBPACK_IMPORTED_MODULE_12__["History"]();
        this.hasCob = false;
        this.addresses = [];
        this.address = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        this.residenceArray = [];
        this.cnicPatternObj = new _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_10__["CNICPattern"]();
        this.clientPhone = "";
        this.now = new Date();
        this.now.setDate((this.now.getDate() + 1));
        var month;
        if ((this.now.getMonth() + 1) < 10) {
            month = '0' + (this.now.getMonth());
        }
        else {
            month = '' + (this.now.getMonth());
        }
        var day;
        if ((this.now.getDate() + 1) < 10) {
            day = '0' + (this.now.getDate());
        }
        else {
            day = '' + (this.now.getDate());
        }
        var year = this.now.getFullYear();
        var currentDate = year + '-' + month + '-' + day;
        this.date = currentDate;
        this.eightenYearsBefore = new Date((year - 18), month, (+day - 1));
        this.minDobYear = new Date((year - 64), month, (+day + 1));
    }
    CoBorrowerComponent.prototype.validate = function () {
        var _this = this;
        if (/^([0-9])\1*$/.test(this.model.coBorrower.cnicNum)) {
            this.toaster.error("Invalid CNIC", "CNIC Number");
            this.spinner.hide();
            return;
        }
        if (this.model.coBorrower.cnicExpryDate == undefined || this.model.coBorrower.cnicExpryDate == '') {
            this.toaster.error("Select CNIC Expiry Date");
            return;
        }
        this.spinner.show();
        this.loanService.validateCNIC(this.model.coBorrower.cnicNum).subscribe(function (res) {
            _this.spinner.hide();
            console.log(res);
            if (res.client) {
                _this.history = Object.assign(_this.history, res.client, _this.history);
                _this.history.title = "Client";
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else if (res.clientRel) {
                _this.history = Object.assign(_this.history, res.clientRel, _this.history);
                _this.history.title = "Client";
                if (_this.history.type == "1") {
                    _this.history.title = "Nominee";
                }
                else if (_this.history.type == "3") {
                    _this.history.title = "Coborrower";
                }
                else if (_this.history.type == "2") {
                    _this.history.title = "Next-of-Kin";
                }
                else if (_this.history.type == "4") {
                    _this.history.title = "Client Relative";
                }
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else {
                _this.validated = true;
            }
            console.log(_this.history);
        }, function (error) {
            _this.spinner.hide();
        });
        if (+this.model.coBorrower.cnicNum % 2) {
            this.model.coBorrower.genderKey = this.findKeyFromValue('MALE', this.gender);
        }
        else {
            this.model.coBorrower.genderKey = this.findKeyFromValue('FEMALE', this.gender);
        }
    };
    CoBorrowerComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedBorrower', this.formSaved.toString());
    };
    CoBorrowerComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        console.log(this.model);
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (!this.model.coBorrower) {
            this.model.coBorrower = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_4__["Nominee"]();
        }
        else if (this.model.coBorrower.cnicNum != null || this.model.coBorrower.cnicNum != undefined) {
            if (this.model.coBorrower.cnicNum.length > 0) {
                this.setPattern();
                this.validated = this.model.coBorrower.isValidated;
            }
        }
        this.model.coBorrower.loanAppSeq = this.model.loanAppSeq;
        this.model.coBorrower.formSeq = this.model.formSeq;
        this.model.coBorrower.typFlg = 3;
        if (!this.model.coBorrowerAddress) {
            this.model.coBorrowerAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        }
        this.model.coBorrower.clientSeq = this.model.clientSeq;
        this.getLocations();
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.loanService.getClntRel(this.model.coBorrower).subscribe(function (res) {
                console.log(res);
                if (res != null && +res.cnicNum != 0) {
                    _this.validated = true;
                    _this.formSaved = true;
                    _this.hasCob = true;
                    res.clientSeq = _this.model.clientSeq;
                    _this.model.coBorrower = res;
                    // let addr = Object.assign(this.model.coBorrowerAddress, res, this.model.coBorrowerAddress);
                    // this.model.coBorrowerAddress = new Address();
                    // this.model.coBorrowerAddress.provinceName = addr.provinceName;
                    // this.model.coBorrowerAddress.districtName = addr.districtName;
                    // this.model.coBorrowerAddress.tehsilName = addr.tehsilName;
                    // this.model.coBorrowerAddress.ucName = addr.ucName;
                    // this.model.coBorrowerAddress.cityName = addr.cityName;
                    // this.model.coBorrowerAddress.houseNum = addr.houseNum;
                    // this.model.coBorrowerAddress.sreet_area = addr.sreet_area;
                    // this.model.coBorrowerAddress.village = addr.village;
                    // this.model.coBorrowerAddress.otherDetails = addr.otherDetails;
                    var array = void 0;
                    if (_this.model.coBorrower.dob) {
                        array = _this.model.coBorrower.dob.split('T', 1);
                        console.log(array.length);
                        if (array.length) {
                            _this.model.coBorrower.dob = array[0];
                        }
                    }
                    console.log(_this.model.coBorrower.cnicExpryDate);
                    if (_this.model.coBorrower.cnicExpryDate) {
                        array = _this.model.coBorrower.cnicExpryDate.split('T', 1);
                        console.log(array.length);
                        console.log(array[0]);
                        if (array.length) {
                            _this.model.coBorrower.cnicExpryDate = array[0];
                        }
                    }
                    _this.setPattern();
                    console.log(_this.model.coBorrower.cnicExpryDate);
                    _this.clientPhone = _this.model.coBorrower.phone;
                    _this.age = _this.calculateAge(new Date(_this.model.coBorrower.dob));
                }
                else {
                    _this.getPreviousClientRel();
                }
            }, function (error) {
                console.log('err', error);
            });
            console.log(this.model);
        }
        else if (this.model.coBorrower.clntRelSeq != undefined && this.model.coBorrower.clntRelSeq != 0) {
            this.hasCob = true;
            this.validated = true;
            this.clientPhone = this.model.coBorrower.phone;
            this.age = this.calculateAge(new Date(this.model.coBorrower.dob));
            if (this.cnicPatternObj.cobCNIC == '' || this.cnicPatternObj.cobCNIC.length <= 0)
                this.setPattern();
        }
        else {
            this.getPreviousClientRel();
        }
        this.loadLovs();
    };
    CoBorrowerComponent.prototype.getPreviousClientRel = function () {
        var _this = this;
        this.loanService.getClientRelFromPreviousLoan(this.model.coBorrower).subscribe(function (res) {
            if (res != null && +res.cnicNum != 0) {
                _this.validated = true;
                res.clntRelSeq = null;
                res.clientSeq = _this.model.clientSeq;
                _this.model.coBorrower = res;
                res.loanAppSeq = _this.model.loanAppSeq;
                var array = void 0;
                if (_this.model.coBorrower.dob) {
                    array = _this.model.coBorrower.dob.split('T', 1);
                    console.log(array.length);
                    if (array.length) {
                        _this.model.coBorrower.dob = array[0];
                    }
                }
                console.log(_this.model.coBorrower.cnicExpryDate);
                if (_this.model.coBorrower.cnicExpryDate) {
                    array = _this.model.coBorrower.cnicExpryDate.split('T', 1);
                    console.log(array.length);
                    console.log(array[0]);
                    if (array.length) {
                        _this.model.coBorrower.cnicExpryDate = array[0];
                    }
                }
                _this.setPattern();
                console.log(_this.model.coBorrower.cnicExpryDate);
                _this.clientPhone = _this.model.coBorrower.phone;
                _this.age = _this.calculateAge(new Date(_this.model.coBorrower.dob));
            }
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, 'Error');
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    CoBorrowerComponent.prototype.onDOBChange = function (dob) {
        this.age = this.calculateAge(new Date(dob));
    };
    CoBorrowerComponent.prototype.calculateAge = function (birthday) {
        var ageDifMs = Date.now() - birthday.getTime();
        var ageDate = new Date(ageDifMs); // miliseconds from epoch
        return Math.abs(ageDate.getUTCFullYear() - 1970);
    };
    CoBorrowerComponent.prototype.continueClicked = function () {
        var _this = this;
        // this.router.navigate(['loan-origination/business-appraisal']);
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                    _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    CoBorrowerComponent.prototype.getLocations = function () {
        var _this = this;
        this.loanService.getLocationsForPort(this.model.portSeq).subscribe(function (res) {
            console.log(res);
            _this.addresses = res;
            // this.addresses = res;
        }, function (error) {
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    CoBorrowerComponent.prototype.onCoBorrowerFormSubmit = function () {
        var _this = this;
        this.spinner.show();
        this.model.coBorrower.isValidated = true;
        this.model.coBorrower.typFlg = 3;
        if (this.model.coBorrower.firstName == null || this.model.coBorrower.firstName === '' || this.model.coBorrower.fatherFirstName == null ||
            this.model.coBorrower.fatherFirstName === '' ||
            this.model.coBorrower.fatherLastName == null || this.model.coBorrower.fatherLastName === '' || this.model.coBorrower.phone == null ||
            this.model.coBorrower.phone === '' || this.model.coBorrower.dob == null || this.model.coBorrower.dob === ''
            || this.model.coBorrower.genderKey == null || this.model.coBorrower.genderKey === ''
            || this.model.coBorrower.occupationKey == null || this.model.coBorrower.occupationKey === ''
            || this.model.coBorrower.relationKey == null || this.model.coBorrower.relationKey === ''
            || this.model.coBorrower.maritalStatusKey == null || this.model.coBorrower.maritalStatusKey === '') {
            $('#nominee').click();
            this.toaster.warning('Fields Missing in Basic-Info');
            this.spinner.hide();
            return;
        }
        if (!this.model.relAddrAsClntFlg) {
            if (this.model.coBorrower.provinceName == null || this.model.coBorrower.provinceName === '' || this.model.coBorrower.otherDetails == null ||
                this.model.coBorrower.otherDetails === '' ||
                this.model.coBorrower.houseNum == null || this.model.coBorrower.houseNum === '' || this.model.coBorrower.village == null ||
                this.model.coBorrower.village === '' || this.model.coBorrower.otherDetails == null || this.model.coBorrower.otherDetails === '') {
                $('#address-tab').click();
                this.toaster.warning('Fields Missing in Address');
                this.spinner.hide();
                return;
            }
        }
        // this.model.coBorrower = Object.assign(this.model.coBorrower, this.model.coBorrower, this.model.coBorrowerAddress);
        // this.coborrowerFormData.tehsil = '1';
        // this.coborrowerFormData.union = '1';
        // this.coborrowerFormData.uc = '1';
        // this.coborrowerFormData.district = '1';
        // this.coborrowerFormData.city = '1';
        // this.coborrowerFormData.province='1';
        console.log(this.coborrowerFormData);
        this.model.coBorrower.formSeq = this.model.formSeq;
        this.model.coBorrower.loanAppSeq = this.model.loanAppSeq;
        this.model.coBorrower.relAddrAsClntFlg = this.model.relAddrAsClntFlg;
        console.log(this.model);
        if (this.hasCob) {
            console.log('EDIT');
            this.model.coBorrower.typFlg = 3;
            this.model.coBorrower.isCoBorrower = true;
            console.log(this.coborrowerFormData);
            this.loanService.updateClientRel(this.model.coBorrower).subscribe(function (res) {
                _this.spinner.hide();
                console.log(res);
                _this.model.coBorrower.clntRelSeq = res.clntRelSeq;
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
                _this.toaster.success('Saved');
            }, function (error) {
                _this.spinner.hide();
                // this.toaster.error(error.error.error, 'Error');
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            this.model.coBorrower.typFlg = 3;
            this.loanService.saveClientRel(this.model.coBorrower).subscribe(function (res) {
                _this.spinner.hide();
                console.log(res);
                _this.model.coBorrower.clntRelSeq = res.clntRelSeq;
                _this.formSaved = true;
                _this.hasCob = true;
                _this.toaster.success('Saved');
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        console.log(forms);
                        console.log(_this.router.url);
                        console.log('/loan-origination/app/' + forms.formUrl);
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                            console.log('TREIIII');
                            console.log(forms);
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }, function (error) {
                _this.spinner.hide();
                _this.toaster.error(error.error.error, 'Error');
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
    };
    CoBorrowerComponent.prototype.selectAddress = function (add) {
        this.address = add;
        Object.assign(this.model.coBorrower, add, this.model.coBorrower);
        console.log(this.model.coBorrower);
    };
    CoBorrowerComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_11__["RELATION_TYPE_COBORROWER"]).subscribe(function (res) {
            _this.relationType = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_11__["OCCUPATION"]).subscribe(function (res) {
            _this.occupation = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_11__["GENDER"]).subscribe(function (res) {
            _this.gender = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_11__["MARITAL_STATUS"]).subscribe(function (res) {
            _this.maritalStatus = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getCommunityForPort(this.model.portKey).subscribe(function (res) {
            _this.communityArray = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    CoBorrowerComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    CoBorrowerComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    CoBorrowerComponent.prototype.setPattern = function () {
        var _this = this;
        ///  CNIC Pattern
        this.cnicPatternObj.cobCNIC = "";
        var str = this.model.coBorrower.cnicNum + "";
        var charArray = str.split("");
        charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + '-';
            _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + item;
        });
    };
    CoBorrowerComponent.prototype.cnicPattern = function (event, type) {
        var _this = this;
        if (this.readonly) {
            this.readonly = false;
        }
        this.validated = false;
        var dt = this.model.coBorrower.cnicExpryDate;
        this.model.coBorrower = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_4__["Nominee"]();
        this.model.coBorrower.cnicExpryDate = dt;
        this.age = "";
        if (event.keyCode == 8 || event.keyCode == 9
            || event.keyCode == 27 || event.keyCode == 13
            || (event.keyCode == 65 && event.ctrlKey === true))
            return;
        if ((event.keyCode < 48 || event.keyCode > 57))
            event.preventDefault();
        var length = 0;
        if (type == "client") {
            if (this.cnicPatternObj.clientCNIC.length)
                length = this.cnicPatternObj.clientCNIC.length;
            if (length <= 15) {
                this.cnicPatternObj.clientCNIC = this.cnicPatternObj.clientCNIC.replace(/-/g, '');
                var array = this.cnicPatternObj.clientCNIC.split('');
                this.cnicPatternObj.clientCNIC = "";
                this.model.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + "-";
                        }
                        if (_this.cnicPatternObj.clientCNIC.length < 15) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + char;
                            _this.model.cnicNum = _this.model.cnicNum + char;
                        }
                    }
                });
            }
        }
        else if (type == "nominee") {
            if (this.cnicPatternObj.nomCnic.length)
                length = this.cnicPatternObj.nomCnic.length;
            if (length < 15) {
                this.cnicPatternObj.nomCnic = this.cnicPatternObj.nomCnic.replace(/-/g, '');
                var array = this.cnicPatternObj.nomCnic.split('');
                this.cnicPatternObj.nomCnic = "";
                this.model.nominee.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + "-";
                        }
                        if (_this.cnicPatternObj.nomCnic.length < 15) {
                            _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + char;
                            _this.model.nominee.cnicNum = _this.model.nominee.cnicNum + char;
                        }
                    }
                });
            }
        }
        else if (type == "co-borrower") {
            if (this.cnicPatternObj.cobCNIC.length)
                length = this.cnicPatternObj.cobCNIC.length;
            this.cnicPatternObj.cobCNIC = this.cnicPatternObj.cobCNIC.replace(/-/g, '');
            var array = this.cnicPatternObj.cobCNIC.split('');
            this.cnicPatternObj.cobCNIC = "";
            this.model.coBorrower.cnicNum = "";
            array.forEach(function (char, index) {
                var asciiCode = char.charCodeAt(0);
                if (asciiCode >= 48 && asciiCode <= 57) {
                    if (index == 5 || index == 12) {
                        _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + "-";
                    }
                    if (_this.cnicPatternObj.cobCNIC.length < 15) {
                        _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + char;
                        _this.model.coBorrower.cnicNum = _this.model.coBorrower.cnicNum + char;
                    }
                }
            });
        }
    };
    CoBorrowerComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue == value) {
                    return array[i].codeKey;
                }
            }
        }
    };
    CoBorrowerComponent.prototype.onExpChange = function (dob) {
        var date;
        if (this.model.coBorrower.cnicExpryDate) {
            date = new Date(this.model.coBorrower.cnicExpryDate);
            var month = (date.getMonth() + 1);
            if (month < 10) {
                month = '0' + month;
            }
            var day = date.getDate();
            if (day < 10) {
                day = '0' + day;
            }
            this.model.coBorrower.cnicExpryDate = date.getFullYear() + '-' + month + '-' + day;
        }
    };
    CoBorrowerComponent.prototype.phoneNumber = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
        if (this.clientPhone.length == 0)
            this.clientPhone = "(" + this.clientPhone;
        if (this.clientPhone.length == 5)
            this.clientPhone = this.clientPhone + ")";
        if (this.clientPhone.length < 13) {
            this.model.coBorrower.phone = this.clientPhone.replace(/[(]/g, '');
            this.model.coBorrower.phone = this.clientPhone.replace(/[)]/g, '');
            this.model.coBorrower.phone = this.clientPhone.replace(/ /g, '');
            this.model.coBorrower.phone = this.model.coBorrower.phone + event.key;
        }
        console.log(this.model.nominee.phone);
    };
    CoBorrowerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-co-borrower',
            template: __webpack_require__(/*! ./co-borrower.component.html */ "./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.html"),
            styles: [__webpack_require__(/*! ./co-borrower.component.css */ "./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_14__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_13__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_14__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_14__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__["LoanService"], _shared_services_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_6__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_7__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_8__["ToastrService"]])
    ], CoBorrowerComponent);
    return CoBorrowerComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/documents/documents.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/documents/documents.component.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* Style the Image Used to Trigger the Modal */\r\n#myImg {\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n#myImg:hover {opacity: 0.7;}\r\n/* The Modal (background) */\r\n.modal {\r\n    display: none; /* Hidden by default */\r\n    position: fixed; /* Stay in place */\r\n    z-index: 10; /* Sit on top */\r\n    padding-top: 100px; /* Location of the box */\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%; /* Full width */\r\n    height: 100%; /* Full height */\r\n    overflow: auto; /* Enable scroll if needed */\r\n    background-color: rgb(0,0,0); /* Fallback color */\r\n    background-color: rgba(0,0,0,0.9); /* Black w/ opacity */\r\n  }\r\n/* Modal Content (Image) */\r\n.modal-content {\r\n    margin: auto;\r\n    display: block;\r\n    width: 80%;\r\n    max-width: 700px;\r\n  }\r\n/* Caption of Modal Image (Image Text) - Same Width as the Image */\r\n#caption {\r\n    margin: auto;\r\n    display: block;\r\n    width: 80%;\r\n    max-width: 700px;\r\n    text-align: center;\r\n    color: #ccc;\r\n    padding: 10px 0;\r\n    height: 150px;\r\n  }\r\n/* Add Animation - Zoom in the Modal */\r\n.modal-content, #caption { \r\n    -webkit-animation-name: zoom; \r\n            animation-name: zoom;\r\n    -webkit-animation-duration: 0.6s;\r\n            animation-duration: 0.6s;\r\n  }\r\n@-webkit-keyframes zoom {\r\n    from {-webkit-transform:scale(0);transform:scale(0)} \r\n    to {-webkit-transform:scale(1);transform:scale(1)}\r\n  }\r\n@keyframes zoom {\r\n    from {-webkit-transform:scale(0);transform:scale(0)} \r\n    to {-webkit-transform:scale(1);transform:scale(1)}\r\n  }\r\n/* The Close Button */\r\n.close {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 35px;\r\n    color: #f1f1f1;\r\n    font-size: 40px;\r\n    font-weight: bold;\r\n    transition: 0.3s;\r\n  }\r\n.close:hover,\r\n  .close:focus {\r\n    color: #bbb;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n/* 100% Image Width on Smaller Screens */\r\n@media only screen and (max-width: 700px){\r\n    .modal-content {\r\n      width: 100%;\r\n    }\r\n  }"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/documents/documents.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/documents/documents.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-3\">\r\n          <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n        </div>\r\n      </div>\r\n      <form (ngSubmit)=\"saveClicked()\" #documentsForm=\"ngForm\">\r\n        <!-- <h6 class=\"colorBlack mb-0 mt-2\">Client:</h6> -->\r\n        <div class=\"cRow\">\r\n          <div class=\"cCol1\" *ngFor=\"let doc of docs\">\r\n            <label>{{doc.crtdBy}}:</label>\r\n            <img [src]=\"sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,'+doc.docImg)\" (click)=\"loadModal(doc)\" width=\"160\"\r\n              height=\"160\" />\r\n          </div>\r\n          <!-- <div class=\"cCol1\">\r\n          <label>Attach CNIC Back:</label>\r\n          <input type=\"file\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"cCol1\">\r\n          <label>Attach Client Picture:</label>\r\n          <input type=\"file\" class=\"form-control\"> \r\n        </div>-->\r\n        </div>\r\n        <!-- <h6 class=\"colorBlack mb-0 mt-2\">Nominee:</h6>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol1\">\r\n          <label>Attach CNIC Front:</label>\r\n          <input type=\"file\" value=\"Attach CNIC Front\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"cCol1\">\r\n          <label>Attach CNIC Back:</label>\r\n          <input type=\"file\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"cCol1\">\r\n          <label>Attach Nominee Picture</label>\r\n          <input type=\"file\" class=\"form-control\">\r\n        </div>\r\n      </div>\r\n      <h6 class=\"colorBlack mb-0 mt-2\">Co-Borrower:</h6>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol1\">\r\n          <label>Attach CNIC Front:</label>\r\n          <input type=\"file\" value=\"Attach CNIC Front\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"cCol1\">\r\n          <label>Attach CNIC Back:</label>\r\n          <input type=\"file\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"cCol1\">\r\n          <label>Attach Co-Borrower Picture</label>\r\n          <input type=\"file\" class=\"form-control\">\r\n        </div>\r\n      </div> -->\r\n\r\n        <div class=\"mt-5 mb-5\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"continueClicked()\">Continue</button>\r\n          <button class=\"btn btn-default\" type=\"submit\" [disabled]=\"documentsForm.invalid || readonly\">Save</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- The Modal -->\r\n  <div id=\"myModal\" class=\"modal\">\r\n\r\n    <!-- The Close Button -->\r\n    <span (click)=\"closeModal()\" class=\"close\">&times;</span>\r\n\r\n    <!-- Modal Content (The Image) -->\r\n    <img class=\"modal-content\" [src]=\"modelSrc\">\r\n\r\n    <!-- Modal Caption (Image Text) -->\r\n    <div id=\"caption\">{{modalCaption}}</div>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/documents/documents.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/documents/documents.component.ts ***!
  \**********************************************************************************/
/*! exports provided: DocumentsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentsComponent", function() { return DocumentsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var DocumentsComponent = /** @class */ (function () {
    function DocumentsComponent(router, loanService, breadcrumbProvider, sanitizer) {
        this.router = router;
        this.loanService = loanService;
        this.breadcrumbProvider = breadcrumbProvider;
        this.sanitizer = sanitizer;
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.base64String = "";
    }
    DocumentsComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem("basicCrumbs"));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, "/loan-origination/app/" + element.formUrl, element.isSaved);
        });
        this.model = JSON.parse(sessionStorage.getItem('model'));
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        console.log(this.model);
        this.loanService.getAllDocumentsForLoanApp(this.model.loanAppSeq).subscribe(function (res) {
            console.log(res);
            if (res != null) {
                _this.docs = [];
                res.forEach(function (d) {
                    if (d.docImg != null && d.docSeq != 0) {
                        _this.docs.push(d);
                    }
                });
            }
            // this.docs = res;
        });
    };
    DocumentsComponent.prototype.loadModal = function (doc) {
        document.getElementById('myModal').style.display = "block";
        this.modelSrc = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' + doc.docImg);
        this.modalCaption = doc.crtdBy;
    };
    DocumentsComponent.prototype.closeModal = function () {
        document.getElementById('myModal').style.display = "none";
    };
    DocumentsComponent.prototype.dataURItoBlob = function (dataURI) {
        var byteString = atob(dataURI);
        var arrayBuffer = new ArrayBuffer(byteString.length);
        var int8Array = new Uint8Array(arrayBuffer);
        for (var i = 0; i < byteString.length; i++) {
            int8Array[i] = byteString.charCodeAt(i);
        }
        var blob = new Blob([arrayBuffer], { type: 'image/jpeg' });
        return blob;
    };
    DocumentsComponent.prototype.continueClicked = function () {
        var _this = this;
        // this.router.navigate(['loan-origination/submit']);
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    DocumentsComponent.prototype.saveClicked = function () {
    };
    DocumentsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-documents',
            template: __webpack_require__(/*! ./documents.component.html */ "./src/app/pages/loan-origination/loan-app/documents/documents.component.html"),
            styles: [__webpack_require__(/*! ./documents.component.css */ "./src/app/pages/loan-origination/loan-app/documents/documents.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_3__["BreadcrumbProvider"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["DomSanitizer"]])
    ], DocumentsComponent);
    return DocumentsComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.css":
/*!*********************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.css ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.html":
/*!**********************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n\r\n    <div class=\"content\">\r\n\r\n      <form (ngSubmit)=\"onInsuranceFormSubmit()\" #addInsuranceInfoForm=\"ngForm\">\r\n        <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n        <div class=\"cRow\">\r\n          <div class=\"cCol\">\r\n            <mat-label>Already have an insurance plan ?</mat-label>\r\n            <br>\r\n            <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.hlthInsrFlag\" name=\"hlthInsrFlag\" required>\r\n              <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" (change)=\"onRadioChange(disFlag.value)\"\r\n                [value]=\"disFlag.value\">{{disFlag.name}}</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n        <div class=\"cRow\">\r\n          <div [style.display]=\"model.hlthInsrFlag ? 'block' : 'none'\">\r\n            <div class=\"cCol1\">\r\n              <!-- <ng-select [items]=\"exclusionCategory\" bindLabel=\"codeKey\" bindValue=\"codeValue\" name=\"codeValue\" placeholder=\"Client Exclusion Category:\"\r\n                [(ngModel)]=\"model.exclusionCategoryKey\">\r\n              </ng-select> -->\r\n\r\n              <mat-form-field>\r\n                <mat-select [disabled]=\"readonly\" placeholder=\"Client Exclusion Category\"\r\n                  [(ngModel)]=\"model.exclusionCategoryKey\" id=\"relKey\" name=\"exclusionCategory\"\r\n                  [required]=\"model.hlthInsrFlag\">\r\n                  <mat-option *ngFor=\"let edu of exclusionCategory\" [value]=\"edu.codeKey\">\r\n                    {{edu.codeValue}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <!-- <div [style.display]=\"!model.hlthInsrFlag  ? 'block' : 'none'\"> -->\r\n          <div class=\"cCol2\">\r\n            <mat-form-field>\r\n              <!-- <mat-select [disabled]=\"readonly\" placeholder=\"Select Plan\" [(ngModel)]=\"model.healthInsrPlanSeq\" -->\r\n              <mat-select disabled=\"true\" placeholder=\"Select Plan\" [(ngModel)]=\"model.healthInsrPlanSeq\"\r\n                (selectionChange)=\"planChanged()\" name=\"healthInsrPlanSeq\" [required]=\"!model.hlthInsrFlag\">\r\n                <mat-option *ngFor=\"let edu of plans\" [value]=\"edu.hlthInsrPlanSeq\">\r\n                  {{edu.planNm}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"cCol2\">\r\n            <mat-form-field>\r\n              <mat-select [disabled]=\"readonly\" placeholder=\"Bread Earner\" [(ngModel)]=\"model.relWithBreadEarnerKey\"\r\n                (selectionChange)=\"relationChanged('true')\" name=\"relWithBreadEarnerKey\"\r\n                [required]=\"!model.hlthInsrFlag\">\r\n                <mat-option *ngFor=\"let edu of breadEarner\" [value]=\"edu.codeKey\">\r\n                  {{edu.codeValue}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"cCol2\">\r\n            <mat-form-field>\r\n              <input [disabled]=\"readonly\" [disabled]=\"disableMainEarner\" type=\"text\" name=\"mainBreadEarnerName\"\r\n                matInput placeholder=\"Bread Earner Name\" [(ngModel)]=\"model.mainBreadEarnerName\"\r\n                (keypress)=\"onlyLetters($event)\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" #breadEarnerName=\"ngModel\"\r\n                [required]=\"!model.hlthInsrFlag\">\r\n              <mat-error *ngIf=\"breadEarnerName.invalid\">\r\n                name is <strong>invalid</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <!-- </div> -->\r\n\r\n        </div>\r\n        <div [style.display]=\"!model.hlthInsrFlag  ? 'block' : 'none'\">\r\n          <div class=\"cRow\">\r\n            <div class=\"cCol1\">\r\n              <mat-form-field>\r\n                <input [disabled]=\"readonly\" type=\"text\" matInput placeholder=\"Annual Insurance Fee\"\r\n                  value=\"{{selectedPlan.anlPremAmt}}\" readonly disabled>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"cCol1\">\r\n              <mat-form-field>\r\n                <input [disabled]=\"readonly\" type=\"text\" matInput\r\n                  placeholder=\"Max Policy amount per year per family member\" value=\"{{selectedPlan.maxPlcyAmt}}\"\r\n                  readonly disabled>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-sm-6\">\r\n              <h6 class=\"colorBlack\">Insurance Members</h6>\r\n            </div>\r\n            <div class=\"col-sm-6 addBtn\">\r\n              <button class=\"btn btn-primary btn-sm\" type=\"submit\">\r\n                <i class=\"fa fa-plus\"></i> Add</button>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n          <div class=\"table-responsive mb-md-5\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>CNIC</th>\r\n                  <th>Gender</th>\r\n                  <th>DOB</th>\r\n                  <th>Marital Status</th>\r\n                  <th>Relationship</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let member of model.insuranceMembers\">\r\n                  <td>{{member.memberName}}</td>\r\n                  <td>\r\n                    {{(member.memberCnicNum == 0 || member.memberCnicNum == undefined || member.memberCnicNum == null) ? 'N/A' : returnCNICPattern(member.memberCnicNum)}}\r\n                  </td>\r\n                  <td>{{findValueFromKey(member.genderKey , genderOrig)}}</td>\r\n                  <td>{{member.dob  | date: 'dd-MM-yyyy'}}</td>\r\n                  <td>{{findValueFromKey(member.maritalStatusKey , maritalStatusOrig)}}</td>\r\n                  <td>{{findValueFromKey(member.relKey , relationTypeOrig)}}</td>\r\n                  <td>\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" (click)=\"editMember(member)\"\r\n                      class=\"iconBtn simplebtn\">\r\n                      <i class=\"fa fa-pencil\"></i>\r\n                    </button>\r\n                    <button type=\"button\" (click)=\"deleteMember(member)\" class=\"iconBtn delBtn simplebtn\">\r\n                      <i class=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <!-- <a  class=\"iconBtn\"><i class=\"fa fa-history\"></i></a> -->\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"continueClicked()\"\r\n          [disabled]=\"!formSaved\">Continue</button>\r\n        <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-default\"\r\n          (click)=\"saveClicked();\">Save</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"modal fade\" id=\"deleteConfirmation\" role=\"dialog\">\r\n      <div class=\"modal-dialog mymodal\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Delete Insurance Member</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <div class=\"table-responsive\">\r\n              <h6>Do you want to delete?</h6>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-footer smmodal-footer text-center\">\r\n              <button type=\"button\" (click)=\"confirmDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade\" id=\"addmember\" role=\"dialog\">\r\n      <div class=\"modal-dialog mymodal\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <form (ngSubmit)=\"onAddInsuranceMemberFormSubmit()\" #addInsuranceMemberForm=\"ngForm\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Insurance Member</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"(auth.role!='admin' && addingChildAfterDisbursement) && readonly\" matInput type=\"text\"\r\n                      (keypress)=\"onlyLetters($event)\" required [(ngModel)]=\"member.memberName\" id=\"memberName\"\r\n                      name=\"memberName\" placeholder=\"Name\" #memberName=\"ngModel\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"memberName.invalid\">\r\n                      name is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"(auth.role!='admin' && addingChildAfterDisbursement) && readonly\" placeholder=\"Relationship\"\r\n                      (selectionChange)=\"handleChanges(relKey.value)\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                      [(ngModel)]=\"member.relKey\" id=\"relKey\" name=\"relKey\" required #relKey=\"ngModel\">\r\n                      <mat-option *ngFor=\"let edu of relationType\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Gender\" [(ngModel)]=\"member.genderKey\"\r\n                      name=\"genderKey\" required #genderKey=\"ngModel\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\">\r\n                      <mat-option *ngFor=\"let edu of gender\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Marital Status\"\r\n                      (selectionChange)=\"handleChanges(maritalKey.value)\" [errorStateMatcher]=\"matcher\"\r\n                      pattern=\"^[1-9]\\d*$\" [(ngModel)]=\"member.maritalStatusKey\" name=\"maritalStatus\" required\r\n                      [disabled]=\"isRelationDisable\" #maritalKey=\"ngModel\">\r\n                      <mat-option *ngFor=\"let edu of maritalStatus\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"(isDobDisable || readonly) && (auth.role!='admin' && addingChildAfterDisbursement)\" matInput\r\n                      [required]=\"!isDobDisable\" name=\"dob\" (dateChange)=\"onDOBChange(dob.value)\" [max]=\"date\"\r\n                      [min]=\"minYear\" #dob=\"ngModel\" [matDatepicker]=\"picker3\" placeholder=\"Date of birth\"\r\n                      [(ngModel)]=\"member.dob\" readonly>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker startView=\"multi-year\" required #picker3 disabled=\"false\"></mat-datepicker>\r\n                  </mat-form-field>\r\n\r\n                </div>\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"isCnicDisable\" matInput type=\"text\" (keypress)=\"cnicPattern($event)\"\r\n                      maxlength=\"15\" [errorStateMatcher]=\"matcher\" [required]=\"cnicMandatory\" [(ngModel)]=\"memberCnic\"\r\n                      id=\"memberCnicNum\" name=\"memberCnicNum\" placeholder=\"Cnic Number\" #memberCnicNum=\"ngModel\"\r\n                      pattern=\"^[0-9+]{5}-[0-9+]{7}-[0-9]{1}$\">\r\n                    <mat-error *ngIf=\"memberCnicNum.invalid\">\r\n                      cnic number\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer text-center\">\r\n              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                [disabled]=\"!addInsuranceMemberForm.form.valid\">Ok</button>\r\n              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                data-dismiss=\"modal\">Cancel</button>\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.ts":
/*!********************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.ts ***!
  \********************************************************************************************/
/*! exports provided: MY_FORMATS, InsuranceInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InsuranceInfoComponent", function() { return InsuranceInfoComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/models/InsuranceMembers.model */ "./src/app/shared/models/InsuranceMembers.model.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var _shared_models_InsurancePlan_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/models/InsurancePlan.model */ "./src/app/shared/models/InsurancePlan.model.ts");
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_13__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var moment = moment__WEBPACK_IMPORTED_MODULE_13__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var InsuranceInfoComponent = /** @class */ (function () {
    function InsuranceInfoComponent(loanService, router, commonService, spinner, toaster, breadcrumbProvider) {
        this.loanService = loanService;
        this.router = router;
        this.commonService = commonService;
        this.spinner = spinner;
        this.toaster = toaster;
        this.breadcrumbProvider = breadcrumbProvider;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.disFlags = [{ name: 'Yes', value: true }, { name: 'No', value: false }];
        this.hasPlan = false;
        this.formSaved = false;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_9__["MyErrorStateMatcher"]();
        this.breadEarner = [];
        this.addingChildAfterDisbursement = true;
        this.plans = [];
        this.selectedPlan = new _shared_models_InsurancePlan_model__WEBPACK_IMPORTED_MODULE_7__["InsurancePlan"]();
        this.disableMainEarner = false;
        this.savedPlans = [];
        this.cnicMandatory = true;
        this.memberCnic = "";
        this.now = new Date();
        this.date = this.now;
        this.minYear = 0;
        if ((this.now.getMonth() + 1) < 10) {
            this.month = '0' + (this.now.getMonth() + 1);
        }
        else {
            this.month = '' + (this.now.getMonth() + 1);
        }
        if ((this.now.getDate() + 1) < 10) {
            this.day = '0' + (this.now.getDate());
        }
        else {
            this.day = '' + (this.now.getDate());
        }
        this.year = this.now.getFullYear();
    }
    InsuranceInfoComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem("basicCrumbs"));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, "/loan-origination/app/" + element.formUrl, element.isSaved);
        });
        this.model = JSON.parse(sessionStorage.getItem('model'));
        this.loanAppSeq = this.model.loanAppSeq;
        this.loanService.getInsuranceMembers(this.model.loanAppSeq).subscribe(function (res) {
            _this.insurnaceMemberFromData = res;
            console.log(_this.insurnaceMemberFromData);
        });
        // bm adding child 
        this.loanService.getLoanApp(this.model.loanSeq).subscribe(function (res) {
            _this.loanApplicationInfo = res.loanApp;
            if (res.loanApp.loan_app_sts_seq == "703" && _this.auth.role == "bm") {
                _this.addingChildAfterDisbursement = false;
                _this.minYear = res.loanApp.loan_app_sts_dt;
                var a = new Date(_this.loanApplicationInfo.loan_app_sts_dt);
                var today = new Date();
                var checkingYearFromDisbursmentDate = new Date(a.setMonth(a.getMonth() + 12));
                if (today < checkingYearFromDisbursmentDate) {
                    _this.date = new Date();
                }
                else {
                    _this.date = checkingYearFromDisbursmentDate;
                }
            }
            else {
                _this.addingChildAfterDisbursement = true;
            }
        });
        console.log(this.model);
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                    _this.formSeq = element.formSeq;
                }
            });
        }
        this.member = new _shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_3__["InsuranceMember"](this.model.loanAppSeq);
        // this.model.hlthInsrFlag = false;
        this.spinner.show();
        this.loanService.getInsurancePlans().subscribe(function (res) {
            console.log(res);
            _this.spinner.hide();
            _this.plans = res;
            _this.planChanged();
        }, function (error) {
            _this.spinner.hide();
            console.log(error);
        });
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.formSaved = true;
            console.log('EDIT');
            this.loanService.getSavedInsurancePlan(this.model.loanAppSeq).subscribe(function (res) {
                Object.assign(_this.model, res, _this.model);
                console.log(_this.model);
                _this.model.formSeq = _this.formSeq;
                _this.planChanged();
            }, function (error) {
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
            this.loanService.getInsuranceMembers(this.model.loanAppSeq).subscribe(function (res) {
                res.forEach(function (obj) {
                    if (obj.dob) {
                        var array = obj.dob.split('T', 1);
                        console.log(array.length);
                        if (array.length) {
                            obj.dob = array[0];
                        }
                    }
                });
                _this.model.insuranceMembers = res;
                _this.savedPlans = res;
                console.log(res);
            }, function (error) {
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
        this.loadLovs();
        // console.log(this.member.memberName)
        // console.log(this.loanApplicationInfo.loan_app_sts_dt)
    };
    InsuranceInfoComponent.prototype.planChanged = function () {
        for (var i = 0; i < this.plans.length; i++) {
            if (this.plans[i].planId == this.model.healthInsrPlanSeq) {
                this.selectedPlan = this.plans[i];
            }
        }
    };
    InsuranceInfoComponent.prototype.relationChanged = function (flag) {
        if (flag) {
            this.model.mainBreadEarnerName = "";
        }
        this.disableMainEarner = false;
        var husbandKey = -1;
        var selfkey = -1;
        this.breadEarner.forEach(function (relation, index) {
            if (relation.codeValue.toLowerCase() == 'husband') {
                husbandKey = relation.codeKey;
            }
            if (relation.codeValue.toLowerCase() == 'self') {
                selfkey = relation.codeKey;
            }
        });
        if (this.model.relWithBreadEarnerKey == husbandKey) {
            if (this.model.spzFirstName != null && this.model.spzFirstName != undefined && this.model.spzFirstName.length > 0
                && this.model.spzLastName != null && this.model.spzLastName != undefined && this.model.spzLastName.length > 0) {
                this.disableMainEarner = true;
                this.model.mainBreadEarnerName = this.model.spzFirstName + " " + this.model.spzLastName;
            }
        }
        if (this.model.relWithBreadEarnerKey == selfkey) {
            if (this.model.firstName != null && this.model.firstName != undefined && this.model.firstName.length > 0) {
                this.disableMainEarner = true;
                this.model.mainBreadEarnerName = this.model.firstName + " " + this.model.lastName;
            }
        }
    };
    InsuranceInfoComponent.prototype.onDOBChange = function (dob) {
        this.clientAge = this.calculateAge(new Date(dob));
        this.member.dob = this.commonService.formatDateCustom(dob, 'yyyy-MM-dd');
        this.isCnicDisable = this.clientAge < 18;
        if (this.clientAge < 18)
            this.member.memberCnicNum = "";
        console.log(this.member.dob);
        console.log(this.clientAge);
    };
    InsuranceInfoComponent.prototype.calculateAge = function (birthday) {
        var ageDifMs = Date.now() - birthday.getTime();
        var ageDate = new Date(ageDifMs); // miliseconds from epoch
        return Math.abs(ageDate.getUTCFullYear() - 1970);
    };
    InsuranceInfoComponent.prototype.saveClicked = function () {
        var _this = this;
        console.log(this.model);
        this.model.formSeq = this.formSeq;
        this.model.loanAppSeq = this.loanAppSeq;
        if (this.model.hlthInsrFlag) {
            // this.model.mainBreadEarnerName = "";
            // this.model.relWithBreadEarnerKey = 0;
            // this.model.healthInsurancePlanSeq = 0;
            // this.model.healthInsrPlanSeq = 0;
            if (this.model.exclusionCategoryKey == null || this.model.exclusionCategoryKey == undefined || this.model.exclusionCategoryKey == 0) {
                this.toaster.error("Field Missing");
                return;
            }
            if (this.model.clntHlthInsrSeq == '' || this.model.clntHlthInsrSeq == null || this.model.clntHlthInsrSeq == 0) {
                // this.model.exclusionCategory = '1';
                // this.model.loanAppSeq = this.model.loanSeq;
                this.loanService.saveInsuranceInfo(this.model).subscribe(function (res) {
                    _this.model.forms.forEach(function (form) {
                        if ('/loan-origination/app/' + form.formUrl == _this.router.url) {
                            form.isSaved = true;
                            form.formSaved = true;
                        }
                    });
                    console.log(res);
                    sessionStorage.setItem('model', JSON.stringify(_this.model));
                    // this.formSaved = true;
                    _this.toaster.success("Health Insurance Saved");
                }, function (error) {
                    _this.toaster.error(error.error.error, "Error");
                    console.log('err In Loan Info Service');
                    console.log('err', error);
                });
            }
            else {
                this.loanService.updateInsuranceInfo(this.model).subscribe(function (res) {
                    console.log(res);
                    _this.model.forms.forEach(function (form) {
                        if ('/loan-origination/app/' + form.formUrl == _this.router.url) {
                            form.isSaved = true;
                            form.formSaved = true;
                        }
                    });
                    sessionStorage.setItem('model', JSON.stringify(_this.model));
                    // this.formSaved = true;
                    _this.toaster.success("Health Insurance Saved");
                }, function (error) {
                    _this.toaster.error(error.error.error, "Error");
                    console.log('err In Loan Info Service');
                    console.log('err', error);
                });
            }
        }
        else {
            if (this.model.mainBreadEarnerName == undefined || this.model.mainBreadEarnerName == null || this.model.mainBreadEarnerName == ""
                || this.model.relWithBreadEarnerKey == undefined || this.model.relWithBreadEarnerKey == null || this.model.relWithBreadEarnerKey == 0
                || this.model.healthInsrPlanSeq == undefined || this.model.healthInsrPlanSeq == null || this.model.healthInsrPlanSeq == 0) {
                this.toaster.error("Fields Missing");
                return;
            }
            if (this.model.clntHlthInsrSeq == '' || this.model.clntHlthInsrSeq == null || this.model.clntHlthInsrSeq == 0) {
                this.loanService.saveInsuranceInfo(this.model).subscribe(function (res) {
                    _this.model.forms.forEach(function (form) {
                        if ('/loan-origination/app/' + form.formUrl == _this.router.url) {
                            form.isSaved = true;
                            form.formSaved = true;
                        }
                    });
                    console.log(res);
                    sessionStorage.setItem('model', JSON.stringify(_this.model));
                    // this.formSaved = true;
                    _this.toaster.success("Health Insurance Saved");
                }, function (error) {
                    _this.toaster.error(error.error.error, "Error");
                    console.log('err In Loan Info Service');
                    console.log('err', error);
                });
            }
            else {
                this.loanService.updateInsuranceInfo(this.model).subscribe(function (res) {
                    console.log(res);
                    _this.model.forms.forEach(function (form) {
                        if ('/loan-origination/app/' + form.formUrl == _this.router.url) {
                            form.isSaved = true;
                            form.formSaved = true;
                        }
                    });
                    sessionStorage.setItem('model', JSON.stringify(_this.model));
                    // this.formSaved = true;
                    _this.toaster.success("Health Insurance Saved");
                }, function (error) {
                    _this.toaster.error(error.error.error, "Error");
                    console.log('err In Loan Info Service');
                    console.log('err', error);
                });
            }
        }
        this.formSaved = true;
        if (this.model.forms) {
            var hasboth_2 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_2 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_2 = true;
                        }
                    });
                }
            });
        }
        sessionStorage.setItem('model', JSON.stringify(this.model));
    };
    InsuranceInfoComponent.prototype.continueClicked = function () {
        var _this = this;
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    if (_this.model.isNomDetailAvailable) {
                        _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 1].formUrl]);
                    }
                    else {
                        _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 2].formUrl]);
                    }
                }
                i_1++;
            });
        }
        // this.router.navigate(['loan-origination/nominee']);
    };
    InsuranceInfoComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedInsurance', this.formSaved.toString());
    };
    InsuranceInfoComponent.prototype.onInsuranceFormSubmit = function () {
        var _this = this;
        this.cnicMandatory = true;
        this.memberCnic = "";
        console.log(this.model.clntHlthInsrSeq);
        console.log(this.model.clntHlthInsrSeq != 0 && this.model.clntHlthInsrSeq != null && this.model.clntHlthInsrSeq != '' || this.model.clntHlthInsrSeq != undefined);
        this.spinner.show();
        this.isEdit = false;
        this.isCnicDisable = true;
        // this.model.exclusionCategoryKey = 0;
        this.model.loanAppSeq = this.loanAppSeq;
        console.log(this.model);
        if (this.model.clntHlthInsrSeq != 0 && this.model.clntHlthInsrSeq != null && this.model.clntHlthInsrSeq != '' && this.model.clntHlthInsrSeq != undefined) {
            this.loanService.updateInsuranceInfo(this.model).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                _this.model.clntHlthInsrSeq = res.clntHlthInsrSeq;
                _this.member = new _shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_3__["InsuranceMember"](_this.model.loanSeq);
                _this.model.forms.forEach(function (form) {
                    if ('/loan-origination/app/' + form.formUrl == _this.router.url) {
                        form.isSaved = true;
                        form.formSaved = true;
                        _this.breadcrumbProvider.addCheckedItemDis(form.formNm, '/loan-origination/app/' + form.formUrl, form.isSaved, false);
                    }
                });
                var husbandKey = -1;
                var i = -1;
                _this.relationType.forEach(function (relation, index) {
                    console.log(relation.codeValue);
                    if (relation.codeValue.toLowerCase() == 'husband') {
                        husbandKey = relation.codeKey;
                        i = index;
                    }
                });
                if (husbandKey) {
                    _this.model.insuranceMembers.forEach(function (member) {
                        if (member.relKey == husbandKey) {
                            if (i >= 0) {
                                _this.relationType.splice(i, 1);
                            }
                        }
                    });
                }
                // this.member = new InsuranceMember(this.model.clntHlthInsrSeq);
                $('#addmember').modal('show');
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.spinner.hide();
                // this.formSaved = true;
                _this.loanService.getLoanApp(_this.model.loanSeq).subscribe(function (res) {
                    _this.loanApplicationInfo = res.loanApp;
                    if (res.loanApp.loan_app_sts_seq == "703" && _this.auth.role == "bm") {
                        console.log('i am inside on insurance form submit');
                        _this.member.maritalStatusKey = 21;
                        for (var i_2 = 0; i_2 < _this.relationType.length; i_2++) {
                            if (_this.relationType[i_2].codeKey == 434) {
                                _this.relationType.splice(i_2, 1);
                            }
                        }
                    }
                });
            }, function (error) {
                _this.spinner.hide();
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
        else {
            // this.model.exclusionCategory = '1';
            // this.model.loanAppSeq = this.model.loanSeq;
            this.loanService.saveInsuranceInfo(this.model).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                _this.model.clntHlthInsrSeq = res.clntHlthInsrSeq;
                _this.member = new _shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_3__["InsuranceMember"](_this.model.loanSeq);
                var husbandKey = -1;
                var i = -1;
                _this.relationType.forEach(function (relation, index) {
                    if (relation.codeValue.toLowerCase() == 'husband') {
                        husbandKey = relation.codeKey;
                        i = index;
                    }
                });
                if (husbandKey) {
                    _this.model.insuranceMembers.forEach(function (member) {
                        if (member.relKey == husbandKey) {
                            if (i >= 0) {
                                _this.relationType.splice(i, 1);
                            }
                        }
                    });
                }
                $('#addmember').modal('show');
                _this.model.forms.forEach(function (form) {
                    if ('/loan-origination/app/' + form.formUrl == _this.router.url) {
                        form.isSaved = true;
                        form.formSaved = true;
                    }
                });
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                // this.formSaved = true;
            }, function (error) {
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
    };
    InsuranceInfoComponent.prototype.onRadioChange = function (radio) {
        this.hasPlan = radio;
        if (!this.hasPlan) {
            // this.model.insuranceMembers = [];
        }
        else {
            // this.model.exclusionCategoryKey = 0;
        }
        console.log(this.hasPlan);
    };
    InsuranceInfoComponent.prototype.onAddInsuranceMemberFormSubmit = function () {
        var _this = this;
        var valueOfName = this.member.memberName;
        if (this.loanApplicationInfo.loan_app_sts_seq == "703" && this.auth.role == "bm") {
            console.log(this.loanApplicationInfo.loan_app_sts_seq);
            console.log(this.auth.role);
            console.log(valueOfName);
            for (var a = 0; a < this.model.insuranceMembers.length; a++) {
                if (this.model.insuranceMembers[a].memberName.trim().toLowerCase().split(' ').join('') == valueOfName.trim().toLowerCase().split(' ').join('')) {
                    this.toaster.error('Name Already Exist', 'Error');
                    return;
                }
            }
        }
        if (this.auth.role == "admin") {
            for (var i = 0; i < this.model.insuranceMembers.length; i++) {
                if (this.model.insuranceMembers[i].memberName.trim().toLowerCase().split(' ').join('') == valueOfName.trim().toLowerCase().split(' ').join('')) {
                    this.toaster.error('Name Already Exist', 'Error');
                    return;
                }
            }
        }
        console.log(this.model);
        // console.log(this.model.insuranceMembers)
        // if (this.model.insuranceMembers.loanAppStatus == "ACTIVE") {
        //   console.log('i am active loan');
        //   return;
        // }
        this.spinner.show();
        this.member.clntHlthInsrSeq = this.model.clntHlthInsrSeq;
        this.member.loanAppSeq = this.model.loanAppSeq;
        console.log(this.member);
        if (this.isEdit) {
            this.loanService.updateInsuranceMember(this.member).subscribe(function (res) {
                _this.spinner.hide();
                _this.toaster.success("Updated Plan");
                console.log(res);
                $('#addmember').modal('hide');
                // sessionStorage.setItem("model", JSON.stringify(this.model));
                // this.formSaved = true;
            }, function (error) {
                _this.spinner.hide();
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
        else {
            this.loanService.saveInsuranceMember(this.member).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                _this.toaster.success("Saved");
                _this.member.hlthInsrMemberSeq = res.hlthInsrMemberSeq;
                _this.model.insuranceMembers.push(_this.member);
                $('#addmember').modal('hide');
                _this.member = new _shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_3__["InsuranceMember"](_this.model.loanAppSeq);
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                // this.formSaved = true;
            }, function (error) {
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
    };
    InsuranceInfoComponent.prototype.cancelClicked = function () {
        this.member = new _shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_3__["InsuranceMember"](this.model.clntHlthInsrSeq);
        $('#addmember').modal('hide');
    };
    InsuranceInfoComponent.prototype.editMember = function (member) {
        // this.isRelationDisable = 
        var _this = this;
        var husbandKey = -1;
        var i = -1;
        this.relationTypeOrig.forEach(function (relation, index) {
            if (relation.codeValue.toLowerCase() == 'husband') {
                husbandKey = relation.codeKey;
                i = index;
            }
        });
        if (member.relKey == husbandKey) {
            this.relationType = JSON.parse(JSON.stringify(this.relationTypeOrig));
        }
        this.member = member;
        this.isEdit = true;
        this.handleChanges(member.relKey);
        this.onDOBChange(member.dob);
        this.memberCnic = "";
        //  CNIC Pattern
        var str = this.member.memberCnicNum + "";
        var charArray = str.split("");
        charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                _this.memberCnic = _this.memberCnic + '-';
            _this.memberCnic = _this.memberCnic + item;
        });
        this.gender = JSON.parse(JSON.stringify(this.genderOrig));
        this.maritalStatus = JSON.parse(JSON.stringify(this.maritalStatusOrig));
        $('#addmember').modal('show');
    };
    InsuranceInfoComponent.prototype.deleteMember = function (member) {
        $('#deleteConfirmation').modal('show');
        this.itemToBeDeleted = member;
    };
    InsuranceInfoComponent.prototype.returnCNICPattern = function (cnic) {
        var string = '';
        var str = cnic + "";
        var charArray = str.split("");
        charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                string = string + '-';
            string = string + item;
        });
        return string;
    };
    InsuranceInfoComponent.prototype.confirmDelete = function () {
        var _this = this;
        this.spinner.show();
        this.loanService.deleteInsuranceMember(this.itemToBeDeleted.hlthInsrMemberSeq).subscribe(function (res) {
            console.log(res);
            $('#deleteConfirmation').modal('hide');
            _this.spinner.hide();
            _this.toaster.success("Deleted");
            var index = _this.model.insuranceMembers.indexOf(_this.itemToBeDeleted, 0);
            if (index > -1) {
                _this.model.insuranceMembers.splice(index, 1);
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, "Error");
            console.log(error);
        });
    };
    InsuranceInfoComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["HEALTH_INSURANCE_PLAN"]).subscribe(function (res) {
            _this.healthInsurancePlan = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["KSZB_EXCLUSION_CATEGORY"]).subscribe(function (res) {
            _this.exclusionCategory = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["GENDER"]).subscribe(function (res) {
            _this.gender = res;
            _this.genderOrig = JSON.parse(JSON.stringify(res));
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["MARITAL_STATUS"]).subscribe(function (res) {
            _this.maritalStatus = res;
            _this.maritalStatusOrig = JSON.parse(JSON.stringify(res));
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["INSURANCE_RELATION"]).subscribe(function (res) {
            _this.relationType = JSON.parse(JSON.stringify(res));
            _this.relationTypeOrig = JSON.parse(JSON.stringify(res));
            console.log("================");
            console.log(_this.relationTypeOrig);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["BREAD_EARNER"]).subscribe(function (res) {
            _this.breadEarner = res;
            _this.relationChanged(false);
            console.log(_this.breadEarner);
        }, function (error) {
            console.log('err', error);
        });
    };
    InsuranceInfoComponent.prototype.findValueFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == key) {
                    return array[i].codeValue;
                }
            }
        }
    };
    InsuranceInfoComponent.prototype.findCodeFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == key) {
                    return array[i].codeRefCd;
                }
            }
        }
    };
    InsuranceInfoComponent.prototype.findKeyFromVal = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue.toLowerCase() == key.toLowerCase()) {
                    return array[i].codeKey;
                }
            }
        }
        return 0;
    };
    InsuranceInfoComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    InsuranceInfoComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    InsuranceInfoComponent.prototype.handleChanges = function (event) {
        var _this = this;
        console.log(this.relationType);
        console.log(event);
        this.isRelationDisable = false;
        this.isDobDisable = false;
        this.cnicMandatory = true;
        this.gender = JSON.parse(JSON.stringify(this.genderOrig));
        this.maritalStatus = JSON.parse(JSON.stringify(this.maritalStatusOrig));
        this.minYear = new Date(this.year - 64, this.month, this.day);
        // alert(this.member.relKey)
        if (this.findCodeFromKey(this.member.relKey, this.relationType).toLowerCase() == '0013') {
            this.minYear = new Date((this.year - 25), this.month, this.day);
            // this.member.genderKey = null;
            // this.findKeyFromVal();
            var i_3 = -1;
            this.cnicMandatory = false;
            this.gender.forEach(function (gender, index) {
                if (gender.codeValue.toLowerCase() == 'female') {
                    i_3 = index;
                    // if(this.member.genderKey == gender.codeKey){
                    //   this.member.genderKey = null;
                    // }
                }
            });
            this.member.genderKey = this.findKeyFromVal("male", this.gender);
            if (i_3 >= 0) {
                this.gender.splice(i_3, 1);
            }
            this.member.maritalStatusKey = this.findKeyFromVal("single", this.maritalStatus);
            this.isRelationDisable = true;
        }
        else if (this.findCodeFromKey(this.member.relKey, this.relationType).toLowerCase() == '0014') {
            this.cnicMandatory = false;
            // this.member.genderKey = null
            // this.member.maritalStatusKey = null;
            var i_4 = -1;
            this.gender.forEach(function (gender, index) {
                if (gender.codeValue.toLowerCase() == 'male') {
                    i_4 = index;
                    if (_this.member.genderKey == gender.codeKey) {
                        _this.member.genderKey = null;
                    }
                }
            });
            this.member.genderKey = this.findKeyFromVal('female', this.gender);
            if (i_4 >= 0) {
                this.gender.splice(i_4, 1);
            }
            i_4 = -1;
            this.maritalStatus.forEach(function (sts, index) {
                if (sts.codeValue.toLowerCase() == "married") {
                    i_4 = index;
                    if (_this.member.maritalStatusKey == sts.codeKey) {
                        _this.member.maritalStatusKey = null;
                    }
                }
            });
            if (i_4 >= 0) {
                this.maritalStatus.splice(i_4, 1);
            }
            this.minYear = new Date(this.model.dob);
        }
        else if (this.findCodeFromKey(this.member.relKey, this.relationType).toLowerCase() == '0008') {
            var i_5 = -1;
            this.gender.forEach(function (gender, index) {
                if (gender.codeValue.toLowerCase() == "female") {
                    i_5 = index;
                    if (_this.member.genderKey == gender.codeKey) {
                        _this.member.genderKey = null;
                    }
                }
            });
            this.member.genderKey = this.findKeyFromVal('male', this.gender);
            if (i_5 >= 0) {
                this.gender.splice(i_5, 1);
            }
            this.member.maritalStatusKey = this.findKeyFromVal("married", this.maritalStatus);
            this.isRelationDisable = true;
        }
        else if (this.findCodeFromKey(this.member.relKey, this.relationType).toLowerCase() == '1050') {
            var i_6 = -1;
            this.gender.forEach(function (gender, index) {
                if (gender.codeValue.toLowerCase() == "male") {
                    i_6 = index;
                    if (_this.member.genderKey == gender.codeKey) {
                        _this.member.genderKey = null;
                    }
                }
            });
            if (i_6 >= 0) {
                this.gender.splice(i_6, 1);
            }
            this.member.maritalStatusKey = this.findKeyFromVal('married', this.maritalStatus);
            this.member.genderKey = this.findKeyFromVal('female', this.gender);
            this.isRelationDisable = true;
        }
        if (this.auth.role == "bm" && this.loanApplicationInfo.loan_app_sts_seq == "703") {
            var a = new Date(this.loanApplicationInfo.loan_app_sts_dt);
            this.minYear = new Date(this.loanApplicationInfo.loan_app_sts_dt);
            var today = new Date();
            var checkingYearFromDisbursmentDate = new Date(a.setMonth(a.getMonth() + 12));
            if (today < checkingYearFromDisbursmentDate) {
                this.date = new Date();
            }
            else {
                this.date = checkingYearFromDisbursmentDate;
            }
        }
    };
    InsuranceInfoComponent.prototype.cnicPattern = function (event) {
        console.log(event);
        if (event.charCode == 8 || event.charCode == 9
            || event.charCode == 27 || event.charCode == 13
            || (event.charCode == 65 && event.ctrlKey === true))
            return;
        if ((event.charCode < 48 || event.charCode > 57))
            event.preventDefault();
        var length = 0;
        if (this.memberCnic.length)
            length = this.memberCnic.length;
        if (length < 15) {
            if (length == 5 || length == 13)
                this.memberCnic = this.memberCnic + "-";
            this.member.memberCnicNum = this.memberCnic.replace(/-/g, '');
            this.member.memberCnicNum = this.member.memberCnicNum + event.key;
        }
    };
    InsuranceInfoComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-insurance-info',
            template: __webpack_require__(/*! ./insurance-info.component.html */ "./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.html"),
            styles: [__webpack_require__(/*! ./insurance-info.component.css */ "./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_12__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_11__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_12__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_12__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _shared_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_8__["BreadcrumbProvider"]])
    ], InsuranceInfoComponent);
    return InsuranceInfoComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.css":
/*!*******************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.css ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.html":
/*!********************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n      <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n      <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" id=\"basic-tab\" data-toggle=\"tab\" href=\"#basincinfo\" role=\"tab\" aria-controls=\"home\"\r\n            aria-selected=\"true\">Basic\r\n            Info</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"address-tab\" data-toggle=\"tab\" href=\"#addressTab\" role=\"tab\"\r\n            aria-controls=\"addressTab\" aria-selected=\"false\">Business\r\n            Address Detail</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"incomeid\" data-toggle=\"tab\" href=\"#incomeTab\" role=\"tab\" aria-controls=\"incomeTab\"\r\n            aria-selected=\"false\">Income</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"expensesid\" data-toggle=\"tab\" href=\"#expensesTab\" role=\"tab\"\r\n            aria-controls=\"expensesTab\" aria-selected=\"false\">Expenses</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"livestockid\" data-toggle=\"tab\" href=\"#livestockTab\" role=\"tab\"\r\n            aria-controls=\"livestockTab\" aria-selected=\"false\">Existing Livestock</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"financeid\" data-toggle=\"tab\" href=\"#financeTab\" role=\"tab\" aria-controls=\"financeTab\"\r\n            aria-selected=\"false\">Est. Cost To Finance New Livestock</a>\r\n        </li>\r\n      </ul>\r\n      <form (ngSubmit)=\"onBusinessAppraisalFormSubmit()\" #businessAppraisalForm=\"ngForm\">\r\n        <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"basincinfo\" role=\"tabpanel\" aria-labelledby=\"basic-tab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Business Sector\"\r\n                    (selectionChange)=\"onSectorChange()\" [(ngModel)]=\"model.businessAppraisal.sectorKey\"\r\n                    [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"sectorKey\" required>\r\n                    <mat-option *ngFor=\"let edu of filterBy('bizSectSortOrdr', sector)\" [value]=\"edu.bizSectSeq\">\r\n                      {{edu.bizSectNm}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"sector\" bindLabel=\"codeValue\" bindValue=\"codeKey\" placeholdevr=\"Select Sector\" name=\"codeValue\" [(ngModel)]=\"model.businessAppraisal.sectorKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Activity\"\r\n                    [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" [(ngModel)]=\"model.businessAppraisal.activityKey\"\r\n                    name=\"activityKey\" required>\r\n                    <mat-option *ngFor=\"let edu of activity\" [value]=\"edu.bizActySeq\">\r\n                      {{edu.bizActyNm}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"activity\" bindLabel=\"codeValue\" bindValue=\"codeKey\" placeholder=\"Select Activity\" name=\"codeValue\" [(ngModel)]=\"model.businessAppraisal.activityKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input (keypress)=\"onlyLetters($event)\" matInput [disabled]=\"readonly && auth.role!='admin'\"\r\n                    type=\"text\" required [(ngModel)]=\"model.businessAppraisal.businessDetailStr\"\r\n                    id=\"businessDetailStrId\" name=\"businessDetailStr\" #businessDetailStr=\"ngModel\"\r\n                    pattern=\"([a-zA-Z 0-9/ ,]\\s*)+\" [errorStateMatcher]=\"matcher\" placeholder=\"Business Detail\">\r\n                  <mat-error *ngIf=\"businessDetailStr.invalid\">\r\n                    Business Detail is <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"['Manufacturing Of Cloth','Production of Textile']\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Business detail\"\r\n                  name=\"codeValue\" [(ngModel)]=\"model.businessAppraisal.businessDetailKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1-5\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\"\r\n                    placeholder=\"Select Personal(s) Running Business\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    (selectionChange)=\"onPersonelChange()\"\r\n                    [(ngModel)]=\"model.businessAppraisal.personRunningBusinessKey\" name=\"personRunningBusinessKey\"\r\n                    required>\r\n                    <mat-option *ngFor=\"let edu of businessRunner\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <!-- <ng-select [items]=\"businessRunner\" bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Personnel(s) Running the Business\"\r\n                  [(ngModel)]=\"model.businessAppraisal.personRunningBusinessKey\">\r\n                </ng-select> -->\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Business ownership\"\r\n                    [(ngModel)]=\"model.businessAppraisal.businessOwnerShip\" [errorStateMatcher]=\"matcher\"\r\n                    pattern=\"^[1-9]\\d*$\" name=\"businessOwnerShip\" required>\r\n                    <mat-option *ngFor=\"let edu of businessOwnership\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Business Property Ownership\"\r\n                    [(ngModel)]=\"model.businessAppraisal.bizPropertyOwnKey\" [errorStateMatcher]=\"matcher\"\r\n                    pattern=\"^[1-9]\\d*$\" name=\"bizPropertyOwnKey\" required>\r\n                    <mat-option *ngFor=\"let edu of propertyOwnership\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" placeholder=\"Business Phone number\"\r\n                    [disabled]=\"readonly && auth.role!='admin'\" matInput id=\"phoneNumber\" name=\"bizPhoneNum\"\r\n                    maxlength=\"11\" pattern=\"^[0-9]{11}$\" [errorStateMatcher]=\"matcher\"\r\n                    [(ngModel)]=\"model.businessAppraisal.bizPhoneNum\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1-5\" style=\"display:none\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" placeholder=\"Client Participation Percentage\" matInput\r\n                    [disabled]=\"readonly && auth.role!='admin'\" id=\"clientPercentage\" name=\"clientPercentage\" readonly\r\n                    [(ngModel)]=\"cpPercentage\" disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"2\" pattern=\"\\d*\" max=\"99\" min=\"0\"\r\n                    required id=\"noYears\" name=\"noYears\" #years=\"ngModel\" [errorStateMatcher]=\"matcher\" (change)=\"calculateTotalMonth()\"\r\n                    [(ngModel)]=\"model.businessAppraisal.yearsInBusiness\" matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"No. of Years in Business\">\r\n                  <mat-error *ngIf=\"years.invalid\">\r\n                    business years are\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"2\" pattern=\"^(0?[0-9]|1[012])$\" min=\"1\" max=\"12\"\r\n                    max=\"12\" required id=\"noMonths\" name=\"noMonths\" [errorStateMatcher]=\"matcher\" (change)=\"calculateTotalMonth()\"\r\n                    [(ngModel)]=\"model.businessAppraisal.monthsInBusiness\" placeholder=\"No. of Months in Business\"\r\n                    matInput [disabled]=\"readonly && auth.role!='admin'\" #months=\"ngModel\">\r\n                  <mat-error *ngIf=\"months.invalid\">\r\n                    business months are\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" placeholder=\"Business Duration Months\" id=\"totalmnths\" name=\"totalmnths\" matInput\r\n                    [disabled]=\"readonly && auth.role!='admin'\" [(ngModel)]=\"totalmnths\" readonly disabled>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"addressTab\" role=\"tabpanel\" aria-labelledby=\"address-tab\">\r\n            <div class=\"pt-1 pb-1\">\r\n              <mat-label>Is Business Address same as Client's home address ?</mat-label>\r\n              <br>\r\n              <mat-radio-group [disabled]=\"readonly && auth.role!='admin'\"\r\n                [(ngModel)]=\"model.businessAppraisal.isbizAddrSAC\" (change)=\"sameAsClientAddressChange()\"\r\n                name=\"isbizAddrSAC\" required>\r\n                <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">\r\n                  {{disFlag.name}}</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div *ngIf=\"!model.businessAppraisal.isbizAddrSAC\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"province\" name=\"province\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.provinceName\" readonly\r\n                      placeholder=\"Province\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input required matInput readonly id=\"district\" name=\"district\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.districtName\" readonly\r\n                      placeholder=\"District\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"tehsil\" name=\"tehsil\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.tehsilName\" readonly placeholder=\"Tehsil\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"uc\" name=\"uc\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.ucName\" readonly placeholder=\"UC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput readonly required id=\"city\" name=\"city\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.cityName\" readonly placeholder=\"City\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 mt-3\" *ngIf=\"!model.businessAppraisal.isbizAddrSAC\">\r\n                  <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" class=\"btn btn-dots\"\r\n                    data-toggle=\"modal\" data-target=\"#Location\"></button>\r\n                  <div class=\"modal fade\" id=\"Location\" role=\"dialog\">\r\n                    <div class=\"modal-dialog bigger mymodal\">\r\n                      <!-- Modal content-->\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\">Location </h5>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <div class=\"table-responsive\">\r\n                            <table class=\"table last-left\">\r\n                              <thead class=\"thead-light last-left\">\r\n                                <tr>\r\n                                  <th>Province</th>\r\n                                  <th>District</th>\r\n                                  <th>Tehsil</th>\r\n                                  <th width=\"20%\">UC</th>\r\n                                  <th>City</th>\r\n                                  <th>Select</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody class=\"evenodd\">\r\n                                <tr *ngFor=\"let address of addresses\">\r\n                                  <td>{{address.provinceName}} </td>\r\n                                  <td>{{address.districtName}}</td>\r\n                                  <td>{{address.tehsilName}}</td>\r\n                                  <td>{{address.ucName}}</td>\r\n                                  <td>{{address.cityName}}</td>\r\n                                  <td>\r\n                                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary btn-min\"\r\n                                      (click)=\"selectAddress(address)\">Select</button>\r\n                                  </td>\r\n                                </tr>\r\n\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"houseNum\" name=\"houseHum\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.houseNum\" matInput\r\n                      [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"House Number\" required\r\n                      [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" id=\"street\" name=\"street\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.sreet_area\" matInput\r\n                      [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Street/Area\" required\r\n                      [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <ng-select [disabled]=\"readonly && auth.role!='admin'\" [items]=\"communityArray\" required\r\n                    bindLabel=\"cmntyNm\" bindValue=\"cmntySeq\" name=\"cmntyNm\" placeholder=\"Select Community\"\r\n                    [(ngModel)]=\"model.businessAppraisal.businessAddress.community\">\r\n                  </ng-select>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" value=\"\" required id=\"village\" name=\"village\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.village\" matInput\r\n                      [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Village\"\r\n                      [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol2\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" id=\"other\" required name=\"other\"\r\n                      [(ngModel)]=\"model.businessAppraisal.businessAddress.otherDetails\" matInput\r\n                      [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Other Details\"\r\n                      [disabled]=\"model.businessAppraisal.isbizAddrSAC\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"incomeTab\" role=\"tabpanel\" aria-labelledby=\"incomeTab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" (change)=\"incomeChange()\" min=\"0\"\r\n                    (change)=\"incomeChange()\" placeholder=\"Max Monthly Sale\" id=\"maxMonthSale\" name=\"maxMonthSale\"\r\n                    maxlength=\"6\" #maxMonthlySale=\"ngModel\" [(ngModel)]=\"model.businessAppraisal.maxMonthSale\" matInput\r\n                    [disabled]=\"readonly && auth.role!='admin'\" required [errorStateMatcher]=\"matcher\">\r\n                  <mat-error *ngIf=\"maxMonthlySale.invalid\">\r\n                    max monthly sale is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" min=\"0\" max=\"12\" (keypress)=\"onlyNumbers($event)\" matInput\r\n                    [disabled]=\"readonly && auth.role!='admin'\" required maxlength=\"2\" pattern=\"^(0?[1-9]|1[012])$\"\r\n                    #maxSaleMonth=\"ngModel\" [errorStateMatcher]=\"matcher\" (change)=\"maxMonthChange()\"\r\n                    placeholder=\"No. of Month\" id=\"maxSaleMonth\" name=\"maxSaleMonth\"\r\n                    [(ngModel)]=\"model.businessAppraisal.maxSaleMonth\">\r\n                  <mat-error *ngIf=\"maxSaleMonth.invalid\">\r\n                    max sale month is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" min=\"0\" (keypress)=\"onlyNumbers($event)\" (change)=\"incomeChange()\"\r\n                    placeholder=\"Minimum Monthly Sale\" id=\"minMonthSale\" name=\"minMonthSale\" maxlength=\"6\"\r\n                    #minMonthlySale=\"ngModel\" [(ngModel)]=\"model.businessAppraisal.minMonthSale\" matInput\r\n                    [disabled]=\"readonly && auth.role!='admin'\" required [errorStateMatcher]=\"matcher\">\r\n                  <mat-error *ngIf=\"minMonthlySale.invalid\">\r\n                    min monthly sale is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" min=\"0\" max=\"12\" (change)=\"minMonthChange()\" placeholder=\"No. of Month\"\r\n                    id=\"minSaleMonth\" name=\"minSaleMonth\" min=\"0\" max=\"12\" matInput\r\n                    [disabled]=\"readonly && auth.role!='admin'\" required (keypress)=\"onlyNumbers($event)\" maxlength=\"2\"\r\n                    pattern=\"^(0?[1-9]|1[012])$\" #minSaleMonth=\"ngModel\"\r\n                    [(ngModel)]=\"model.businessAppraisal.minSaleMonth\" matInput\r\n                    [disabled]=\"readonly && auth.role!='admin'\" required>\r\n                  <mat-error *ngIf=\"minSaleMonth.invalid\">\r\n                    min sale month is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput disabled placeholder=\"Average Monthly Income\" id=\"averageMonthIncome\"\r\n                    name=\"averageMonthIncome\" [(ngModel)]=\"averageIncome\" readonly>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Primary Income</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\"\r\n                      (click)=\"addPrimaryIncome()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n                    <div class=\"modal fade\" id=\"addPrimaryIncome\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onPrimaryIncomeFormSubmit()\" #primaryIncomeForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Primary Income</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Primary Income\"\r\n                                      [(ngModel)]=\"primaryIncome.incomeTypeKey\" [errorStateMatcher]=\"matcher\"\r\n                                      pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of primaryIncomeType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\"\r\n                                      pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"primaryIncome\"\r\n                                      name=\"primaryIncome\" [(ngModel)]=\"primaryIncome.incomeAmount\"\r\n                                      [errorStateMatcher]=\"matcher\" (keypress)=\"onlyNumbers($event)\"\r\n                                      placeholder=\"Primary Income Amount\" #primaryIncomeAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"primaryIncomeAmount.invalid\">\r\n                                      primary income is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!primaryIncomeForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Primary Income</th>\r\n                        <th>Primary Income Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let primary of model.businessAppraisal.primaryIncome\">\r\n                        <td>{{findValueFromKey(primary.incomeTypeKey, primaryIncomeTypeOrig)}}</td>\r\n                        <td>{{primary.incomeAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"editPIncome(primary)\"\r\n                            class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"deletePIncome(primary)\"\r\n                            class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Primary Income:</b>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalPrimaryIncome  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Secondary Income</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\"\r\n                      (click)=\"addSecondaryIncome()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"addSecondaryIncome\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onSecondaryIncomeFormSubmit()\" #secondaryIncomeForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Secondary Income</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\"\r\n                                      placeholder=\"Secondary Income\" [(ngModel)]=\"secondaryIncome.incomeTypeKey\"\r\n                                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of secondaryIncomeType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\"\r\n                                      pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"secondryIncomeAmount\"\r\n                                      name=\"secondryIncomeAmount\" [(ngModel)]=\"secondaryIncome.incomeAmount\"\r\n                                      [errorStateMatcher]=\"matcher\" (keypress)=\"onlyNumbers($event)\"\r\n                                      placeholder=\"Secondary Income Amount\" #secondryIncomeAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"secondryIncomeAmount.invalid\">\r\n                                      secondary income is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!secondaryIncomeForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Secondary Income</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let secondary of model.businessAppraisal.secondaryIncome\">\r\n                        <td>{{findValueFromKey(secondary.incomeTypeKey, secondaryIncomeTypeOrig)}}</td>\r\n                        <td>{{secondary.incomeAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"editSIncome(secondary)\"\r\n                            class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"deleteSIncome(secondary)\"\r\n                            class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a href=\"#\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-history\"></i>\r\n                          </a> -->\r\n                        </td>\r\n                      </tr>\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Secondary Income:</b>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalSecondaryIncome  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"expensesTab\" role=\"tabpanel\" aria-labelledby=\"expensesTab\">\r\n            <div class=\"profitwrap\">\r\n              <div class=\"profitbx text-right mb-2 ml-2\">\r\n                <div>\r\n                  <b>Total Business Profit: {{businessProfit | currency:'PKR':''}}</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mb-2\">\r\n                <div>\r\n                  <b>Net Desposable Income: {{netDeposible | currency:'PKR':''}}</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"clearfix\"></div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Business Expenses</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\"\r\n                      (click)=\"BusinessExpenses()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"BusinessExpenses\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onBusinessExpenseFormSubmit()\" #businessExpenseForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Business Expenses</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\"\r\n                                      placeholder=\"Business Expenses Type\" [(ngModel)]=\"businessExpense.expTypKey\"\r\n                                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of businessExpenseType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\"\r\n                                      pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"businessExpAmount\"\r\n                                      name=\"businessExpAmount\" [(ngModel)]=\"businessExpense.expAmount\"\r\n                                      [errorStateMatcher]=\"matcher\" (keypress)=\"onlyNumbers($event)\"\r\n                                      placeholder=\"Expense Amount\" #businessExpAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"businessExpAmount.invalid\">\r\n                                      business expense amount is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!businessExpenseForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Expense Type</th>\r\n                        <th>Expense Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let bExpense of model.businessAppraisal.businessExpense\">\r\n                        <td>{{findValueFromKey(bExpense.expTypKey, businessExpenseTypeOrig)}}</td>\r\n                        <td>{{bExpense.expAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"editBExpense(bExpense)\"\r\n                            class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" (click)=\"deleteBExpense(bExpense)\"\r\n                            class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>-->\r\n                        </td>\r\n                      </tr>\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Business Expense:</b>\r\n                          <br>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalBusinessExpense  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Household Expenses</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-primary btn-sm\"\r\n                      (click)=\"HouseholdExpenses()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"HouseholdExpenses\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onHouseholdExpenseFormSubmit()\" #householdExpenseForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Household Expenses</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select [disabled]=\"readonly && auth.role!='admin'\"\r\n                                      placeholder=\"Household Expenses Type\" [(ngModel)]=\"householdExpense.expTypKey\"\r\n                                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of houseHoldExpenseType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" type=\"text\"\r\n                                      pattern=\"\\d*\" min=\"0\" maxlength=\"7\" required id=\"hhExpAmount\" name=\"hhExpAmount\"\r\n                                      [(ngModel)]=\"householdExpense.expAmount\" [errorStateMatcher]=\"matcher\"\r\n                                      (keypress)=\"onlyNumbers($event)\" placeholder=\"Household Amount\"\r\n                                      #hhExpAmount=\"ngModel\">\r\n                                    <mat-error *ngIf=\"hhExpAmount.invalid\">\r\n                                      house hold expense amount is\r\n                                      <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!householdExpenseForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\"\r\n                                data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Expense Type</th>\r\n                        <th>Expense Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let hExpense of model.businessAppraisal.householdExpense\">\r\n                        <td>{{findValueFromKey(hExpense.expTypKey, houseHoldExpenseTypeOrig)}}</td>\r\n                        <td>{{hExpense.expAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" *ngIf=\"!hExpense.DSED\"\r\n                            (click)=\"editHExpense(hExpense)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" *ngIf=\"!hExpense.DSED\"\r\n                            (click)=\"deleteHExpense(hExpense)\" class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>-->\r\n                        </td>\r\n                      </tr>\r\n                      <!-- <tr *ngFor=\"let hExpense of model.businessAppraisal.householdExpense\">\r\n                        <td>Other Credits</td>\r\n                        <td>{{hExpense.expAmount}}</td>\r\n                        <td>\r\n                          <a (click)=\"editHExpense(hExpense)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </a>\r\n                          <a (click)=\"deleteHExpense(hExpense)\" class=\"iconBtn delBtn simplebtn \">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </a>\r\n                           <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>\r\n                        </td>\r\n                      </tr> -->\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Household Expense:</b>\r\n                          <br>\r\n                        </td>\r\n                        <td>\r\n                          <input style=\"text-align: right\" type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalHouseholdExpense  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <!-------------------------------=========   START OF Existing LIVESTOCK    =======---------------------------------------->\r\n\r\n\r\n          <div class=\"tab-pane fade\" id=\"livestockTab\" role=\"tabpanel\" aria-labelledby=\"livestockTab\">\r\n            <div class=\"row\">\r\n              <div class=\"profitbx text-right mb-2 mr-2 ml-2\">\r\n                <div>\r\n                  <b>Total Head Count:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mb-2\">\r\n                <div>\r\n                  <b>Total Est. Market Value:</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 addBtn\">\r\n                <button class=\"btn btn-primary btn-sm\" [disabled]=\"readonly && auth.role!='admin'\" type=\"button\"\r\n                  data-toggle=\"modal\" (click)=\"openLivestock()\"><i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n\r\n                <!---------------=========   MODAL Existing LIVESTOCK    =======--------------------->\r\n\r\n\r\n                <div class=\"modal fade\" id=\"livestock\" role=\"dialog\">\r\n                  <div class=\"modal-dialog big mymodal\">\r\n\r\n                    <!-- Modal content-->\r\n                    <form (ngSubmit)=\"onSubmitLivestock()\" [formGroup]=\"livestockForm\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\">Add Animal</h5>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <div class=\"cRow\">\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Kind Of Animal:\"\r\n                                formControlName=\"anmlKnd\" [errorStateMatcher]=\"matcher\" required  >\r\n                                  <mat-option *ngFor=\"let edu of arrayOfLiveStockknd\" [value]=\"edu.codeKey\">\r\n                                    {{edu.codeValue}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Type Of Animal:\"\r\n                                formControlName=\"anmlTyp\"  [errorStateMatcher]=\"matcher\" required>\r\n                                <mat-option *ngFor=\"let edu1 of arrayOfLiveStockTyp\" [value]=\"edu1.codeKey\">\r\n                                  {{edu1.codeValue}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\"  [disabled]=\"readonly && auth.role!='admin'\" matInput\r\n                               placeholder=\"Breed:\" [errorStateMatcher]=\"matcher\" formControlName=\"anmlBrd\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" \r\n                                  placeholder=\"Headcount:\" (keypress)=\"onlyNumbers($event)\" \r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"anmlHc\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" \r\n                                  placeholder=\"Est. Market Value:\" (keypress)=\"onlyNumbers($event)\" \r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"estVal\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"modal-footer text-center\">\r\n                          <button type=\"submit\" [disabled]=\"!livestockForm.valid\"\r\n                            class=\"btn btn-primary btn-min\">Ok</button>\r\n                          <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\" id=\"myTable\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th>Sr. No.</th>\r\n                    <th>Kind Of Animal</th>\r\n                    <th>Type</th>\r\n                    <th>Breed</th>\r\n                    <th>Head Count</th>\r\n                    <th>Est. Market Value</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let stock of model.businessAppraisal.extngLvStk; let i=index\">\r\n                    <td>{{i+1}}</td>\r\n                    <td>{{findValueFromKey(stock.anmlKnd, this.arrayOfLiveStockkndOrg)}}\r\n                    <td>{{findValueFromKey(stock.anmlTyp, this.arrayOfLiveStockTypOrg)}}</td>\r\n                    <td>{{stock.anmlBrd}}</td>\r\n                    <td>{{stock.anmlHc}}</td>\r\n                    <td>{{stock.estVal | currency:'PKR':''}}</td>\r\n                    <td>\r\n                      <a data-toggle=\"tooltip\" title=\"Edit\" (click)=\"onEditLivestock(stock,i)\" class=\"iconBtn\"><i\r\n                          class=\"fa fa-pencil\"></i></a>\r\n                      <a data-toggle=\"tooltip\" title=\"Delete\" (click)=\"onDeleteLivestock(stock,i)\"\r\n                        class=\"iconBtn delBtn\"><i class=\"fa fa-trash-o\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <!-------------------------------=========      END OF Existing LIVESTOCK    =======---------------------------------------->\r\n\r\n\r\n          <!-------------------------------START EST. COST TO FINANCE NEW LIVE STOCK    --------------------------------------------->\r\n\r\n          <div class=\"tab-pane fade\" id=\"financeTab\" role=\"tabpanel\" aria-labelledby=\"financeTab\">\r\n            <div class=\"row\">\r\n              <div class=\"profitbx text-right mb-2 mr-2 ml-2\">\r\n                <div>\r\n                  <b>Total Head Count:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mr-2 mb-2\">\r\n                <div>\r\n                  <b>Total Est. Market Value:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mr-2 mb-2\">\r\n                <div>\r\n                  <b>% Funded by Client:</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mr-2 mb-2\">\r\n                <div>\r\n                  <b>% Funded by Kashf:</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 addBtn\">\r\n                <button class=\"btn btn-primary btn-sm\" type=\"button\" [disabled]=\"readonly && auth.role!='admin'\"\r\n                  data-toggle=\"modal\" (click)=\"openFinance()\"><i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                <!-------------- MODAL EST. COST TO FINANCE NEW LIVE STOCK    --------------->\r\n\r\n                <div class=\"modal fade\" id=\"finance\" role=\"dialog\">\r\n                  <div class=\"modal-dialog big mymodal\">\r\n\r\n                    <!-- Modal content-->\r\n                    <form (ngSubmit)=\"onSubmitFinance()\" [formGroup]=\"financeForm\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\">Animal Finance</h5>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <div class=\"cRow\">\r\n                            <!-- <div class=\"cCol2\"> -->\r\n                              <!-- <mat-form-field> -->\r\n                                <!-- <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Kind Of Animal:\"  [(ngModel)]=\"estLvStk.anmlKnd\"\r\n                                formControlName=\"anmlKnd\" [errorStateMatcher]=\"matcher\" required  >\r\n                                  <mat-option *ngFor=\"let edu of arrayOfLiveStockknd\" [value]=\"edu.codeKey\">\r\n                                    {{edu.codeValue}}\r\n                                  </mat-option>\r\n                                </mat-select> -->\r\n                              <!-- </mat-form-field> -->\r\n                            <!-- </div> -->\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Type Of Animal:\"\r\n                                formControlName=\"anmlTyp\"  [errorStateMatcher]=\"matcher\" required>\r\n                                <mat-option *ngFor=\"let edu1 of arrayOfLiveStockTyp\" [value]=\"edu1.codeKey\">\r\n                                  {{edu1.codeValue}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\"  [disabled]=\"readonly && auth.role!='admin'\" matInput\r\n                                placeholder=\"Breed:\" [errorStateMatcher]=\"matcher\" formControlName=\"anmlBrd\">\r\n                               </mat-form-field>\r\n                             </div>\r\n                             <div class=\"cCol2\">\r\n                               <mat-form-field>\r\n                                 <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" \r\n                                   placeholder=\"Headcount:\" (keypress)=\"onlyNumbers($event)\" \r\n                                   [errorStateMatcher]=\"matcher\" formControlName=\"anmlHc\">\r\n                               </mat-form-field>\r\n                             </div>\r\n                             <div class=\"cCol2\">\r\n                               <mat-form-field>\r\n                                 <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" \r\n                                   placeholder=\"Est. Market Value:\" (keypress)=\"onlyNumbers($event)\" \r\n                                   [errorStateMatcher]=\"matcher\" formControlName=\"estVal\">\r\n                                 </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\"\r\n                                  placeholder=\"Amount Financed By Client:\" (keypress)=\"onlyNumbers($event)\"\r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"amtByClient\" >\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" \r\n                                  placeholder=\"Amount Financed By Kashf:\" (keypress)=\"onlyNumbers($event)\"\r\n                                  [errorStateMatcher]=\"matcher\" formControlName=\"amtFin\">\r\n                              </mat-form-field>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"modal-footer text-center\">\r\n                          <button type=\"submit\" [disabled]=\"!financeForm.valid\"\r\n                            class=\"btn btn-primary btn-min\">Ok</button>\r\n                          <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\" id=\"myTable\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th>Sr. No.</th>\r\n                \r\n                    <th>Type</th>\r\n                    <th>Breed</th>\r\n                    <th>Head Count</th>\r\n                    <th>Est. Purcahase Value</th>\r\n                    <th>Amount Financed by Client</th>\r\n                    <th>Amount Financed by Kashf</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let stock of model.businessAppraisal.estLvStk; let i=index\">\r\n                   \r\n                    <td>{{i+1}}</td>\r\n                    <td>{{findValueFromKey(stock.anmlTyp, this.arrayOfLiveStockTypOrg)}}</td>\r\n                    <td>{{stock.anmlBrd}}</td>\r\n                    <td>{{stock.anmlHc}}</td>\r\n                    <td>{{stock.estVal | currency:'PKR':''}}</td>\r\n                    <td>{{stock.amtByClient | currency:'PKR':''}}</td>\r\n                    <td>{{stock.amtFin | currency:'PKR':''}}</td>\r\n                    <td>\r\n                      <a data-toggle=\"tooltip\" title=\"Edit\" (click)=\"onEditFinance(stock,i)\" class=\"iconBtn\"><i\r\n                          class=\"fa fa-pencil\"></i></a>\r\n                      <a data-toggle=\"tooltip\" title=\"Delete\" (click)=\"onDeleteFinance(stock,i)\" class=\"iconBtn delBtn\"><i\r\n                          class=\"fa fa-trash-o\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <!-------------------------------- END EST. COST TO FINANCE NEW LIVE STOCK   ---------------------------------------------->\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <button (click)=\"continueClicked()\" [disabled]=\"!formSaved\" type=\"button\"\r\n          class=\"btn btn-primary\">Continue</button>\r\n        <button class=\"btn btn-default\" [disabled]=\"readonly && auth.role!='admin'\" type=\"submit\">Save</button>\r\n      </form>\r\n\r\n      <div class=\"modal fade\" id=\"deletePConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Primary Income</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmPDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteSConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Secondary Income</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmSDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteBConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Business Expense</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmBDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteHConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Household Expense</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmHDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.ts":
/*!******************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.ts ***!
  \******************************************************************************************************/
/*! exports provided: MY_FORMATS, LivestockAppraisalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LivestockAppraisalComponent", function() { return LivestockAppraisalComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/models/address.model */ "./src/app/shared/models/address.model.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/models/PrimaryIncome.model */ "./src/app/shared/models/PrimaryIncome.model.ts");
/* harmony import */ var _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/models/BusinessExpense.model */ "./src/app/shared/models/BusinessExpense.model.ts");
/* harmony import */ var _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/models/BusinessAppraisal.model */ "./src/app/shared/models/BusinessAppraisal.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var src_app_shared_models_EstimatedLivestock_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/shared/models/EstimatedLivestock.model */ "./src/app/shared/models/EstimatedLivestock.model.ts");
/* harmony import */ var src_app_shared_models_ExistingLivestock_model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/shared/models/ExistingLivestock.model */ "./src/app/shared/models/ExistingLivestock.model.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


















var moment = moment__WEBPACK_IMPORTED_MODULE_14__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var LivestockAppraisalComponent = /** @class */ (function () {
    function LivestockAppraisalComponent(router, fb, loanService, commonService, spinner, breadcrumbProvider, toaster) {
        this.router = router;
        this.fb = fb;
        this.loanService = loanService;
        this.commonService = commonService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.livestock = [];
        this.finance = [];
        this.formSaved = false;
        this.coborrowerFormData = new Object();
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_12__["MyErrorStateMatcher"]();
        this.disFlags = [{ name: 'Yes', value: true }, { name: 'No', value: false }];
        this.otherLoanAmountPerMonth = 0;
        this.otherLoans = [];
        this.addresses = [];
        this.address = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.estLvStk = new src_app_shared_models_EstimatedLivestock_model__WEBPACK_IMPORTED_MODULE_16__["EstimatedLivestock"]();
        this.extngLvStk = new src_app_shared_models_ExistingLivestock_model__WEBPACK_IMPORTED_MODULE_17__["ExistingLivestock"]();
        this.totalPrimaryIncome = 0;
        this.totalSecondaryIncome = 0;
        this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.totalBusinessExpense = 0;
        this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.totalHouseholdExpense = 0;
        this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.averageIncome = 0;
        this.netDeposible = 0;
        this.businessProfit = 0;
    }
    LivestockAppraisalComponent.prototype.onPersonelChange = function () {
        var p = this.findValueFromKey(this.model.businessAppraisal.personRunningBusinessKey, this.businessRunner);
        if (p == 'SELF') {
            this.cpPercentage = '100%';
        }
        else {
            this.cpPercentage = '50%';
        }
    };
    LivestockAppraisalComponent.prototype.calculateTotalMonth = function () {
        if (this.model.businessAppraisal.monthsInBusiness == null || this.model.businessAppraisal.monthsInBusiness == '') {
            this.model.businessAppraisal.monthsInBusiness = 0;
        }
        if (this.model.businessAppraisal.yearsInBusiness == '' || this.model.businessAppraisal.yearsInBusiness == null) {
            this.model.businessAppraisal.yearsInBusiness = 0;
        }
        if (this.model.businessAppraisal.monthsInBusiness == 0 && this.model.businessAppraisal.yearsInBusiness == 0) {
            this.toaster.error('Invalid Years/Months');
            return;
        }
        if ((this.model.businessAppraisal.monthsInBusiness == undefined || this.model.businessAppraisal.monthsInBusiness == null) && (this.model.businessAppraisal.yearsInBusiness == undefined || this.model.businessAppraisal.yearsInBusiness == null)) {
            this.totalmnths = null;
        }
        else if (this.model.businessAppraisal.yearsInBusiness == undefined || this.model.businessAppraisal.yearsInBusiness == null) {
            this.totalmnths = +this.model.businessAppraisal.monthsInBusiness;
        }
        else if (this.model.businessAppraisal.monthsInBusiness == undefined || this.model.businessAppraisal.monthsInBusiness == null) {
            this.totalmnths = Math.floor((+this.model.businessAppraisal.yearsInBusiness * 12));
        }
        else {
            this.totalmnths = Math.floor((+this.model.businessAppraisal.yearsInBusiness * 12) + +this.model.businessAppraisal.monthsInBusiness);
        }
    };
    // calculate
    LivestockAppraisalComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedbusiness', this.formSaved.toString());
    };
    LivestockAppraisalComponent.prototype.calculateTotalValues = function () {
        this.calculateTotalMonth();
        this.totalPrimaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.primaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.primaryIncome[i].incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
        }
        this.totalSecondaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.secondaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.secondaryIncome[i].incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
        }
        this.totalBusinessExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.businessExpense.length; i++) {
            var x = +this.model.businessAppraisal.businessExpense[i].expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
        }
        this.totalHouseholdExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.householdExpense.length; i++) {
            var x = +this.model.businessAppraisal.householdExpense[i].expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
        }
        this.incomeChange();
    };
    LivestockAppraisalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.livestockForm = this.fb.group({
            anmlKnd: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            anmlBrd: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            anmlHc: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            estVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            anmlTyp: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required]
        });
        this.financeForm = this.fb.group({
            anmlKnd: [''],
            anmlBrd: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            anmlHc: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            estVal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            anmlTyp: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            amtByClient: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            amtFin: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required]
        });
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem("basicCrumbs"));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, "/loan-origination/app/" + element.formUrl, element.isSaved);
        });
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        console.log(this.model);
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (!this.model.businessAppraisal) {
            this.model.businessAppraisal = new _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_6__["BusinessAppraisal"](this.model.loanAppSeq, this.model.formSeq);
            this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
            this.model.businessAppraisal.primaryIncome = [];
            this.model.businessAppraisal.secondaryIncome = [];
            this.model.businessAppraisal.businessExpense = [];
            this.model.businessAppraisal.householdExpense = [];
        }
        else {
            this.calculateTotalValues();
        }
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.loanService.getBusinessAppraisal(this.model.loanAppSeq).subscribe(function (res) {
                console.log(res);
                if (res.BusinessApraisal != null && res.BusinessIncome != null) {
                    // this.addresses = res;
                    // this.addresses = res;
                    // this.model.businessAppraisal = res.BusinessAprasal;
                    Object.assign(_this.model.businessAppraisal, res.BusinessApraisal, _this.model.businessAppraisal);
                    Object.assign(_this.model.businessAppraisal, res.BusinessIncome, _this.model.businessAppraisal);
                    // this.model.businessAppraisal.primaryIncome = res.primaryIncome;
                    // this.model.businessAppraisal.secondaryIncome = res.secondaryIncome;
                    // this.model.businessAppraisal.businessExpense = res.businessExpense;
                    // this.model.businessAppraisal.householdExpense = res.householdExpense;
                    // this.model.businessAppraisal.businessAddress = res.BusinessAprasal;
                    var addr = res.BusinessApraisal;
                    _this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
                    _this.model.businessAppraisal.businessAddress.provinceName = addr.provinceName;
                    _this.model.businessAppraisal.businessAddress.districtName = addr.districtName;
                    _this.model.businessAppraisal.businessAddress.tehsilName = addr.tehsilName;
                    _this.model.businessAppraisal.businessAddress.ucName = addr.ucName;
                    _this.model.businessAppraisal.businessAddress.cityName = addr.cityName;
                    _this.model.businessAppraisal.businessAddress.houseNum = addr.houseNum;
                    _this.model.businessAppraisal.businessAddress.sreet_area = addr.sreet_area;
                    _this.model.businessAppraisal.businessAddress.village = addr.village;
                    _this.model.businessAppraisal.businessAddress.otherDetails = addr.otherDetails;
                    _this.model.businessAppraisal.businessAddress.city = addr.city;
                    _this.model.businessAppraisal.businessAddress.tehsil = addr.tehsil;
                    _this.model.businessAppraisal.businessAddress.district = addr.district;
                    _this.model.businessAppraisal.businessAddress.uc = addr.uc;
                    _this.model.businessAppraisal.businessAddress.community = addr.community;
                    // Object.assign(this.model.businessAppraisal.businessAddress, res.BusinessApraisal, this.model.businessAppraisal.businessAddress);
                    console.log(_this.model);
                    if (_this.model.businessAppraisal.activityKey != null && _this.model.businessAppraisal.activityKey != 0 && _this.model.businessAppraisal.activityKey != undefined) {
                        _this.loanService.getBusinessActyForActySeq(_this.model.businessAppraisal.activityKey).subscribe(function (res) {
                            console.log(res);
                            // this.model.
                            if (res.length > 0) {
                                _this.activity = res;
                                _this.model.businessAppraisal.sectorKey = res[0].bizSectSeq;
                            }
                        });
                    }
                }
                _this.calculateTotalValues();
                _this.onPersonelChange();
                _this.loadLovs();
                _this.onSectorChangeLocal();
            }, function (error) {
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            this.loadLovs();
            this.onSectorChangeLocal();
        }
        this.model.businessAppraisal.clientSeq = this.model.clientSeq;
        this.model.businessAppraisal.loanAppSeq = this.model.loanSeq;
        this.getLocations();
    };
    LivestockAppraisalComponent.prototype.getLocations = function () {
        var _this = this;
        this.loanService.getLocationsForPort(this.model.portSeq).subscribe(function (res) {
            console.log(res);
            _this.addresses = res;
            // this.addresses = res;
        }, function (error) {
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    LivestockAppraisalComponent.prototype.continueClicked = function () {
        var _this = this;
        // this.router.navigate(['loan-origination/expected-loan-utilication']);
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    LivestockAppraisalComponent.prototype.findValueFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == key) {
                    return array[i].codeValue;
                }
            }
        }
    };
    LivestockAppraisalComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue == value) {
                    return array[i].codeKey;
                }
            }
        }
        return -1;
    };
    LivestockAppraisalComponent.prototype.findSeqFromCd = function (cd, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeRefCd == cd) {
                    return array[i].codeKey;
                }
            }
        }
        return -1;
    };
    LivestockAppraisalComponent.prototype.findCdFromSeq = function (seq, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == seq) {
                    return array[i].codeRefCd;
                }
            }
        }
        return -1;
    };
    LivestockAppraisalComponent.prototype.onBusinessAppraisalFormSubmit = function () {
        var _this = this;
        this.spinner.show();
        console.log(this.model.businessAppraisal);
        // this.coborrowerFormData = Object.assign(this.coborrowerFormData ,this.model.coBorrower,this.model.coBorrowerAddress);
        // this.model.businessAppraisal.businessAddress.tehsil = '1';
        // this.model.businessAppraisal.businessAddress.union = '1';
        // this.model.businessAppraisal.businessAddress.uc = '1';
        // this.model.businessAppraisal.businessAddress.district = '1';
        // this.model.businessAppraisal.businessAddress.city = '1';
        if (this.model.businessAppraisal.monthsInBusiness == 0 && this.model.businessAppraisal.yearsInBusiness == 0) {
            this.toaster.error('Invalid Years/Months');
            this.spinner.hide();
            return;
        }
        if (!this.model.businessAppraisal.isbizAddrSAC) {
            if (this.model.businessAppraisal.businessAddress.provinceName == null ||
                this.model.businessAppraisal.businessAddress.provinceName === '' ||
                this.model.businessAppraisal.businessAddress.otherDetails == null ||
                this.model.businessAppraisal.businessAddress.otherDetails === '' ||
                this.model.businessAppraisal.businessAddress.houseNum == null ||
                this.model.businessAppraisal.businessAddress.houseNum === '' ||
                this.model.businessAppraisal.businessAddress.village == null ||
                this.model.businessAppraisal.businessAddress.village === '' ||
                this.model.businessAppraisal.businessAddress.otherDetails == null ||
                this.model.businessAppraisal.businessAddress.otherDetails === '') {
                $('#address-tab').click();
                this.toaster.warning('Fields Missing in Address');
                this.spinner.hide();
                return;
            }
        }
        if (this.model.businessAppraisal.maxMonthSale === null ||
            this.model.businessAppraisal.maxMonthSale === '' ||
            this.model.businessAppraisal.maxSaleMonth == null || this.model.businessAppraisal.maxSaleMonth === '' ||
            this.model.businessAppraisal.minMonthSale == null || this.model.businessAppraisal.minMonthSale === '' ||
            this.model.businessAppraisal.minSaleMonth == null || this.model.businessAppraisal.minSaleMonth === '') {
            $('#incomeid').click();
            this.toaster.warning('Fields Missing in Income');
            this.spinner.hide();
            return;
        }
        console.log(this.model.businessAppraisal.maxSaleMonth + this.model.businessAppraisal.minSaleMonth);
        if (this.model.businessAppraisal.maxSaleMonth > 12 || this.model.businessAppraisal.maxSaleMonth < 0
            || this.model.businessAppraisal.minSaleMonth > 12 || this.model.businessAppraisal.minSaleMonth < 0) {
            $('#incomeid').click();
            this.toaster.warning('invalid Months');
            this.spinner.hide();
            return;
        }
        // if (this.model.businessAppraisal.primaryIncome != null || this.model.businessAppraisal.primaryIncome != undefined) {
        //   if (this.model.businessAppraisal.primaryIncome.length <= 0) {
        //     this.toaster.error("Primary Income Missing."); this.spinner.hide();
        //     return;
        //   }
        // }
        if (this.model.businessAppraisal.businessExpense != null || this.model.businessAppraisal.businessExpense != undefined) {
            if (this.model.businessAppraisal.businessExpense.length <= 0) {
                $('#expensesTab').click();
                this.toaster.error("Business Expense Missing.");
                this.spinner.hide();
                return;
            }
        }
        if (this.model.businessAppraisal.householdExpense != null || this.model.businessAppraisal.householdExpense != undefined) {
            if (this.model.businessAppraisal.householdExpense.length <= 0) {
                $('#expensesTab').click();
                this.toaster.error("Household Expense Missing.");
                this.spinner.hide();
                return;
            }
        }
        if (this.model.businessAppraisal.extngLvStk == null || this.model.businessAppraisal.extngLvStk == undefined || this.model.businessAppraisal.extngLvStk.length <= 0) {
            $('#livestockid').click();
            this.toaster.error("Existing livestock is Missing.");
            this.spinner.hide();
            return;
        }
        if (this.model.businessAppraisal.estLvStk == null || this.model.businessAppraisal.estLvStk == undefined || this.model.businessAppraisal.estLvStk.length <= 0) {
            $('#financeid').click();
            this.toaster.error("Estimated livestock is Missing.");
            this.spinner.hide();
            return;
        }
        var formData = new _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_6__["BusinessAppraisal"](this.model.loanAppSeq, this.model.formSeq);
        // let address = JSON.parse(JSON.stringify(this.model.businessAddress));
        // formData = Object.assign(this.model.businessAppraisal,formData, this.model.businessAddress);
        // console.log(formData)
        console.log(this.model.businessAppraisal2);
        this.model.businessAppraisal = Object.assign(this.model.businessAppraisal, this.model.businessAppraisal.businessAddress, this.model.businessAppraisal);
        console.log(this.model.businessAppraisal);
        this.model.businessAppraisal.loanAppSeq = this.model.loanAppSeq;
        this.model.businessAppraisal.formSeq = this.model.formSeq;
        if (this.model.businessAppraisal.bizAprslSeq != null && this.model.businessAppraisal.bizAprslSeq != "" && this.model.businessAppraisal.bizAprslSeq != 0) {
            this.formSaved = true;
            this.model.businessAppraisal.businessAddress.bizSeq = this.model.businessAppraisal.bizAprslSeq;
            console.log('EDIT');
            console.log(this.model.businessAppraisal);
            this.loanService.updateBusinessAppraisal(this.model.businessAppraisal).subscribe(function (res) {
                console.log(res);
                _this.formSaved = true;
                //   console.log(res.incomeHdrSeq);
                //   this.model.businessAppraisal.primaryIncome.forEach(obj => {
                //     obj.IncomeHdrSeq = res.incomeHdrSeq;
                //     this.incomeService(obj);
                //   });
                //   this.model.businessAppraisal.secondaryIncome.forEach(obj => {
                //     obj.IncomeHdrSeq = res.incomeHdrSeq;
                //     this.incomeService(obj);
                //   });
                //   this.model.businessAppraisal.businessExpense.forEach(obj =>{
                //     obj.bizAprslSeq = res.bizAprslSeq;
                //     this.loanService.saveExpense(obj);
                //   });
                //   this.model.businessAppraisal.householdExpense.forEach(obj =>{
                //     obj.bizAprslSeq = res.bizAprslSeq;
                //     this.loanService.saveExpense(obj);
                //   });
                //   console.log(this.model);
                // sessionStorage.setItem("model", JSON.stringify(this.model));
                _this.formSaved = true;
                _this.spinner.hide();
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
                console.log(_this.model);
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                console.log(JSON.parse(sessionStorage.getItem("model")));
                _this.spinner.hide();
            }, function (error) {
                _this.toaster.error("Error");
                _this.spinner.hide();
                console.log('err In Business Appraisal Service');
                console.log('err', error);
            });
        }
        else {
            this.loanService.saveBusinessAppraisal(this.model.businessAppraisal).subscribe(function (res) {
                console.log(res);
                _this.toaster.success("Saved");
                // console.log(res.incomeHdrSeq);
                // this.model.businessAppraisal.primaryIncome.forEach(obj => {
                //   obj.IncomeHdrSeq = res.incomeHdrSeq;
                //   this.incomeService(obj);
                // });
                // this.model.businessAppraisal.secondaryIncome.forEach(obj => {
                //   obj.IncomeHdrSeq = res.incomeHdrSeq;
                //   this.incomeService(obj);
                // });
                // this.model.businessAppraisal.businessExpense.forEach(obj => {
                //   obj.bizAprslSeq = res.bizAprslSeq;
                //   this.expenseService(obj);
                // });
                // this.model.businessAppraisal.householdExpense.forEach(obj => {
                //   obj.bizAprslSeq = res.bizAprslSeq;
                //   this.expenseService(obj);
                // });
                _this.model.businessAppraisal.bizAprslSeq = res.bizAprslSeq;
                _this.model.businessAppraisal.bizAddressSeq = res.bizAddressSeq;
                _this.model.businessAppraisal.incomeHdrSeq = res.incomeHdrSeq;
                _this.model.businessAddress = res.bizAddressSeq;
                _this.model.businessAppraisal.businessAddress.addrSeq = res.bizAddressSeq;
                console.log(_this.model);
                _this.spinner.hide();
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                console.log(JSON.parse(sessionStorage.getItem("model")));
                _this.formSaved = true;
            }, function (error) {
                _this.spinner.hide();
                console.log('err In Business Appraisal Service');
                console.log('err', error);
                _this.toaster.error("Error");
            });
        }
        // console.log(this.coborrowerFormData);
        // console.log(this.model);
        // this.loanService.saveNominee(this.coborrowerFormData).subscribe((res) =>{
        //   console.log(res);
        //   sessionStorage.setItem("model", JSON.stringify(this.model));
        //   this.formSaved = true;
        // },(error)  => {
        //   console.log("err In Loan Service");
        // 	console.log("err", error);
        // });
    };
    LivestockAppraisalComponent.prototype.selectAddress = function (add) {
        console.log(add);
        this.address = add;
        this.model.businessAppraisal.businessAddress.provinceName = add.provinceName;
        this.model.businessAppraisal.businessAddress.districtName = add.districtName;
        this.model.businessAppraisal.businessAddress.tehsilName = add.tehsilName;
        this.model.businessAppraisal.businessAddress.ucName = add.ucName;
        this.model.businessAppraisal.businessAddress.cityName = add.cityName;
        this.model.businessAppraisal.businessAddress.city = add.city;
        this.model.businessAppraisal.businessAddress.tehsil = add.tehsil;
        this.model.businessAppraisal.businessAddress.district = add.district;
        this.model.businessAppraisal.businessAddress.uc = add.uc;
        // Object.assign(this.model.businessAppraisal.businessAddress, add, this.model.businessAppraisal.businessAddress);
        console.log(this.model.businessAppraisal.businessAddress);
    };
    LivestockAppraisalComponent.prototype.addPrimaryIncome = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#addPrimaryIncome').modal('show');
        this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.isEdit = false;
    };
    LivestockAppraisalComponent.prototype.addSecondaryIncome = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#addSecondaryIncome').modal('show');
        this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        this.isEdit = false;
    };
    LivestockAppraisalComponent.prototype.HouseholdExpenses = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#HouseholdExpenses').modal('show');
        this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.isEdit = false;
    };
    LivestockAppraisalComponent.prototype.BusinessExpenses = function () {
        this.removeItemsFromLOVUsingBizApp();
        $('#BusinessExpenses').modal('show');
        this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        this.isEdit = false;
    };
    LivestockAppraisalComponent.prototype.onPrimaryIncomeFormSubmit = function () {
        this.primaryIncome.incomeCategoryKey = 1;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalPrimaryIncome = 0;
            this.model.businessAppraisal.primaryIncome[this.itemToEdit.index] = this.primaryIncome;
            for (var i = 0; i < this.model.businessAppraisal.primaryIncome.length; i++) {
                var x = +this.model.businessAppraisal.primaryIncome[i].incomeAmount;
                this.totalPrimaryIncome = this.totalPrimaryIncome + x;
            }
            ;
            this.removeItemsFromLOVUsingBizApp();
            $('#addPrimaryIncome').modal('hide');
            this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        }
        else {
            console.log(this.primaryIncome);
            if (this.model.businessAppraisal.primaryIncome == undefined)
                this.model.businessAppraisal.primaryIncome = [];
            this.model.businessAppraisal.primaryIncome.push(this.primaryIncome);
            var x = +this.primaryIncome.incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
            $('#addPrimaryIncome').modal('hide');
            this.removeItemsFromLOVUsingBizApp();
            this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    LivestockAppraisalComponent.prototype.onSecondaryIncomeFormSubmit = function () {
        this.secondaryIncome.incomeCategoryKey = 2;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalSecondaryIncome = 0;
            this.model.businessAppraisal.secondaryIncome[this.itemToEdit.index] = this.secondaryIncome;
            for (var i = 0; i < this.model.businessAppraisal.secondaryIncome.length; i++) {
                var x = +this.model.businessAppraisal.secondaryIncome[i].incomeAmount;
                this.totalSecondaryIncome = this.totalSecondaryIncome + x;
            }
            this.removeItemsFromLOVUsingBizApp();
            $('#addSecondaryIncome').modal('hide');
            this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
        }
        else {
            console.log(this.secondaryIncome);
            if (this.model.businessAppraisal.secondaryIncome == undefined)
                this.model.businessAppraisal.secondaryIncome = [];
            this.model.businessAppraisal.secondaryIncome.push(this.secondaryIncome);
            var x = +this.secondaryIncome.incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
            $('#addSecondaryIncome').modal('hide');
            this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_4__["PrimaryIncome"]();
            this.removeItemsFromLOVUsingBizApp();
            console.log(this.model.businessAppraisal.secondaryIncome);
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    LivestockAppraisalComponent.prototype.onBusinessExpenseFormSubmit = function () {
        this.businessExpense.expCategoryKey = 1;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalBusinessExpense = 0;
            this.model.businessAppraisal.businessExpense[this.itemToEdit.index] = this.businessExpense;
            for (var i = 0; i < this.model.businessAppraisal.businessExpense.length; i++) {
                var x = +this.model.businessAppraisal.businessExpense[i].expAmount;
                this.totalBusinessExpense = this.totalBusinessExpense + x;
            }
            this.removeItemsFromLOVUsingBizApp();
            $('#BusinessExpenses').modal('hide');
            this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        }
        else {
            if (this.model.businessAppraisal.businessExpense == undefined)
                this.model.businessAppraisal.businessExpense = [];
            this.model.businessAppraisal.businessExpense.push(this.businessExpense);
            var x = +this.businessExpense.expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
            this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
            this.removeItemsFromLOVUsingBizApp();
            $('#BusinessExpenses').modal('hide');
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    LivestockAppraisalComponent.prototype.onHouseholdExpenseFormSubmit = function () {
        this.householdExpense.expCategoryKey = 2;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalHouseholdExpense = 0;
            this.model.businessAppraisal.householdExpense[this.itemToEdit.index] = this.householdExpense;
            for (var i = 0; i < this.model.businessAppraisal.householdExpense.length; i++) {
                var x = +this.model.businessAppraisal.householdExpense[i].expAmount;
                this.totalHouseholdExpense = this.totalHouseholdExpense + x;
            }
            this.removeItemsFromLOVUsingBizApp();
            $('#HouseholdExpenses').modal('hide');
            this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
        }
        else {
            if (this.model.businessAppraisal.householdExpense == undefined)
                this.model.businessAppraisal.householdExpense = [];
            this.model.businessAppraisal.householdExpense.push(this.householdExpense);
            var x = +this.householdExpense.expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
            this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
            this.removeItemsFromLOVUsingBizApp();
            $('#HouseholdExpenses').modal('hide');
            console.log(this.model.businessAppraisal.householdExpense);
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    LivestockAppraisalComponent.prototype.incomeService = function (income) {
        this.loanService.saveIncome(income).subscribe(function (res) {
            console.log(res);
        }, function (error) {
            console.log('err In ADD INCOME Service');
            console.log('err', error);
        });
    };
    LivestockAppraisalComponent.prototype.expenseService = function (expense) {
        this.loanService.saveExpense(expense).subscribe(function (res) {
            console.log(res);
        }, function (error) {
            console.log('err In Expense Service');
            console.log('err', error);
        });
    };
    LivestockAppraisalComponent.prototype.cancelClicked = function () {
    };
    LivestockAppraisalComponent.prototype.editPIncome = function (primaryIncome) {
        var _this = this;
        this.primaryIncome = JSON.parse(JSON.stringify(primaryIncome));
        this.itemToEdit = JSON.parse(JSON.stringify(primaryIncome));
        this.itemToEdit.index = this.model.businessAppraisal.primaryIncome.indexOf(primaryIncome);
        this.primaryIncomeTypeOrig.forEach(function (element) {
            if (element.codeKey == primaryIncome.incomeTypeKey) {
                _this.primaryIncomeType.push(element);
            }
        });
        $('#addPrimaryIncome').modal('show');
        this.isEdit = true;
    };
    LivestockAppraisalComponent.prototype.deletePIncome = function (pIncome) {
        $('#deletePConfirmation').modal('show');
        this.pItemToDel = pIncome;
    };
    LivestockAppraisalComponent.prototype.confirmPDelete = function () {
        var index = this.model.businessAppraisal.primaryIncome.indexOf(this.pItemToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.primaryIncome.splice(index, 1);
        }
        this.totalPrimaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.primaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.primaryIncome[i].incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#addPrimaryIncome').modal('hide');
        $('#deletePConfirmation').modal('hide');
    };
    LivestockAppraisalComponent.prototype.editSIncome = function (secondaryIncome) {
        var _this = this;
        this.secondaryIncome = JSON.parse(JSON.stringify(secondaryIncome));
        this.itemToEdit = JSON.parse(JSON.stringify(secondaryIncome));
        this.itemToEdit.index = this.model.businessAppraisal.secondaryIncome.indexOf(secondaryIncome);
        $('#addSecondaryIncome').modal('show');
        this.secondaryIncomeTypeOrig.forEach(function (element) {
            if (element.codeKey == secondaryIncome.incomeTypeKey) {
                _this.secondaryIncomeType.push(element);
            }
        });
        this.isEdit = true;
    };
    LivestockAppraisalComponent.prototype.deleteSIncome = function (sIncome) {
        this.sIncomeToDel = sIncome;
        $('#deleteSConfirmation').modal('show');
    };
    LivestockAppraisalComponent.prototype.confirmSDelete = function () {
        var index = this.model.businessAppraisal.secondaryIncome.indexOf(this.sIncomeToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.secondaryIncome.splice(index, 1);
        }
        this.totalSecondaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.secondaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.secondaryIncome[i].incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#addSecondaryIncome').modal('hide');
        $('#deleteSConfirmation').modal('hide');
    };
    LivestockAppraisalComponent.prototype.editBExpense = function (bExpense) {
        var _this = this;
        this.businessExpense = JSON.parse(JSON.stringify(bExpense));
        this.itemToEdit = JSON.parse(JSON.stringify(bExpense));
        this.itemToEdit.index = this.model.businessAppraisal.businessExpense.indexOf(bExpense);
        $('#BusinessExpenses').modal('show');
        this.businessExpenseTypeOrig.forEach(function (element) {
            if (element.codeKey == bExpense.expTypKey) {
                _this.businessExpenseType.push(element);
            }
        });
        this.isEdit = true;
    };
    LivestockAppraisalComponent.prototype.deleteBExpense = function (bExpense) {
        this.bExpenseToDel = bExpense;
        $('#deleteBConfirmation').modal('show');
    };
    LivestockAppraisalComponent.prototype.confirmBDelete = function () {
        var index = this.model.businessAppraisal.businessExpense.indexOf(this.bExpenseToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.businessExpense.splice(index, 1);
        }
        this.totalBusinessExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.businessExpense.length; i++) {
            var x = +this.model.businessAppraisal.businessExpense[i].expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#BusinessExpenses').modal('hide');
        $('#deleteBConfirmation').modal('hide');
    };
    LivestockAppraisalComponent.prototype.editHExpense = function (hExpense) {
        var _this = this;
        this.householdExpense = JSON.parse(JSON.stringify(hExpense));
        this.itemToEdit = JSON.parse(JSON.stringify(hExpense));
        this.itemToEdit.index = this.model.businessAppraisal.householdExpense.indexOf(hExpense);
        $('#HouseholdExpenses').modal('show');
        this.houseHoldExpenseTypeOrig.forEach(function (element) {
            if (element.codeKey == hExpense.expTypKey) {
                _this.houseHoldExpenseType.push(element);
            }
        });
        this.isEdit = true;
    };
    LivestockAppraisalComponent.prototype.deleteHExpense = function (hExpense) {
        this.hExpenseToDel = hExpense;
        $('#deleteHConfirmation').modal('show');
    };
    LivestockAppraisalComponent.prototype.confirmHDelete = function () {
        var index = this.model.businessAppraisal.householdExpense.indexOf(this.hExpenseToDel);
        console.log(index);
        if (index > -1) {
            this.model.businessAppraisal.householdExpense.splice(index, 1);
        }
        this.totalHouseholdExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.householdExpense.length; i++) {
            var x = +this.model.businessAppraisal.householdExpense[i].expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#HouseholdExpenses').modal('hide');
        $('#deleteHConfirmation').modal('hide');
    };
    LivestockAppraisalComponent.prototype.onSectorChange = function () {
        var _this = this;
        if (this.model.businessAppraisal.sectorKey > 0) {
            this.model.businessAppraisal.activityKey = undefined;
            this.spinner.show();
            this.commonService.getActivity(this.model.businessAppraisal.sectorKey).subscribe(function (res) {
                res.forEach(function (acty) {
                    if (acty.bizActySortOrdr == null) {
                        acty.bizActySortOrdr = 9999;
                    }
                });
                _this.activity = res;
                _this.sorting(_this.activity, 'bizActySortOrdr');
                _this.spinner.hide();
            }, function (error) {
                console.log('err', error);
                _this.spinner.hide();
            });
        }
    };
    LivestockAppraisalComponent.prototype.onSectorChangeLocal = function () {
        var _this = this;
        if (this.model.businessAppraisal.sectorKey > 0) {
            this.spinner.show();
            this.commonService.getActivity(this.model.businessAppraisal.sectorKey).subscribe(function (res) {
                _this.spinner.hide();
                _this.activity = res;
            }, function (error) {
                _this.spinner.hide();
                console.log('err', error);
            });
        }
    };
    LivestockAppraisalComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getSectors(this.model.loanProd).subscribe(function (res) {
            res.forEach(function (sect) {
                if (sect.bizSectSortOrdr == null) {
                    sect.bizSectSortOrdr = 9999;
                }
            });
            _this.sector = res;
            _this.sorting(_this.sector, 'bizSectSortOrdr');
            console.log(_this.sector);
        }, function (error) {
            console.log('err', error);
        });
        // this.commonService.getValues(REF_CD_GRP_KEYS.ACTIVITY).subscribe((res) => {
        //   this.activity = res;
        // }, (error) => {
        //   console.log('err', error);
        // });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_LOCATION"]).subscribe(function (res) {
            _this.propertyOwnership = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_RUNNER"]).subscribe(function (res) {
            _this.businessRunner = res;
            _this.onPersonelChange();
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_OWNERSHIP"]).subscribe(function (res) {
            _this.businessOwnership = res;
        }, function (error) {
            console.log('err', error);
        });
        // this.disability = this.lovService("OCCUPATION");
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["INCOME_TYPE"]).subscribe(function (res) {
            _this.primaryIncomeType = res;
            _this.primaryIncomeTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.businessAppraisal.primaryIncome.forEach(function (x) {
                _this.removeItemFromLOV(x.incomeTypeKey, _this.primaryIncomeType);
            });
            console.log(res);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SECOND_INCOME_SOURCE"]).subscribe(function (res) {
            _this.secondaryIncomeType = res;
            _this.secondaryIncomeTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.businessAppraisal.secondaryIncome.forEach(function (x) {
                _this.removeItemFromLOV(x.incomeTypeKey, _this.secondaryIncomeType);
            });
            console.log(res);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["HOUSEHOLD_EXPENSES_FOR_LIVESTOCK"]).subscribe(function (res) {
            _this.houseHoldExpenseType = res;
            _this.houseHoldExpenseTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.businessAppraisal.householdExpense.forEach(function (x) {
                _this.removeItemFromLOV(x.expTypKey, _this.houseHoldExpenseType);
            });
            // Other Loans
            _this.loanService.getMfcibLoans(_this.model.loanAppSeq).subscribe(function (res) {
                _this.mfcibArray = res;
                var key = _this.findSeqFromCd("0017", _this.houseHoldExpenseTypeOrig);
                _this.model.businessAppraisal.householdExpense.forEach(function (exp) {
                    if (exp.expTypKey == key) {
                        exp.DSED = true;
                    }
                });
                res.forEach(function (obj) {
                    if (obj.loanCompletionDate) {
                        if (obj.isExpense) {
                            var date = new Date();
                            var months = _this.monthDiff(date, new Date(obj.loanCompletionDate));
                            if (months == 0) {
                                _this.otherLoanAmountPerMonth = +_this.otherLoanAmountPerMonth + +obj.currentOutStandingAmount;
                            }
                            else {
                                var amount = Math.floor(obj.currentOutStandingAmount / months);
                                _this.otherLoanAmountPerMonth = +_this.otherLoanAmountPerMonth + +amount;
                            }
                        }
                        var array = obj.loanCompletionDate.split('T', 1);
                        if (array.length) {
                            obj.loanCompletionDate = array[0];
                        }
                    }
                });
                if (_this.otherLoanAmountPerMonth > 0) {
                    var key_1 = _this.findSeqFromCd("0017", _this.houseHoldExpenseType);
                    if (key_1 >= 0) {
                        _this.model.businessAppraisal.householdExpense.forEach(function (expense) {
                            if (expense.expTypKey == key_1) {
                                var index = _this.model.businessAppraisal.householdExpense.indexOf(expense);
                                if (index >= 0) {
                                    _this.model.businessAppraisal.householdExpense.splice(index, 1);
                                }
                            }
                        });
                        var otherLoan = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_5__["BusinessExpense"]();
                        otherLoan.expAmount = "" + _this.otherLoanAmountPerMonth;
                        otherLoan.expTypKey = key_1;
                        otherLoan.expCategoryKey = 2;
                        otherLoan.DSED = true;
                        _this.model.businessAppraisal.householdExpense.push(otherLoan);
                        console.log(otherLoan);
                        _this.totalHouseholdExpense = _this.totalHouseholdExpense + +otherLoan.expAmount;
                        _this.removeItemFromLOV(key_1, _this.houseHoldExpenseType);
                        console.log(_this.houseHoldExpenseType);
                        console.log(_this.houseHoldExpenseTypeOrig);
                    }
                }
                console.log(_this.otherLoans);
            }, function (error) {
                console.log('err', error);
            });
        }, function (error) {
            console.log('err', error);
        });
        var expense_group = _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BUSINESS_EXPENSES"];
        // Get product group by prd seq
        this.loanService.getMwPrdBySeq(this.model.loanProd).subscribe(function (res) {
            if (res != null)
                if (res.prdGrpSeq == 5305)
                    expense_group = _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["LIVESTOCK_EXPENSES_MEAT"];
                else if (res.prdGrpSeq == 16)
                    expense_group = _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["LIVESTOCK_EXPENSES_DAIRY"];
            _this.model.loanProd == _this.commonService.getValues(expense_group).subscribe(function (res) {
                _this.businessExpenseType = res;
                _this.businessExpenseTypeOrig = JSON.parse(JSON.stringify(res));
                _this.model.businessAppraisal.businessExpense.forEach(function (x) {
                    _this.removeItemFromLOV(x.expTypKey, _this.businessExpenseType);
                });
            }, function (error) {
                console.log('err', error);
            });
        });
        this.model.loanProd == this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["LIVESTOCK_ANML_TYP"]).subscribe(function (res) {
            _this.arrayOfLiveStockTypOrg = JSON.parse(JSON.stringify(res));
            _this.arrayOfLiveStockTyp = res;
        }, function (error) {
            console.log('err', error);
        });
        this.model.loanProd == this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["LIVESTOCK_ANML_KND"]).subscribe(function (res) {
            _this.arrayOfLiveStockkndOrg = JSON.parse(JSON.stringify(res));
            _this.arrayOfLiveStockknd = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getCommunityForPort(this.model.portKey).subscribe(function (res) {
            _this.communityArray = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    LivestockAppraisalComponent.prototype.removeItemsFromLOVUsingBizApp = function () {
        var _this = this;
        this.primaryIncomeType = JSON.parse(JSON.stringify(this.primaryIncomeTypeOrig));
        this.secondaryIncomeType = JSON.parse(JSON.stringify(this.secondaryIncomeTypeOrig));
        this.businessExpenseType = JSON.parse(JSON.stringify(this.businessExpenseTypeOrig));
        this.houseHoldExpenseType = JSON.parse(JSON.stringify(this.houseHoldExpenseTypeOrig));
        this.arrayOfLiveStockTyp = JSON.parse(JSON.stringify(this.arrayOfLiveStockTypOrg));
        this.arrayOfLiveStockknd = JSON.parse(JSON.stringify(this.arrayOfLiveStockkndOrg));
        this.model.businessAppraisal.primaryIncome.forEach(function (x) {
            _this.removeItemFromLOV(x.incomeTypeKey, _this.primaryIncomeType);
        });
        this.model.businessAppraisal.secondaryIncome.forEach(function (x) {
            _this.removeItemFromLOV(x.incomeTypeKey, _this.secondaryIncomeType);
        });
        this.model.businessAppraisal.businessExpense.forEach(function (x) {
            _this.removeItemFromLOV(x.expTypKey, _this.businessExpenseType);
        });
        this.model.businessAppraisal.householdExpense.forEach(function (x) {
            _this.removeItemFromLOV(x.expTypKey, _this.houseHoldExpenseType);
        });
        this.model.businessAppraisal.extngLvStk.forEach(function (res) {
            _this.removeItemFromLOV(res.anmlTyp, _this.arrayOfLiveStockTyp);
        });
        this.model.businessAppraisal.estLvStk.forEach(function (res) {
            _this.removeItemFromLOV(res.anmlTyp, _this.arrayOfLiveStockTyp);
        });
    };
    LivestockAppraisalComponent.prototype.removeItemFromLOV = function (key, lov) {
        var index = -1;
        for (var i = 0; i < lov.length; i++) {
            if (key == lov[i].codeKey) {
                index = i;
                break;
            }
        }
        if (index >= 0) {
            lov.splice(index, 1);
        }
    };
    LivestockAppraisalComponent.prototype.monthDiff = function (d1, d2) {
        var months;
        months = (d2.getFullYear() - d1.getFullYear()) * 12;
        months -= d1.getMonth() + 1;
        months += d2.getMonth();
        return months <= 0 ? 0 : months;
    };
    LivestockAppraisalComponent.prototype.incomeChange = function () {
        this.averageIncome = Math.floor(((this.model.businessAppraisal.maxMonthSale * this.model.businessAppraisal.maxSaleMonth) + (this.model.businessAppraisal.minMonthSale * this.model.businessAppraisal.minSaleMonth)) / 12);
        console.log(this.averageIncome);
        if (this.averageIncome == NaN)
            this.averageIncome = 0;
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    LivestockAppraisalComponent.prototype.maxMonthChange = function () {
        this.model.businessAppraisal.minSaleMonth = 12 - +this.model.businessAppraisal.maxSaleMonth;
        this.incomeChange();
    };
    LivestockAppraisalComponent.prototype.minMonthChange = function () {
        this.model.businessAppraisal.maxSaleMonth = 12 - +this.model.businessAppraisal.minSaleMonth;
    };
    LivestockAppraisalComponent.prototype.calculateNetDeposible = function () {
        this.netDeposible = this.totalPrimaryIncome + this.totalSecondaryIncome + this.averageIncome - this.totalBusinessExpense - this.totalHouseholdExpense;
    };
    LivestockAppraisalComponent.prototype.calculateBusinessProfit = function () {
        this.businessProfit = +this.averageIncome - +this.totalBusinessExpense;
    };
    LivestockAppraisalComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    LivestockAppraisalComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    LivestockAppraisalComponent.prototype.sameAsClientAddressChange = function () {
        console.log(this.model.city);
        if (this.model.businessAppraisal.isbizAddrSAC) {
            if (this.model.city == null || this.model.city <= 0) {
                this.toaster.show("Client Address not found!", "Error");
                this.model.businessAppraisal.isbizAddrSAC = false;
                return;
            }
            this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
            this.model.businessAppraisal.businessAddress.provinceName = this.model.provinceName;
            this.model.businessAppraisal.businessAddress.districtName = this.model.districtName;
            this.model.businessAppraisal.businessAddress.tehsilName = this.model.tehsilName;
            this.model.businessAppraisal.businessAddress.ucName = this.model.ucName;
            this.model.businessAppraisal.businessAddress.cityName = this.model.cityName;
            this.model.businessAppraisal.businessAddress.houseNum = this.model.houseNum;
            this.model.businessAppraisal.businessAddress.sreet_area = this.model.sreet_area;
            this.model.businessAppraisal.businessAddress.village = this.model.village;
            this.model.businessAppraisal.businessAddress.otherDetails = this.model.otherDetails;
            this.model.businessAppraisal.businessAddress.city = this.model.city;
            this.model.businessAppraisal.businessAddress.tehsil = this.model.tehsil;
            this.model.businessAppraisal.businessAddress.district = this.model.district;
            this.model.businessAppraisal.businessAddress.uc = this.model.uc;
            // this.model.businessAppraisal.businessAddress = <Address>JSON.parse(JSON.stringify(this.model));
            // this.model.businessAppraisal.businessAddress=Object.assign(this.model.businessAppraisal.businessAddress, this.model, this.model.businessAppraisal.businessAddress);
        }
        else {
            this.model.businessAppraisal.businessAddress = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        }
    };
    LivestockAppraisalComponent.prototype.filterBy = function (prop, array) {
        if (array != undefined) {
            if (array.length) {
                return array.sort(function (a, b) { return a[prop] > b[prop] ? 1 : a[prop] === b[prop] ? 0 : -1; });
            }
        }
        return [];
    };
    LivestockAppraisalComponent.prototype.sortByKey = function (array, key) {
        return array.sort(function (a, b) {
            var x = (a[key] == null) ? 99 : a[key];
            var y = (b[key] == null) ? 99 : b[key];
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        });
    };
    LivestockAppraisalComponent.prototype.sorting = function (array, key) {
        function sortByKey(a, b) {
            var x = (a[key] == null) ? 99 : a[key];
            var y = (b[key] == null) ? 99 : b[key];
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        }
        // console.log(array.sort(sortByKey))
        array.sort(sortByKey);
    };
    //Existing Livestock
    LivestockAppraisalComponent.prototype.openLivestock = function () {
        this.isEdit = false;
        this.extngLvStk = new src_app_shared_models_ExistingLivestock_model__WEBPACK_IMPORTED_MODULE_17__["ExistingLivestock"]();
        this.livestockForm.reset();
        this.removeItemsFromLOVUsingBizApp();
        $('#livestock').modal('show');
    };
    LivestockAppraisalComponent.prototype.onSubmitLivestock = function () {
        $('#livestock').modal('hide');
        var result = Object.assign({}, this.livestockForm.value);
        if (!this.isEdit) {
            this.model.businessAppraisal.extngLvStk.push(result);
        }
        else {
            this.model.businessAppraisal.extngLvStk[this.livestockIndex] = result;
            this.isEdit = false;
        }
        this.removeItemFromLOV(this.livestockForm.value.anmlTyp, this.arrayOfLiveStockTyp);
    };
    LivestockAppraisalComponent.prototype.onEditLivestock = function (extngLvStk, index) {
        var _this = this;
        this.removeItemsFromLOVUsingBizApp();
        this.arrayOfLiveStockTypOrg.forEach(function (element) {
            if (element.codeKey == extngLvStk.anmlTyp) {
                _this.arrayOfLiveStockTyp.push(element);
            }
        });
        this.livestockForm.patchValue(extngLvStk);
        this.livestockIndex = index;
        this.isEdit = true;
        $('#livestock').modal('show');
    };
    LivestockAppraisalComponent.prototype.onDeleteLivestock = function (stock, index) {
        var _this = this;
        sweetalert2__WEBPACK_IMPORTED_MODULE_15___default()({
            title: 'Are you sure?',
            text: 'Are you sure you want to delete this?',
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value) {
                _this.removeItemsFromLOVUsingBizApp();
                _this.model.businessAppraisal.extngLvStk.splice(index, 1);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default()('Deleted!', 'Deleted Successfully.', 'success');
            }
        });
    };
    //Est. Cost to Finance New livestock
    LivestockAppraisalComponent.prototype.openFinance = function () {
        this.isEdit = false;
        this.estLvStk = new src_app_shared_models_EstimatedLivestock_model__WEBPACK_IMPORTED_MODULE_16__["EstimatedLivestock"];
        this.financeForm.reset();
        this.removeItemsFromLOVUsingBizApp();
        $('#finance').modal('show');
    };
    LivestockAppraisalComponent.prototype.onEditFinance = function (estLvStk, index) {
        var _this = this;
        $('#finance').modal('show');
        this.removeItemsFromLOVUsingBizApp();
        this.arrayOfLiveStockTypOrg.forEach(function (element) {
            if (element.codeKey == estLvStk.anmlTyp) {
                _this.arrayOfLiveStockTyp.push(element);
            }
        });
        this.financeForm.patchValue(estLvStk);
        this.financeIndex = index;
        this.isEdit = true;
        $('#finance').modal('show');
    };
    LivestockAppraisalComponent.prototype.onDeleteFinance = function (fin) {
        var _this = this;
        sweetalert2__WEBPACK_IMPORTED_MODULE_15___default()({
            title: 'Are you sure?',
            text: 'Are you sure you want to delete this?',
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value) {
                _this.model.businessAppraisal.estLvStk.splice(_this.model.businessAppraisal.estLvStk.indexOf(fin), 1);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default()('Deleted!', 'Deleted Successfully.', 'success');
            }
        });
    };
    LivestockAppraisalComponent.prototype.onSubmitFinance = function () {
        $('#finance').modal('hide');
        var result = Object.assign({}, this.financeForm.value);
        if (!this.isEdit) {
            this.model.businessAppraisal.estLvStk.push(result);
        }
        else {
            this.model.businessAppraisal.estLvStk[this.financeIndex] = result;
            this.isEdit = false;
        }
        this.removeItemFromLOV(this.financeForm.value.anmlTyp, this.arrayOfLiveStockTyp);
    };
    LivestockAppraisalComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-livestock-appraisal',
            template: __webpack_require__(/*! ./livestock-appraisal.component.html */ "./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.html"),
            styles: [__webpack_require__(/*! ./livestock-appraisal.component.css */ "./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormBuilder"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__["LoanService"],
            _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_9__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_10__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_11__["ToastrService"]])
    ], LivestockAppraisalComponent);
    return LivestockAppraisalComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/loan-app.module.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/loan-app.module.ts ***!
  \********************************************************************/
/*! exports provided: routes, LoanAppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routes", function() { return routes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanAppModule", function() { return LoanAppModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _personal_info_personal_info_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./personal-info/personal-info.component */ "./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.ts");
/* harmony import */ var _loan_info_loan_info_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./loan-info/loan-info.component */ "./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.ts");
/* harmony import */ var _mfcib_mfcib_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mfcib/mfcib.component */ "./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.ts");
/* harmony import */ var _insurance_info_insurance_info_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./insurance-info/insurance-info.component */ "./src/app/pages/loan-origination/loan-app/insurance-info/insurance-info.component.ts");
/* harmony import */ var _nominee_nominee_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nominee/nominee.component */ "./src/app/pages/loan-origination/loan-app/nominee/nominee.component.ts");
/* harmony import */ var _co_borrower_co_borrower_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./co-borrower/co-borrower.component */ "./src/app/pages/loan-origination/loan-app/co-borrower/co-borrower.component.ts");
/* harmony import */ var _business_appraisal_business_appraisal_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./business-appraisal/business-appraisal.component */ "./src/app/pages/loan-origination/loan-app/business-appraisal/business-appraisal.component.ts");
/* harmony import */ var _school_appraisal_school_appraisal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./school-appraisal/school-appraisal.component */ "./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.ts");
/* harmony import */ var _loan_utilization_loan_utilization_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./loan-utilization/loan-utilization.component */ "./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.ts");
/* harmony import */ var _psc_psc_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./psc/psc.component */ "./src/app/pages/loan-origination/loan-app/psc/psc.component.ts");
/* harmony import */ var _documents_documents_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./documents/documents.component */ "./src/app/pages/loan-origination/loan-app/documents/documents.component.ts");
/* harmony import */ var _submit_application_submit_application_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./submit-application/submit-application.component */ "./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.ts");
/* harmony import */ var _breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../breadcrumb/breadcrumb.component */ "./src/app/pages/loan-origination/breadcrumb/breadcrumb.component.ts");
/* harmony import */ var _client_relatives_client_relatives_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./client-relatives/client-relatives.component */ "./src/app/pages/loan-origination/loan-app/client-relatives/client-relatives.component.ts");
/* harmony import */ var _next_of_kin_next_of_kin_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./next-of-kin/next-of-kin.component */ "./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.ts");
/* harmony import */ var _school_information_school_information_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./school-information/school-information.component */ "./src/app/pages/loan-origination/loan-app/school-information/school-information.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/app/shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _livestock_appraisal_livestock_appraisal_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./livestock-appraisal/livestock-appraisal.component */ "./src/app/pages/loan-origination/loan-app/livestock-appraisal/livestock-appraisal.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
























// import { NoDblClickDirective } from 'src/app/shared/directives/double-click-preventing.directive';
var routes = [
    {
        path: '',
        redirectTo: 'personal-info'
    },
    {
        path: 'personal-info',
        component: _personal_info_personal_info_component__WEBPACK_IMPORTED_MODULE_2__["PersonalInfoComponent"],
    },
    {
        path: 'loan-info',
        component: _loan_info_loan_info_component__WEBPACK_IMPORTED_MODULE_3__["LoanInfoComponent"]
    },
    {
        path: 'mfcib',
        component: _mfcib_mfcib_component__WEBPACK_IMPORTED_MODULE_4__["MFCIBComponent"]
    },
    {
        path: 'insurance-info',
        component: _insurance_info_insurance_info_component__WEBPACK_IMPORTED_MODULE_5__["InsuranceInfoComponent"]
    },
    {
        path: 'nominee',
        component: _nominee_nominee_component__WEBPACK_IMPORTED_MODULE_6__["NomineeComponent"]
    },
    {
        path: 'co-borrower',
        component: _co_borrower_co_borrower_component__WEBPACK_IMPORTED_MODULE_7__["CoBorrowerComponent"]
    },
    {
        path: 'business-appraisal',
        component: _business_appraisal_business_appraisal_component__WEBPACK_IMPORTED_MODULE_8__["BusinessAppraisalComponent"]
    },
    {
        path: 'live-stock-appraisal',
        component: _livestock_appraisal_livestock_appraisal_component__WEBPACK_IMPORTED_MODULE_23__["LivestockAppraisalComponent"]
    },
    {
        path: 'school-appraisal',
        component: _school_appraisal_school_appraisal_component__WEBPACK_IMPORTED_MODULE_9__["SchoolAppraisalComponent"]
    },
    {
        path: 'expected-loan-utilication',
        component: _loan_utilization_loan_utilization_component__WEBPACK_IMPORTED_MODULE_10__["LoanUtilizationComponent"]
    },
    {
        path: 'psc',
        component: _psc_psc_component__WEBPACK_IMPORTED_MODULE_11__["PscComponent"]
    },
    {
        path: 'documents',
        component: _documents_documents_component__WEBPACK_IMPORTED_MODULE_12__["DocumentsComponent"]
    },
    {
        path: 'submit',
        component: _submit_application_submit_application_component__WEBPACK_IMPORTED_MODULE_13__["SubmitApplicationComponent"]
    },
    {
        path: 'next-of-kin',
        component: _next_of_kin_next_of_kin_component__WEBPACK_IMPORTED_MODULE_16__["NextOfKinComponent"]
    },
    {
        path: 'client-relatives',
        component: _client_relatives_client_relatives_component__WEBPACK_IMPORTED_MODULE_15__["ClientRelativesComponent"]
    },
    {
        path: 'school-information',
        component: _school_information_school_information_component__WEBPACK_IMPORTED_MODULE_17__["SchoolInformationComponent"]
    }
];
var LoanAppModule = /** @class */ (function () {
    function LoanAppModule() {
    }
    LoanAppModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_18__["RouterModule"].forChild(routes),
                _angular_forms__WEBPACK_IMPORTED_MODULE_19__["FormsModule"],
                src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_20__["SharedModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_19__["ReactiveFormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatInputModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatDatepickerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatNativeDateModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatRadioModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatCardModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatCheckboxModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatCheckboxModule"],
                _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_22__["MatMomentDateModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_21__["MatIconModule"]
            ],
            declarations: [
                // NoDblClickDirective,
                _personal_info_personal_info_component__WEBPACK_IMPORTED_MODULE_2__["PersonalInfoComponent"],
                _loan_info_loan_info_component__WEBPACK_IMPORTED_MODULE_3__["LoanInfoComponent"],
                _mfcib_mfcib_component__WEBPACK_IMPORTED_MODULE_4__["MFCIBComponent"],
                _insurance_info_insurance_info_component__WEBPACK_IMPORTED_MODULE_5__["InsuranceInfoComponent"],
                _nominee_nominee_component__WEBPACK_IMPORTED_MODULE_6__["NomineeComponent"],
                _co_borrower_co_borrower_component__WEBPACK_IMPORTED_MODULE_7__["CoBorrowerComponent"],
                _business_appraisal_business_appraisal_component__WEBPACK_IMPORTED_MODULE_8__["BusinessAppraisalComponent"],
                _school_appraisal_school_appraisal_component__WEBPACK_IMPORTED_MODULE_9__["SchoolAppraisalComponent"],
                _loan_utilization_loan_utilization_component__WEBPACK_IMPORTED_MODULE_10__["LoanUtilizationComponent"],
                _psc_psc_component__WEBPACK_IMPORTED_MODULE_11__["PscComponent"],
                _documents_documents_component__WEBPACK_IMPORTED_MODULE_12__["DocumentsComponent"],
                _submit_application_submit_application_component__WEBPACK_IMPORTED_MODULE_13__["SubmitApplicationComponent"],
                _breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_14__["BreadcrumbComponent"],
                _client_relatives_client_relatives_component__WEBPACK_IMPORTED_MODULE_15__["ClientRelativesComponent"],
                _next_of_kin_next_of_kin_component__WEBPACK_IMPORTED_MODULE_16__["NextOfKinComponent"],
                _school_information_school_information_component__WEBPACK_IMPORTED_MODULE_17__["SchoolInformationComponent"],
                _livestock_appraisal_livestock_appraisal_component__WEBPACK_IMPORTED_MODULE_23__["LivestockAppraisalComponent"]
            ],
            providers: [{ provide: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_22__["MAT_MOMENT_DATE_ADAPTER_OPTIONS"], useValue: { useUtc: true } }]
        })
    ], LoanAppModule);
    return LoanAppModule;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n\r\n      <form (ngSubmit)=\"onLoanInfoFormSubmit()\" #addLoanInfoForm=\"ngForm\">\r\n\r\n\r\n        <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n        <div class=\"cRow\">\r\n          <div class=\"cCol1 \">\r\n            <!-- [disabled]=\"!(auth.role == 'admin' && model.loan_app_sts_seq==700)\" -->\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Credit Cycle\" value=\"Credit Cycle {{model.loanCyclNum}}\" disabled\r\n                readonly>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"cCol1 \">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Previous Credit Amount\" value=\"{{model.previousAmount}}\" disabled\r\n                readonly>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"cRow\">\r\n\r\n          <div class=\"cCol1\">\r\n            <!-- [(ngModel)]=\"\" -->\r\n            <mat-form-field>\r\n              <mat-select disabled placeholder=\"Product Group\" [(ngModel)]=\"model.loanProdGrp\"\r\n                [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" [disabled]=\"!prdEditable || readonly\"\r\n                (selectionChange)=\"onProductGroupSelect($event.value, 'true')\" name=\"productGrp\" required>\r\n                <mat-option *ngFor=\"let edu of productGroup\" [value]=\"edu.prdGrpSeq\">\r\n                  {{edu.prdGrpNm}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"cCol1\">\r\n            <!-- [(ngModel)]=\"\" -->\r\n            <mat-form-field>\r\n              <mat-select disabled placeholder=\"Product\" [(ngModel)]=\"model.loanProd\" [errorStateMatcher]=\"matcher\"\r\n                pattern=\"^[1-9]\\d*$\" [disabled]=\"!prdEditable || readonly\"\r\n                (selectionChange)=\"onProductSelect($event.value, 'true')\" name=\"product\" required>\r\n                <mat-option *ngFor=\"let edu of products\" [value]=\"edu.productSeq\">\r\n                  {{edu.productName}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"cCol1 \">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput required (keypress)=\"onlyNumbers($event)\" [(ngModel)]=\"model.reqAmount\"\r\n                min=\"0\" [disabled]=\"auth.role =='bm' || readonly\" id=\"reqAmount\" maxlength=\"6\"\r\n                [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"reqAmount\"\r\n                placeholder=\"Requested Credit Amount\" #reqAmount=\"ngModel\">\r\n              <mat-error *ngIf=\"reqAmount.invalid\">\r\n                request amount is <strong>invalid</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"cCol1 \">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput required [(ngModel)]=\"model.recAmount\"\r\n                [disabled]=\"auth.role =='bm' || readonly\" (keypress)=\"onlyNumbers($event)\"\r\n                (change)=\"onRecommendAmountChange('true')\" id=\"recAmount\" name=\"recAmount\" min=\"{{product.minAmount}}\"\r\n                max=\"{{product.maxAmount}}\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                placeholder=\"Recommended Credit Amount\" #recAmount=\"ngModel\">\r\n              <mat-hint *ngIf=\"model.recAmount<=product.maxAmount && model.recAmount>=product.minAmount\">\r\n                {{product.minAmount}}\r\n                =< Recommended Amount <={{product.maxAmount}} </mat-hint>\r\n                  <mat-hint *ngIf=\"model.recAmount > product.maxAmount\" style=\"color: red;\">Max\r\n                    Amount is\r\n                    <strong>{{product.maxAmount}}</strong>\r\n                  </mat-hint>\r\n                  <mat-hint *ngIf=\"model.recAmount < product.minAmount\" style=\"color: red;\">Min Amount is\r\n                    <strong>{{product.minAmount}}</strong>\r\n                  </mat-hint>\r\n                  <mat-error *ngIf=\"recAmount.invalid\">\r\n                    recommended amount is <strong>invalid</strong>\r\n                  </mat-error>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div class=\"cCol1\" *ngIf=\"showFields\">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput [required]=\"showFields\" [disabled]=\"readonly\"\r\n                [(ngModel)]=\"model.totIncmOfErngMemb\" (keypress)=\"onlyNumbers($event)\" id=\"totIncmOfErngMembId\"\r\n                name=\"totIncmOfErngMemb\" maxlength=\"10\" pattern=\"^[0-9]\\d*$\"\r\n                placeholder=\"Total Income of Earning Members\" #totIncmOfErngMemb=\"ngModel\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"cCol2\" *ngIf=\"showFields\">\r\n            <mat-form-field>\r\n              <!-- <input type=\"text\" matInput [(ngModel)]=\"model.bizDtl\" (keypress)=\"alphaNumeric($event)\" maxlength=\"100\"\r\n                [required]=\"showFields\" id=\"bizDtlId\" name=\"bizDtl\" placeholder=\"Business Detail\" #bizDtl=\"ngModel\"> -->\r\n              <mat-select [disabled]=\"readonly\" placeholder=\"Credit Purpose\" [(ngModel)]=\"model.bizDtl\"\r\n                [required]=\"showFields\" name=\"bizDtl\" required>\r\n                <mat-option *ngFor=\"let edu of loanPurpose\" [value]=\"edu.codeValue\">\r\n                  {{edu.codeValue}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"cRow\">\r\n          <div class=\"cCol1 \">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Total Installments\" value=\"{{product.installments}}\" readonly\r\n                disabled>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"cCol1 \">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Service Charges\" value=\"{{product.chargesStr}}\" readonly\r\n                disabled>\r\n            </mat-form-field>\r\n          </div>\r\n          <!-- <div class=\"cCol1 \">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Total Receivable Amount\" value=\"{{product.totalRecieveable}}\" readonly disabled>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"cCol1 \">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Installment Amount\" value=\"{{product.installmentAmount}}\" readonly disabled>\r\n            </mat-form-field>\r\n          </div> -->\r\n        </div>\r\n        <!-- {{tableFieldScreeingKEL}}\r\n        {{auth.role =='bm' && tableFieldScreeingKEL}} -->\r\n        <div *ngIf=\"auth.role =='bm'\">\r\n          <div class=\"cRow\">\r\n            <div class=\"cCol5\">\r\n              <div class=\"pt-1 pb-1\">\r\n                <!-- <mat-label>Is Next Of Kin same as Client’s Father or Spouse ?</mat-label> -->\r\n                <br>\r\n                <mat-radio-group name=\"tblScrn\" [(ngModel)]=\"model.tblScrn\" required>\r\n                  <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">\r\n                    {{disFlag.name}}</mat-radio-button>\r\n\r\n                  <!-- <mat-radio-button class=\"m-r-30\" [disabled]=\"tableScreening\" [value]=\"model.tblScrn\">Table Screening\r\n                  </mat-radio-button>\r\n                  <mat-radio-button class=\"m-r-30\" [disabled]=\"fieldScreening\" [value]=\"!model.tblScrn\">Field Screening\r\n                  </mat-radio-button> -->\r\n\r\n                </mat-radio-group>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"cRow\">\r\n            <div class=\"cCol1 \">\r\n              <mat-form-field>\r\n                <input [disabled]=\"readonly\" type=\"text\" matInput required [(ngModel)]=\"model.approvedAmount\"\r\n                  [disabled]=\"auth.role !='bm'\" (keypress)=\"onlyNumbers($event)\" id=\"approvedAmountId\"\r\n                  name=\"approvedAmount\" min=\"{{product.minAmount}}\" max=\"{{product.maxAmount}}\"\r\n                  [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" placeholder=\"Approved Credit Amount\"\r\n                  #approvedAmount=\"ngModel\">\r\n                <mat-hint *ngIf=\"model.recAmount<=product.maxAmount && model.recAmount>=product.minAmount\">\r\n                  {{product.minAmount}}\r\n                  =< Approved Amount <={{product.maxAmount}} </mat-hint>\r\n                    <mat-hint *ngIf=\"model.recAmount > product.maxAmount\" style=\"color: red;\">Max\r\n                      Amount is\r\n                      <strong>{{product.maxAmount}}</strong>\r\n                    </mat-hint>\r\n                    <mat-hint *ngIf=\"model.recAmount < product.minAmount\" style=\"color: red;\">Min Amount is\r\n                      <strong>{{product.minAmount}}</strong>\r\n                    </mat-hint>\r\n                    <mat-hint *ngIf=\"model.approvedAmount>model.reqAmount\" style=\"color: red;\">Cannot exceed Requested\r\n                      Amount\r\n                      <strong>{{product.reqAmount}}</strong>\r\n                    </mat-hint>\r\n                    <mat-error *ngIf=\"approvedAmount.invalid\">\r\n                      recommended amount is <strong>invalid</strong>\r\n                    </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"continueClicked()\"\r\n            [disabled]=\"!formSaved\">Continue</button>\r\n          <button class=\"btn btn-default\" type=\"submit\"\r\n            [disabled]=\"!addLoanInfoForm.form.valid || readonly\">Save</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.ts ***!
  \**********************************************************************************/
/*! exports provided: LoanInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanInfoComponent", function() { return LoanInfoComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _shared_mocks_mock_common_codes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/mocks/mock_common_codes */ "./src/app/shared/mocks/mock_common_codes.ts");
/* harmony import */ var _shared_models_LoanProduct_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/models/LoanProduct.model */ "./src/app/shared/models/LoanProduct.model.ts");
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var LoanInfoComponent = /** @class */ (function () {
    function LoanInfoComponent(router, commonService, loanService, spinner, breadcrumbProvider, toaster) {
        this.router = router;
        this.commonService = commonService;
        this.loanService = loanService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.disFlags = [{ name: 'Table Screening', value: false }, { name: 'Field Screening', value: true }];
        this.productsList = _shared_mocks_mock_common_codes__WEBPACK_IMPORTED_MODULE_4__["PRODUCTS"];
        this.bradcrumbs = false;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__["MyErrorStateMatcher"]();
        this.formSaved = false;
        this.tableFieldScreeingKEL = false;
        this.tableScreening = false;
        this.fieldScreening = false;
        this.basicCrumbs = [];
        this.loanPurpose = [];
        this.productsa = [];
        this.product = new _shared_models_LoanProduct_model__WEBPACK_IMPORTED_MODULE_5__["LoanProduct"]();
        this.products = [];
        this.productGroup = [];
        this.showFields = false;
    }
    LoanInfoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.model = JSON.parse(sessionStorage.getItem('model'));
        this.auth = JSON.parse(sessionStorage.getItem('auth'));
        this.basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        this.basicCrumbs.forEach(function (element, index) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
            if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                _this.model.formSeq = element.formSeq;
                _this.formSaved = element.isSaved;
            }
        });
        if (this.model.loanCyclNum == 1) {
            this.model.tblScrn = false;
        }
        if (this.model.loan_app_sts_seq == 703 || this.model.loan_app_sts_seq == 704) {
            this.tableScreening = true;
            this.fieldScreening = true;
        }
        else if (this.model.loanProdGrp == 13) {
            this.tableScreening = false;
            this.fieldScreening = false;
        }
        else if (this.model.loanProdGrp !== 13 && this.model.loanCyclNum == 1) {
            this.tableScreening = true;
            this.fieldScreening = false;
        }
        else {
            this.tableScreening = false;
            this.fieldScreening = false;
        }
        if (this.model.loanProd == -1 || this.model.loanProd == null || this.model.loanProd == undefined) {
            this.prdEditable = true;
        }
        else {
            this.prdEditable = false;
        }
        // this.loanService.breadcrumbs.forEach(
        //   breadcrumb => this.breadcrumbProvider.addCheckedItem(breadcrumb.label, breadcrumb.href, breadcrumb.isSaved)
        // );
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        this.spinner.hide();
        console.log(this.model);
        if (sessionStorage.getItem('editLoan') === 'true') {
            this.formSaved = true;
            console.log('EDIT');
            this.loanService.getLoanApp(this.model.loanSeq).subscribe(function (res) {
                // res.clientSeq = this.model.clientSeq;
                res.loanApp.clientSeq = _this.model.clientSeq;
                // this.prdEditable = true;
                res.loanApp.totIncmOfErngMemb = _this.model.totIncmOfErngMemb;
                res.loanApp.bizDtl = _this.model.bizDtl;
                Object.assign(_this.model, res.loanApp, _this.model);
                if (_this.model.forms.length == 0) {
                    _this.model.forms = res.forms;
                    _this.model.forms.forEach(function (forms) {
                        if (!(forms.formUrl === 'co-borrower' && _this.model.selfPDC)) {
                            _this.breadcrumbProvider.addCheckedItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                        }
                        else {
                            _this.breadcrumbProvider.addDisabledItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                        }
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            _this.model.formSeq = forms.formSeq;
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.onRecommendAmountChange(false);
                console.log(res);
            }, function (error) {
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
        this.spinner.show();
        this.loanService.getProductsGroups().subscribe(function (res) {
            _this.spinner.hide();
            console.log(res);
            _this.productGroup = res;
            _this.onProductGroupSelect();
            console.log(_this.model);
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, 'Error!');
            console.log(error);
        });
        this.loanService.getAllFormsAssignments().subscribe(function (res) {
            _this.allForms = res;
        }, function (error) {
            console.log(error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["LOAN_PURPOSE"]).subscribe(function (res) {
            _this.loanPurpose = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    LoanInfoComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedLoanInfo', this.formSaved.toString());
    };
    LoanInfoComponent.prototype.onProductSelect = function (val, flag) {
        if (flag) {
            this.model.totIncmOfErngMemb = 0;
            this.model.bizDtl = '';
        }
        console.log(val);
        for (var i = 0; i < this.products.length; i++) {
            if (this.products[i].productSeq == val) {
                this.product = this.products[i];
                break;
            }
        }
        this.onRecommendAmountChange(false);
        this.checkBusinessAppraisalForm();
    };
    LoanInfoComponent.prototype.onProductGroupSelect = function () {
        var _this = this;
        this.loanService.getProducts(this.model).subscribe(function (res) {
            _this.spinner.hide();
            console.log(res);
            var i = 0;
            res.forEach(function (prd) {
                if (prd.prdGrpSeq == _this.model.loanProdGrp) {
                    _this.productsa[i++] = prd;
                }
            });
            _this.products = _this.productsa;
            _this.onProductSelect(_this.model.loanProd, false);
            console.log(_this.model);
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, 'Error!');
            console.log(error);
        });
    };
    LoanInfoComponent.prototype.onRecommendAmountChange = function (flag) {
        var _this = this;
        if (this.product != undefined && this.product.charges != undefined) {
            this.product.charges.forEach(function (charge) {
                if (charge.type == 2) {
                    var totalCharge_1 = 0;
                    if (charge.slbs != null && charge.slbs != undefined) {
                        var totalAmount = +_this.model.recAmount;
                        var remainingAmount_1 = +_this.model.recAmount;
                        charge.slbs.forEach(function (slb) {
                            if (+_this.model.recAmount > +slb.startLmt) {
                                if (slb.endLmt != null) {
                                    remainingAmount_1 = remainingAmount_1 - (+slb.endLmt);
                                    var chrgeAmt = Math.floor(((+slb.endLmt - +slb.startLmt) * +slb.val) / 100);
                                    totalCharge_1 = totalCharge_1 + chrgeAmt;
                                }
                                else {
                                    var chrgeAmt = Math.floor((remainingAmount_1 * +slb.val) / 100);
                                    totalCharge_1 = totalCharge_1 + chrgeAmt;
                                }
                            }
                        });
                    }
                    _this.product.totalRecieveable = Math.floor((+_this.model.recAmount) + totalCharge_1);
                    _this.product.chargesStr = "" + totalCharge_1;
                }
                else {
                    var totalCharge_2 = 0;
                    if (charge.slbs != null && charge.slbs != undefined) {
                        var totalAmount = +_this.model.recAmount;
                        var remainingAmount_2 = +_this.model.recAmount;
                        charge.slbs.forEach(function (slb) {
                            console.log(+_this.model.recAmount > +slb.startLmt);
                            if (+_this.model.recAmount > +slb.startLmt) {
                                if (slb.endLmt != null) {
                                    remainingAmount_2 = remainingAmount_2 - (+slb.endLmt);
                                    var chrgeAmt = Math.floor(((+slb.endLmt - +slb.startLmt) + +slb.val));
                                    totalCharge_2 = totalCharge_2 + chrgeAmt;
                                    console.log("11");
                                }
                                else {
                                    var chrgeAmt = Math.floor((remainingAmount_2 + slb.val));
                                    totalCharge_2 = totalCharge_2 + chrgeAmt;
                                    console.log(totalCharge_2);
                                }
                            }
                        });
                    }
                    _this.product.totalRecieveable = Math.floor(+_this.model.recAmount + +charge.charge);
                    _this.product.chargesStr = "" + totalCharge_2;
                }
            });
            if (flag)
                this.model.approvedAmount = this.model.recAmount;
        }
        // if (this.product.calcType == 'Percentage') {
        //   this.product.totalRecieveable = Math.floor((+this.model.recAmount) + (+this.product.serviceCharges * +this.model.recAmount) / 100);
        // } else {
        //   this.product.totalRecieveable = Math.floor(+this.model.recAmount + +this.product.serviceCharges);
        // }
        // this.product.installmentAmount = Math.floor(this.product.totalRecieveable / this.product.installments);
        // this.product.chargesStr = '' + Math.floor((this.product.serviceCharges * this.model.recAmount) / 100);
    };
    LoanInfoComponent.prototype.continueClicked = function () {
        if (this.model.forms) {
            this.router.navigate(['/loan-origination/app/' + this.model.forms[0].formUrl]);
        }
    };
    LoanInfoComponent.prototype.onLoanInfoFormSubmit = function () {
        var _this = this;
        console.log(this.model);
        if (this.model.firstName == null || this.model.firstName == "N/A") {
            this.toaster.error("Save basic info first");
            return;
        }
        if ((+this.model.reqAmount % 1000) > 0) {
            this.toaster.error("Recommended amount should be multiple of 1000");
            return;
        }
        if ((+this.model.recAmount % 1000) > 0) {
            this.toaster.error("Recommended amount should be multiple of 1000");
            return;
        }
        if (+this.model.reqAmount < +this.model.recAmount) {
            this.toaster.error("Recommended amount exceeds Requested Amount");
            return;
        }
        if (+this.model.recAmount > +this.product.maxAmount) {
            this.toaster.error("Recommended amount exceeds Maximum amount");
            return;
        }
        if (+this.model.recAmount < +this.product.minAmount) {
            this.toaster.error("Recommended amount is less than Minimum amount");
            return;
        }
        if (this.auth.role == 'bm') {
            if ((+this.model.approvedAmount % 1000) > 0) {
                this.toaster.error("Approved amount should be multiple of 1000");
                return;
            }
            if (this.model.approvedAmount <= 0) {
                this.toaster.error("Please Enter Valid Amount.");
                return;
            }
            if (this.model.reqAmount < this.model.approvedAmount) {
                this.toaster.error("Approved amount exceeds Requested Amount");
                return;
            }
            if (this.product.maxAmount < this.model.approvedAmount) {
                this.toaster.error("Approved amount exceeds Product's Max Amount");
                return;
            }
            if (this.product.minAmount > this.model.approvedAmount) {
                this.toaster.error("Approved amount less than Product's Min Amount");
                return;
            }
        }
        console.log(JSON.stringify(this.model));
        this.spinner.show();
        // if (sessionStorage.getItem('editLoan') === 'true') {
        //   console.log('EDIT');
        //   console.log(this.model);
        //   this.loanService.updateLoanInfo(this.model).subscribe((res) => {
        //     console.log(res);
        //     this.spinner.hide();
        //     this.toaster.success('Saved');
        //     if (res.loanSeq) {
        //       this.model.loanSeq = res.loanSeq;
        //       this.model.loanAppSeq = res.loanSeq;
        //     }
        //     if (res.forms) {
        //       this.model.loanProduct = this.product;
        //       this.model.forms = res.forms;
        //       this.breadcrumbProvider._addItem = new Subject<BreadCrumb>();
        //       this.basicCrumbs.forEach(element => {
        //         if (element.formUrl == "mfcib" || element.formUrl == "documents") {
        //           element.isSaved = true;
        //           this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        //         } else if (element.formUrl == "submit" && this.auth.role == 'bm') {
        //           element.formNm = "Process Application";
        //           this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        //         } else if (!(element.formUrl === 'co-borrower' && this.model.isSelfPdc)) {
        //           this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        //         } else {
        //           this.breadcrumbProvider.addDisabledItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        //         }
        //         if ('/loan-origination/app/' + element.formUrl === this.router.url) {
        //           this.model.formSeq = element.formSeq;
        //         }
        //       });
        //       this.model = JSON.parse(sessionStorage.getItem('model'));
        //       if (this.model.forms) {
        //         this.model.forms.forEach(
        //           forms => {
        //             if (!(forms.formUrl === 'co-borrower' && this.model.selfPDC)) {
        //               this.breadcrumbProvider.addCheckedItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
        //             } else {
        //               this.breadcrumbProvider.addDisabledItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
        //             }
        //             if ('/loan-origination/app/' + forms.formUrl == this.router.url) {
        //               this.model.formSeq = forms.formSeq;
        //             }
        //           }
        //         );
        //       }
        //     }
        //     sessionStorage.setItem('model', JSON.stringify(this.model));
        //     this.formSaved = true;
        //   }, (error) => {
        //     if (error.status == 500) {
        //       this.toaster.error('Internal Server Error', 'Error!');
        //     } else {
        //       this.toaster.error(error.error.error, 'Error!');
        //     }
        //     this.spinner.hide();
        //     console.log('err In Loan Info Service');
        //     console.log('err', error);
        //   });
        // } else {
        this.model.prdRul = this.product.prdRul;
        this.model.termRule = this.product.termRule;
        this.model.limitRule = this.product.limitRule;
        console.log(this.model);
        if (this.model.loanAppSeq == undefined || this.model.loanAppSeq == '' || this.model.loanAppSeq == null) {
            this.loanService.saveLoanInfo(this.model).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                _this.toaster.success('Saved');
                if (res.loanSeq) {
                    // this.model.loanSeq = res.loanSeq;
                    _this.model.loanProduct = _this.product;
                    // this.model.loanAppSeq = res.loanSeq;
                }
                if (res.forms) {
                    _this.model.forms = res.forms;
                    if (!_this.bradcrumbs) {
                        res.forms.forEach(function (form, index) {
                            if (!(form.formUrl === 'co-borrower' && _this.model.selfPDC)) {
                                _this.breadcrumbProvider.addCheckedItem(form.formNm, '/loan-origination/app/' + form.formUrl, form.isSaved);
                            }
                            else {
                                _this.breadcrumbProvider.addCheckedItem(form.formNm, '/loan-origination/app/' + form.formUrl, form.isSaved);
                            }
                        });
                        _this.bradcrumbs = true;
                    }
                    _this.basicCrumbs.forEach(function (element) {
                        if (_this.router.url == '/loan-origination/app/' + element.formUrl) {
                            element.isSaved = true;
                            _this.breadcrumbProvider.updateSavedStatusViaLabel2(element);
                        }
                    });
                }
                sessionStorage.setItem('basicCrumbs', JSON.stringify(_this.basicCrumbs));
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                if (error.status == 500) {
                    _this.toaster.error('Internal Server Error', 'Error!');
                }
                else {
                    _this.toaster.error(error.error.error, 'Error!');
                }
                _this.spinner.hide();
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
        else {
            this.loanService.updateLoanInfo(this.model).subscribe(function (res) {
                console.log(res);
                console.log(_this.basicCrumbs);
                _this.spinner.hide();
                _this.toaster.success('Saved');
                _this.prdEditable = false;
                // if (res.loanSeq) {
                //   this.model.loanSeq = res.loanSeq;
                //   this.model.loanAppSeq = res.loanSeq;
                // }
                //change here
                var hasNom = false;
                var hasboth = false;
                if (res.forms) {
                    res.forms.forEach(function (element) {
                        if (element.formUrl == 'nominee') {
                            res.forms.forEach(function (form) {
                                if (form.formUrl == 'next-of-kin') {
                                    hasboth = true;
                                    form.hasNextOfKin = true;
                                    element.hasNextOfKin = true;
                                    hasboth = true;
                                }
                            });
                        }
                    });
                    _this.model.forms = res.forms;
                    if (_this.model.forms.length < 1) {
                        res.forms.forEach(function (element, index) {
                            if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                                element.isSaved = true;
                                _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                            }
                            else if (element.formUrl == "submit" && _this.auth.role == 'bm' && _this.auth.role == 'ho') {
                                element.formNm = "Process Application";
                                _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                            }
                            else if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                                element.isSaved = true;
                                _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                            }
                            else if (element.formUrl == 'next-of-kin') {
                                if (hasboth) {
                                    _this.model.hasNextOfKin = true;
                                    if (_this.model.isNomDetailAvailable) {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                                    }
                                    else {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                    }
                                }
                                else {
                                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                }
                            }
                            else if (element.formUrl == 'nominee') {
                                if (hasboth) {
                                    _this.model.hasNextOfKin = true;
                                    if (!_this.model.isNomDetailAvailable) {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                                    }
                                    else {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                    }
                                }
                                else {
                                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                }
                            }
                            else {
                                _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                            }
                            if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                                _this.model.formSeq = element.formSeq;
                                element.isSaved = true;
                            }
                        });
                    }
                    // this.basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
                    _this.basicCrumbs.forEach(function (element, index) {
                        if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                            _this.model.formSeq = element.formSeq;
                            element.formSaved = true;
                            element.isSaved = true;
                        }
                    });
                    // this.basicCrumbs.forEach(element => {
                    //   if (this.router.url == '/loan-origination/app/' + element.formUrl) {
                    //     element.isSaved = true;
                    //     this.breadcrumbProvider.updateSavedStatusViaLabel2(element);
                    //   }
                    // });
                }
                sessionStorage.setItem('basicCrumbs', JSON.stringify(_this.basicCrumbs));
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
                // if (res.forms) {
                //   this.model.loanProduct = this.product;
                //   this.model.forms = res.forms;
                //   this.breadcrumbProvider._addItem = new Subject<BreadCrumb>();
                //   this.basicCrumbs.forEach(element => {
                //     if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                //       element.isSaved = true;
                //       this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
                //     } else if (element.formUrl == "submit" && this.auth.role == 'bm') {
                //       element.formNm = "Process Application";
                //       this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
                //     } else if (!(element.formUrl === 'co-borrower' && this.model.isSelfPdc)) {
                //       this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
                //     } else {
                //       this.breadcrumbProvider.addDisabledItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
                //     }
                //     if ('/loan-origination/app/' + element.formUrl === this.router.url) {
                //       this.model.formSeq = element.formSeq;
                //     }
                //   });
                //   // this.model = JSON.parse(sessionStorage.getItem('model'));
                //   // if (this.model.forms) {
                //   //   this.model.forms.forEach(
                //   //     forms => {
                //   //       if (!(forms.formUrl === 'co-borrower' && this.model.selfPDC)) {
                //   //         this.breadcrumbProvider.addCheckedItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                //   //       } else {
                //   //         this.breadcrumbProvider.addDisabledItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                //   //       }
                //   //       // this.breadcrumbProvider.addCheckedItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                //   //       if ('/loan-origination/app/' + forms.formUrl == this.router.url) {
                //   //         this.model.formSeq = forms.formSeq;
                //   //       }
                //   //     }
                //   //   );
                //   // }
                // }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                if (error.status == 500) {
                    _this.toaster.error('Internal Server Error', 'Error!');
                }
                else {
                    _this.toaster.error(error.error.error, 'Error!');
                }
                _this.spinner.hide();
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
        // }
    };
    LoanInfoComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    LoanInfoComponent.prototype.alphaNumeric = function (event) {
        var pattern = /[0-9a-zA-Z/ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    LoanInfoComponent.prototype.checkBusinessAppraisalForm = function () {
        var _this = this;
        var found = false;
        this.showFields = false;
        if (this.product.productSeq != undefined) {
            this.loanService.getAllFormsAssignmentsBySeq(this.product.productSeq).subscribe(function (res) {
                res.forEach(function (form) {
                    _this.allForms.forEach(function (oform) {
                        if (form.formSeq == oform.formSeq) {
                            if (oform.formUrl == "business-appraisal") {
                                found = true;
                            }
                            if (oform.formUrl == "school-appraisal") {
                                found = true;
                            }
                            if (oform.formUrl == "live-stock-appraisal") {
                                found = true;
                            }
                        }
                    });
                });
                if (!found) {
                    _this.showFields = true;
                    "";
                }
            }, function (error) {
                console.log(error);
            });
        }
    };
    LoanInfoComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-loan-info',
            template: __webpack_require__(/*! ./loan-info.component.html */ "./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.html"),
            styles: [__webpack_require__(/*! ./loan-info.component.css */ "./src/app/pages/loan-origination/loan-app/loan-info/loan-info.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _shared_services_common_service__WEBPACK_IMPORTED_MODULE_10__["CommonService"], _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"]])
    ], LoanInfoComponent);
    return LoanInfoComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.css":
/*!*************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.css ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.html":
/*!**************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n      <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol1\">\r\n          <mat-form-field>\r\n            <input type=\"text\" placeholder=\"Recommended Credit Amount\" matInput readonly value=\"{{model.recAmount}}\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-sm-6 \">\r\n          <h6 class=\"colorBlack\">Credit Utilization Plan</h6>\r\n        </div>\r\n        <div class=\"col-sm-6 addBtn mb-2\">\r\n          <button class=\"btn btn-primary btn-sm\" [disabled]=\"readonly\" (click)=\"addLoan()\">\r\n            <i class=\"fa fa-plus\"></i> Add</button>\r\n        </div>\r\n        <div class=\"modal fade\" id=\"addmember\" role=\"dialog\">\r\n          <div class=\"modal-dialog mymodal\">\r\n\r\n            <!-- Modal content-->\r\n            <form (ngSubmit)=\"onLoanUtilizationForm()\" #addLoanUtilizationForm=\"ngForm\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\">Add Credit Utilization Plan</h5>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <div class=\"cRow\">\r\n                    <div class=\"cCol3-col\">\r\n                      <mat-form-field>\r\n                        <mat-select [disabled]=\"readonly\" placeholder=\"Expense Type\"\r\n                                    [(ngModel)]=\"loanUtilization.loanUtilType\"\r\n                                    [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                                    id=\"loanUtilType\" name=\"loanUtilType\" required>\r\n                          <mat-option *ngFor=\"let edu of expenseTypeArray\" [value]=\"edu.codeKey\">\r\n                            {{edu.codeValue}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"cCol3-col\">\r\n                      <mat-form-field>\r\n                      <input type=\"text\" required [(ngModel)]=\"loanUtilization.loanUtilDesc\"\r\n                             id=\"loanUtilDesc\" name=\"loanUtilDesc\" matInput [readonly]=\"readonly\"\r\n                             [errorStateMatcher]=\"matcher\" maxlength=\"100\"\r\n                             placeholder=\"Description\" #loanUtilDesc=\"ngModel\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"cCol3-col\">\r\n                      <mat-form-field>\r\n                      <input type=\"number\" pattern=\"\\d*\" max=\"{{model.recAmount}}\" min=\"0\"  matInput [readonly]=\"readonly\"\r\n                             required [(ngModel)]=\"loanUtilization.loanUtilAmount\"\r\n                             id=\"loanUtilAmount\" name=\"loanUtilAmount\"\r\n                             [errorStateMatcher]=\"matcher\"\r\n                             placeholder=\"Amount\" #loanUtilAmount=\"ngModel\">\r\n                        <mat-error *ngIf=\"loanUtilAmount.invalid\">\r\n                          Credit utilization amount is <strong>invalid</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"loanUtilAmount.errors?.maxlength\">\r\n                          Credit utilization amount max is <strong>{{model.recAmount}}</strong>\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"modal-footer text-center\">\r\n                  <button type=\"submit\" class=\"btn btn-primary btn-min\" [disabled]=\"!addLoanUtilizationForm.form.valid\">Ok</button>\r\n                  <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive mb-md-5\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n          <tr>\r\n            <th>Expense Type</th>\r\n            <th>Description</th>\r\n            <th>Amount</th>\r\n            <th>Action</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let expense of model.loanUtilization\">\r\n            <td>{{findValueFromKey(expense.loanUtilType, expenseTypeArrayOrig)}}</td>\r\n            <td>{{expense.loanUtilDesc}}</td>\r\n            <td>{{expense.loanUtilAmount  | currency:'PKR':''}}</td>\r\n            <td>\r\n              <button [disabled]=\"readonly\" (click)=\"editLoan(expense)\" class=\"iconBtn simplebtn\">\r\n                <i class=\"fa fa-pencil\"></i>\r\n              </button>\r\n              <button [disabled]=\"readonly\" (click)=deleteLoan(expense) class=\"iconBtn delBtn simplebtn\">\r\n                <i class=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr class=\"total-info\">\r\n            <td></td>\r\n            <td class=\"text-right\">\r\n              <b>Total Expenses:</b>\r\n            </td>\r\n            <td>\r\n              <input style=\"text-align: right\" type=\"text\" readonly  class=\"form-control small\" value=\"{{totalExpense  | currency:'PKR':''}}\">\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"continueClicked()\" [disabled]=\"!formSaved\">Continue</button>\r\n      <button class=\"btn btn-default\" type=\"button\" [disabled]=\"readonly\" (click)=\"saveClicked()\">Save</button>\r\n    </div>\r\n\r\n    <div class=\"modal fade\" id=\"deleteLConfirmation\" role=\"dialog\">\r\n      <div class=\"modal-dialog mymodal\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Delete Expected Credit</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <div class=\"table-responsive\">\r\n              <h6>Do you want to delete?</h6>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-footer smmodal-footer text-center\">\r\n              <button type=\"button\" (click)=\"confirmLDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n    \r\n    <div class=\"modal fade\" id=\"setUtilAmount\" role=\"dialog\">\r\n      <div class=\"modal-dialog mymodal\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Warning</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <div class=\"table-responsive\">\r\n              <h6>Total utilization amount exeeding recommended credit amount. Do you want to set maximum allowed amount?</h6>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-footer smmodal-footer text-center\">\r\n              <button type=\"button\" (click)=\"confirmUpdateAmount()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</main>\r\n"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.ts":
/*!************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.ts ***!
  \************************************************************************************************/
/*! exports provided: LoanUtilizationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanUtilizationComponent", function() { return LoanUtilizationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_LoanUtilization_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/models/LoanUtilization.model */ "./src/app/shared/models/LoanUtilization.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var LoanUtilizationComponent = /** @class */ (function () {
    function LoanUtilizationComponent(router, loanService, commonService, spinner, toaster, breadcrumbProvider) {
        this.router = router;
        this.loanService = loanService;
        this.commonService = commonService;
        this.spinner = spinner;
        this.toaster = toaster;
        this.breadcrumbProvider = breadcrumbProvider;
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.formSaved = false;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__["MyErrorStateMatcher"]();
        this.form = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.totalExpense = 0;
    }
    LoanUtilizationComponent.prototype.ngOnInit = function () {
        var _this = this;
        var date = new Date();
        this.now = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        this.maxAmount = this.model.recAmount;
        this.setBreadCrumbs();
        this.loanUtilization = new _shared_models_LoanUtilization_model__WEBPACK_IMPORTED_MODULE_3__["LoanUtilization"](this.model.loanSeq, this.model.formSeq);
        this.calculateTotalExpense();
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.formSaved = true;
            this.loanService.getExpenseLoanInfo(this.model.loanAppSeq).subscribe(function (res) {
                console.log(res);
                _this.model.recAmount = res.recAmount;
                _this.model.loanUtilization = res.loanUtilization;
                _this.calculateTotalExpense();
                // this.model.recAmount = res.recommended;
                // this.model.loanUtilization = res.plans;
                console.log(_this.model);
            }, function (error) {
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        this.loadLovs();
    };
    LoanUtilizationComponent.prototype.setBreadCrumbs = function () {
        var _this = this;
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
    };
    LoanUtilizationComponent.prototype.loadLovs = function () {
        var _this = this;
        var expense_group_code = _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["LOAN_UTILIZATION_EXPENSE"];
        this.loanService.getMwPrdBySeq(this.model.loanProd).subscribe(function (res) {
            if (res != null)
                if (res.prdGrpSeq == 9) {
                    expense_group_code = _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["LOAN_UTILIZATION_EXPENSE_SCHOOL"];
                }
                else if (res.prdGrpSeq == 16) {
                    expense_group_code = _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["LOAN_UTILIZATION_EXPENSE_DAIRY"];
                }
                else if (res.prdGrpSeq == 5305) {
                    expense_group_code = _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["LOAN_UTILIZATION_EXPENSE_MEAT"];
                }
            _this.commonService.getValues(expense_group_code).subscribe(function (res) {
                _this.expenseTypeArray = res;
                _this.expenseTypeArrayOrig = JSON.parse(JSON.stringify(res));
                console.log('Expense');
                console.log(_this.expenseTypeArray);
            }, function (error) {
                console.log('err', error);
            });
        });
    };
    LoanUtilizationComponent.prototype.addExpense = function () {
    };
    LoanUtilizationComponent.prototype.onSubmit = function () {
    };
    LoanUtilizationComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedExpected', this.formSaved.toString());
    };
    LoanUtilizationComponent.prototype.continueClicked = function () {
        var _this = this;
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    LoanUtilizationComponent.prototype.saveClicked = function () {
        var _this = this;
        this.formSaved = true;
        if (this.model.loanUtilization.length <= 0) {
            this.toaster.error("Add Loan Utilizataion");
        }
        else {
            if (this.model.forms) {
                this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        if (_this.model.recAmount == _this.totalExpense) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                        else {
                            forms.isSaved = false;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    }
                });
            }
            sessionStorage.setItem('model', JSON.stringify(this.model));
        }
    };
    LoanUtilizationComponent.prototype.calculateTotalExpense = function () {
        this.totalExpense = 0;
        for (var i = 0; i < this.model.loanUtilization.length; i++) {
            var x = +this.model.loanUtilization[i].loanUtilAmount;
            this.totalExpense = this.totalExpense + x;
            this.maxAmount = this.maxAmount - x;
        }
    };
    LoanUtilizationComponent.prototype.onLoanUtilizationForm = function () {
        var _this = this;
        if (+this.loanUtilization.loanUtilAmount <= 0) {
            this.toaster.error('Invalid Amount!', 'Error');
            return;
        }
        if (this.isEdit) {
            if ((+this.editTotal + +this.loanUtilization.loanUtilAmount) > this.model.recAmount) {
                this.toaster.error('Your Amount Exceeds Recommended Amount!', 'Error');
                $('#setUtilAmount').modal('show');
                return;
            }
        }
        else {
            this.calculateTotalExpense();
            var total = +this.totalExpense + +this.loanUtilization.loanUtilAmount;
            if (total > this.model.recAmount) {
                this.toaster.error('Your Amount Exceeds Recommended Amount!', 'Error');
                $('#setUtilAmount').modal('show');
                return;
            }
        }
        this.spinner.show();
        if (this.isEdit) {
            this.loanUtilization.loanAppSeq = this.model.loanAppSeq;
            this.loanUtilization.formSeq = this.model.formSeq;
            this.loanService.updateExpenseLoan(this.loanUtilization).subscribe(function (res) {
                console.log(res);
                console.log(_this.model);
                _this.model.loanUtilization[_this.loanUtilization.index] = _this.loanUtilization;
                _this.calculateTotalExpense();
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            if (_this.model.recAmount == _this.totalExpense) {
                                forms.isSaved = true;
                                _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                            }
                            else {
                                forms.isSaved = false;
                                _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                            }
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.loanUtilization = new _shared_models_LoanUtilization_model__WEBPACK_IMPORTED_MODULE_3__["LoanUtilization"](_this.model.loanSeq, _this.model.formSeq);
                _this.spinner.hide();
                $('#addmember').modal('hide');
                _this.saveClicked();
            }, function (error) {
                _this.toaster.error(error.error.error, "Error");
                _this.spinner.hide();
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            console.log(this.model);
            console.log(this.loanUtilization);
            console.log(this.model.loanAppSeq);
            this.loanUtilization.loanAppSeq = this.model.loanAppSeq;
            this.loanService.addExpenseLoan(this.loanUtilization).subscribe(function (res) {
                console.log(res);
                console.log(_this.model);
                if (res.utilPlanSeq) {
                    var x = +_this.loanUtilization.loanUtilAmount;
                    _this.totalExpense = _this.totalExpense + x;
                    _this.loanUtilization.utilPlanSeq = res.utilPlanSeq;
                    _this.model.loanUtilization.push(_this.loanUtilization);
                    _this.maxAmount = _this.maxAmount - x;
                    if (_this.model.forms) {
                        _this.model.forms.forEach(function (forms) {
                            if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                                if (_this.model.recAmount == _this.totalExpense) {
                                    forms.isSaved = true;
                                    _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                                }
                                else {
                                    forms.isSaved = false;
                                    _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                                }
                            }
                        });
                    }
                    sessionStorage.setItem('model', JSON.stringify(_this.model));
                    _this.loanUtilization = new _shared_models_LoanUtilization_model__WEBPACK_IMPORTED_MODULE_3__["LoanUtilization"](_this.model.loanSeq, _this.model.formSeq);
                    $('#addmember').modal('hide');
                }
                _this.spinner.hide();
            }, function (error) {
                _this.toaster.error(error.error.error, "Error");
                _this.spinner.hide();
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
    };
    LoanUtilizationComponent.prototype.addLoan = function () {
        this.removeItemsFromLOVUsingLoans();
        this.isEdit = false;
        this.loanUtilization = new _shared_models_LoanUtilization_model__WEBPACK_IMPORTED_MODULE_3__["LoanUtilization"](this.model.loanSeq, this.model.formSeq);
        $('#addmember').modal('show');
    };
    LoanUtilizationComponent.prototype.editLoan = function (expense) {
        var _this = this;
        this.removeItemsFromLOVUsingLoans();
        this.isEdit = true;
        this.loanUtilization = JSON.parse(JSON.stringify(expense));
        this.loanUtilization.index = this.model.loanUtilization.indexOf(expense);
        this.editTotal = this.totalExpense - (+expense.loanUtilAmount);
        $('#addmember').modal('show');
        this.expenseTypeArrayOrig.forEach(function (element) {
            if (element.codeKey == expense.loanUtilType) {
                _this.expenseTypeArray.push(element);
            }
        });
    };
    LoanUtilizationComponent.prototype.deleteLoan = function (expense) {
        $('#deleteLConfirmation').modal('show');
        this.itemToDelete = expense;
    };
    LoanUtilizationComponent.prototype.confirmLDelete = function () {
        var _this = this;
        this.spinner.show();
        this.loanService.deleteExpectedLoanUtil('' + this.itemToDelete.utilPlanSeq).subscribe(function (res) {
            console.log(res);
            _this.spinner.hide();
            _this.toaster.success("Deleted");
            var index = _this.model.loanUtilization.indexOf(_this.itemToDelete);
            console.log(index);
            if (index > -1) {
                _this.model.loanUtilization.splice(index, 1);
            }
            _this.calculateTotalExpense();
            $('#deleteLConfirmation').modal('hide');
            if (_this.model.forms) {
                _this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        if (_this.model.recAmount == _this.totalExpense) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                        else {
                            forms.isSaved = false;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    }
                });
            }
            sessionStorage.setItem('model', JSON.stringify(_this.model));
        }, function (error) { console.log(error); _this.spinner.hide(); _this.toaster.error(error.error.error); });
    };
    LoanUtilizationComponent.prototype.findValueFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == key) {
                    return array[i].codeValue;
                }
            }
        }
    };
    LoanUtilizationComponent.prototype.removeItemsFromLOVUsingLoans = function () {
        var _this = this;
        this.expenseTypeArray = JSON.parse(JSON.stringify(this.expenseTypeArrayOrig));
        this.model.loanUtilization.forEach(function (x) {
            _this.removeItemFromLOV(x.loanUtilType, _this.expenseTypeArray);
        });
    };
    LoanUtilizationComponent.prototype.removeItemFromLOV = function (key, lov) {
        var index = -1;
        for (var i = 0; i < lov.length; i++) {
            if (key == lov[i].codeKey) {
                index = i;
                break;
            }
        }
        if (index >= 0) {
            lov.splice(index, 1);
        }
    };
    LoanUtilizationComponent.prototype.confirmUpdateAmount = function () {
        // console.log(this.model.recAmount - +th
        if (this.isEdit) {
            console.log(+this.editTotal);
            console.log(this.model.recAmount - +this.editTotal);
            this.loanUtilization.loanUtilAmount = this.model.recAmount - +this.editTotal;
        }
        else {
            console.log(this.model.recAmount - +this.totalExpense);
            this.loanUtilization.loanUtilAmount = this.model.recAmount - +this.totalExpense;
        }
        $('#setUtilAmount').modal('hide');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], LoanUtilizationComponent.prototype, "form", void 0);
    LoanUtilizationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-loan-utilization',
            template: __webpack_require__(/*! ./loan-utilization.component.html */ "./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.html"),
            styles: [__webpack_require__(/*! ./loan-utilization.component.css */ "./src/app/pages/loan-origination/loan-app/loan-utilization/loan-utilization.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"], _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__["BreadcrumbProvider"]])
    ], LoanUtilizationComponent);
    return LoanUtilizationComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.css":
/*!***************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6\">\r\n          <h6>{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n        </div>\r\n        <div class=\"col-sm-6 addBtn\">\r\n          <button type=\"button\" [disabled]=\"readonly\" (click)=\"onAddClick()\" class=\"btn btn-primary btn-sm\">\r\n            <i class=\"fa fa-plus\"></i> Add</button>\r\n          <!-- <button type=\"button\" (click)=\"onMfcibForm()\" class=\"btn btn-primary btn-sm\">MFCIB Form</button> -->\r\n          <!-- <button type=\"button\" (click)=\"onFetchClick()\" class=\"btn btn-primary btn-sm\"> Fetch MFCIB</button> -->\r\n          <!-- <a  class=\"btn btn-primary btn-sm\" disabled> Fetch MFCIB</a> -->\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"modal fade\" id=\"Addmfcib\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal fullpop\">\r\n          <form (ngSubmit)=\"onAddMfcibFormSubmit()\" #addMfcibForm=\"ngForm\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Other Credit</h5>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"table-responsive mb-md-5\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Name of Institute:</th>\r\n                        <th>Total Credit Amount:</th>\r\n                        <th>Credit Purpose:</th>\r\n                        <th>Current Amount Outstanding</th>\r\n                        <th>Credit Completion Date:</th>\r\n                        <th>Include in Expenses</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <mat-form-field>\r\n                            <input [readonly]=\"readonly\" matInput (keypress)=\"onlyLetters($event)\" type=\"text\"\r\n                              maxlength=\"32\" value=\"\" required [(ngModel)]=\"mfcibLoan.instituteName\" id=\"instituteName\"\r\n                              [errorStateMatcher]=\"matcher\" name=\"instituteName\" placeholder=\"Name of Institute\"\r\n                              #instituteName=\"ngModel\">\r\n                            <mat-error *ngIf=\"instituteName.invalid\">\r\n                              institute name is <strong>invalid</strong>\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </td>\r\n                        <td>\r\n                          <mat-form-field>\r\n                            <input [readonly]=\"readonly\" (keypress)=\"onlyNumbers($event)\" type=\"text\" matInput required\r\n                              [(ngModel)]=\"mfcibLoan.totalAmount\" min=\"0\" maxlength=\"6\" [errorStateMatcher]=\"matcher\"\r\n                              pattern=\"^[1-9]\\d*$\" id=\"totalAmount\" name=\"totalAmount\" placeholder=\"Total Amount\"\r\n                              #totalAmount=\"ngModel\">\r\n                            <mat-error *ngIf=\"totalAmount.invalid\">\r\n                              total amount is <strong>invalid</strong>\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </td>\r\n                        <td>\r\n                          <mat-form-field>\r\n                            <input [readonly]=\"readonly\" matInput (keypress)=\"onlyLetters($event)\" maxlength=\"250\"\r\n                              type=\"text\" value=\"\" required [(ngModel)]=\"mfcibLoan.loanPurpose\" id=\"loanPurpose\"\r\n                              name=\"loanPurpose\" placeholder=\"Purpose\" #loanPurpose=\"ngModel\">\r\n                            <mat-error *ngIf=\"loanPurpose.invalid\">\r\n                              Credit purpose is <strong>invalid</strong>\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </td>\r\n                        <td>\r\n                          <mat-form-field>\r\n                            <input [readonly]=\"readonly\" matInput (keypress)=\"onlyNumbers($event)\" type=\"text\"\r\n                              maxlength=\"6\" value=\"\" required [(ngModel)]=\"mfcibLoan.currentOutStandingAmount\"\r\n                              id=\"currentOutStandingAmount\" name=\"currentOutStandingAmount\"\r\n                              placeholder=\"Outstanding Amount\" #currentOutStandingAmount=\"ngModel\">\r\n                            <mat-error *ngIf=\"currentOutStandingAmount.invalid\">\r\n                              current outstanding amount is <strong>invalid</strong>\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </td>\r\n                        <td>\r\n                          <mat-form-field>\r\n                            <input [readonly]=\"readonly\" matInput required name=\"loanCompletionDate\"\r\n                              #loanCompletionDate=\"ngModel\" [matDatepicker]=\"picker3\" readonly min=\"{{today}}\"\r\n                              placeholder=\"Completion Date\" [(ngModel)]=\"mfcibLoan.loanCompletionDate\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                            <mat-datepicker startView=\"multi-year\" required #picker3 disabled=\"false\"></mat-datepicker>\r\n                          </mat-form-field>\r\n\r\n                        </td>\r\n                        <td class=\"text-center\">\r\n                          <mat-checkbox [disabled]=\"readonly\" class=\"example-margin\" #isExpense=\"ngModel\"\r\n                            name=\"isExpense\" [(ngModel)]=\"mfcibLoan.isExpense\"></mat-checkbox>\r\n                          <!-- <mat-radio-group [(ngModel)]=\"mfcibLoan.isExpense\"\r\n                                         #isExpense=\"ngModel\" name=\"isExpense\">\r\n                          <mat-radio-button class=\"w-50\" [value]=\"true\"></mat-radio-button>\r\n                        </mat-radio-group> -->\r\n                        </td>\r\n\r\n                      </tr>\r\n\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n\r\n                <div class=\"modal-footer smmodal-footer text-center\">\r\n                  <button type=\"submit\" [disabled]=\"!addMfcibForm.form.valid\"\r\n                    class=\"btn btn-primary btn-min\">Ok</button>\r\n                  <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelClicked()\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"table-responsive mb-md-5\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th>Name of Institute:</th>\r\n              <th>Total Credit Amount:</th>\r\n              <th>Credit Purpose:</th>\r\n              <th>Current Amount Outstanding</th>\r\n              <th>Credit Completion Date:</th>\r\n              <th>Include in Expenses</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let loan of model.mfcibArray\">\r\n              <td>\r\n                {{loan.instituteName}}\r\n              </td>\r\n              <td>\r\n                {{loan.totalAmount  | currency:'PKR':''}}\r\n              </td>\r\n              <td>\r\n                {{loan.loanPurpose}}\r\n              </td>\r\n              <td>\r\n                {{loan.currentOutStandingAmount  | currency:'PKR':''}}\r\n              </td>\r\n              <td>\r\n                {{loan.loanCompletionDate | date: 'dd-MM-yyyy' }}\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <div class=\"checkbox mb-1 d-inline-block\">\r\n                  <div class=\"custom-control custom-checkbox\">\r\n                    <input [readonly]=\"readonly\" type=\"checkbox\" id=\"checkbox5\" name=\"coBorrower\" value=\"true\"\r\n                      class=\"custom-control-input\" [(ngModel)]=\"loan.isExpense\" readonly disabled>\r\n                    <label class=\"custom-control-label\" for=\"checkbox5\" style=\"float:  left;\"></label>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <button [disabled]=\"readonly\" type=\"button\" (click)=\"onEditClicked(loan)\" class=\"iconBtn simplebtn\">\r\n                  <i class=\"fa fa-pencil\"></i>\r\n                </button>\r\n                <button [disabled]=\"readonly\" type=\"button\" (click)=\"deleteItem(loan)\" class=\"iconBtn delBtn simplebtn\">\r\n                  <i class=\"fa fa-trash-o\"></i>\r\n                </button>\r\n                <!-- <a  class=\"iconBtn\"><i class=\"fa fa-history\"></i></a> -->\r\n              </td>\r\n\r\n              <!-- </tr>\r\n            <tr>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"FMFB\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"35,000\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"Start Business\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"9568\"></td>\r\n              <td><div class=\"input-group date\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"DD / MM / YYYY\">\r\n                  <div class=\"input-group-append input-group-addon\t\">\r\n                    <button class=\"input-group-text\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\r\n                  </div>\r\n                </div></td>\r\n              <td class=\"text-center\"><div class=\"checkbox mb-1 d-inline-block\">\r\n                  <div class=\"custom-control custom-checkbox\">\r\n                    <input type=\"checkbox\" id=\"checkbox6\" name=\"coBorrower\" class=\"custom-control-input\">\r\n                    <label class=\"custom-control-label\" for=\"checkbox6\"></label>\r\n                  </div>\r\n                </div></td>\r\n            </tr>\r\n            <tr>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"FMFB\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"35,000\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"Start Business\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"9568\"></td>\r\n              <td><div class=\"input-group date\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"DD / MM / YYYY\">\r\n                  <div class=\"input-group-append input-group-addon\t\">\r\n                    <button class=\"input-group-text\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\r\n                  </div>\r\n                </div></td>\r\n              <td class=\"text-center\"><div class=\"checkbox mb-1 d-inline-block\">\r\n                  <div class=\"custom-control custom-checkbox\">\r\n                    <input type=\"checkbox\" id=\"checkbox7\" name=\"coBorrower\" class=\"custom-control-input\">\r\n                    <label class=\"custom-control-label\" for=\"checkbox7\"></label>\r\n                  </div>\r\n                </div></td>\r\n            </tr>\r\n            <tr>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"FMFB\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"35,000\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"Start Business\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"9568\"></td>\r\n              <td><div class=\"input-group date\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"DD / MM / YYYY\">\r\n                  <div class=\"input-group-append input-group-addon\t\">\r\n                    <button class=\"input-group-text\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\r\n                  </div>\r\n                </div></td>\r\n              <td class=\"text-center\"><div class=\"checkbox mb-1 d-inline-block\">\r\n                  <div class=\"custom-control custom-checkbox\">\r\n                    <input type=\"checkbox\" id=\"checkbox8\" name=\"coBorrower\" class=\"custom-control-input\">\r\n                    <label class=\"custom-control-label\" for=\"checkbox8\"></label>\r\n                  </div>\r\n                </div></td>\r\n            </tr>\r\n            <tr>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"FMFB\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"35,000\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"Start Business\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"9568\"></td>\r\n              <td><div class=\"input-group date\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"DD / MM / YYYY\">\r\n                  <div class=\"input-group-append input-group-addon\t\">\r\n                    <button class=\"input-group-text\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\r\n                  </div>\r\n                </div></td>\r\n              <td class=\"text-center\"><div class=\"checkbox mb-1 d-inline-block\">\r\n                  <div class=\"custom-control custom-checkbox\">\r\n                    <input type=\"checkbox\" id=\"checkbox9\" name=\"coBorrower\" class=\"custom-control-input\">\r\n                    <label class=\"custom-control-label\" for=\"checkbox9\"></label>\r\n                  </div>\r\n                </div></td>\r\n            </tr>\r\n            <tr>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"FMFB\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"35,000\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"Start Business\"></td>\r\n              <td><input type=\"text\" class=\"form-control\" value=\"9568\"></td>\r\n              <td><div class=\"input-group date\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"DD / MM / YYYY\">\r\n                  <div class=\"input-group-append input-group-addon\t\">\r\n                    <button class=\"input-group-text\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\r\n                  </div>\r\n                </div></td>\r\n              <td class=\"text-center\"><div class=\"checkbox mb-1 d-inline-block\">\r\n                  <div class=\"custom-control custom-checkbox\">\r\n                    <input type=\"checkbox\" id=\"checkbox10\" name=\"coBorrower\" class=\"custom-control-input\">\r\n                    <label class=\"custom-control-label\" for=\"checkbox10\"></label>\r\n                  </div>\r\n                </div></td>\r\n            </tr> -->\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"continueClicked()\"\r\n        [disabled]=\"!formSaved\">Continue</button>\r\n      <button class=\"btn btn-default\" (click)=\"onSave()\">Save</button>\r\n    </div>\r\n\r\n\r\n    <div class=\"modal fade\" id=\"deleteConfirmation\" role=\"dialog\">\r\n      <div class=\"modal-dialog mymodal\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Delete MFCIB</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <div class=\"table-responsive\">\r\n              <h6>Do you want to delete?</h6>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-footer smmodal-footer text-center\">\r\n              <button type=\"button\" (click)=\"confirmDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!--------------------------     START MFCIB Form                  ----------------------------->\r\n\r\n\r\n    <div class=\"modal fade\" id=\"mfcibForm\" role=\"dialog\">\r\n      <div class=\"modal-dialog mymodal bigger\" style=\"max-width:95%; top:10%\">\r\n        <form [formGroup]=\"mfcibForm\" (ngSubmit)=\"onMFCIBFormSubmit()\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">MFCIB Form</h5>\r\n            </div>\r\n            <div class=\"modal-body\" style=\"max-height:50%; top:1%\">\r\n\r\n              <div class=\"borderbox\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"appId\" readonly matInput placeholder=\"Application ID:\"\r\n                      (keypress)=\"onlyNumbers($event)\" formControlName=\"appId\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('appId', 'required')\">Application ID is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"memCod\" readonly matInput placeholder=\"Member Code:\"\r\n                      (keypress)=\"onlyNumbers($event)\" formControlName=\"memCod\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('memCod', 'required')\">Member Code is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"ctrlBrnchCod\" matInput placeholder=\"Control Branch Code:\"\r\n                      (keypress)=\"onlyNumbers($event)\" formControlName=\"ctrlBrnchCod\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('ctrlBrnchCod', 'required')\">Control Branch Code is\r\n                      <strong>required</strong></mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"sbBrnchCod\" matInput placeholder=\"Sub Branch Code:\"\r\n                      (keypress)=\"onlyNumbers($event)\" formControlName=\"sbBrnchCod\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('sbBrnchCod', 'required')\">Sub Branch Code is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"chkUsrNam\" matInput placeholder=\"Checker Username:\"\r\n                      formControlName=\"chkUsrNam\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('chkUsrNam', 'required')\">Checker Username is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"mkUsrNam\" matInput placeholder=\"Maker Username:\" formControlName=\"mkUsrNam\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('mkUsrNam', 'required')\">Maker Username <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <!-- <input type=\"password\" name=\"mkrpas\" matInput placeholder=\"Maker Password:\" formControlName=\"mkrpas\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('mkrpas', 'required')\">Maker Password <strong>required</strong>\r\n                    </mat-error> -->\r\n\r\n\r\n                    <input matInput placeholder=\"Maker Password\" [type]=\"hide ? 'password' : 'text'\"\r\n                      formControlName=\"mkrpas\" [errorStateMatcher]=\"matcher\">\r\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                      [attr.aria-pressed]=\"hide\">\r\n                    </button>\r\n                    <mat-error *ngIf=\"hasError('mkrpas', 'required')\">Maker Password <strong>required</strong>\r\n                    </mat-error>\r\n\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"cnic\" matInput placeholder=\"CNIC:\" formControlName=\"cnic\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('cnic', 'required')\">CNIC <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"nicPass\" matInput placeholder=\"NIC No / Passport No:\"\r\n                      formControlName=\"nicPass\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('nicPass', 'required')\">NIC No / Passport No <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"frstNam\" matInput placeholder=\"First Name:\" formControlName=\"frstNam\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('frstNam', 'required')\">First Name <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"midNam\" matInput placeholder=\"Middle Name:\" formControlName=\"midNam\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('midNam', 'required')\">Middle Name <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"lstName\" matInput placeholder=\"Last Name:\" formControlName=\"lstName\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('lstName', 'required')\">Last Name <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"gen\" matInput placeholder=\"Gender:\" formControlName=\"gen\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('gen', 'required')\">Gender <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Date Of Birth:\" formControlName=\"dob\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"hasError('dob', 'required')\">Date Of Birth <strong>required</strong></mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"fhfstNam\" matInput placeholder=\"Father/Husband First Name:\"\r\n                      formControlName=\"fhfstNam\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('dob', 'required')\">Father/Husband First Name is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"fhMidNam\" matInput placeholder=\"Father/Husband Middle Name:\"\r\n                      formControlName=\"fhMidNam\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('fhMidNam', 'required')\">Father/Husband Middle Name is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"fhLstNam\" matInput placeholder=\"Father/Husband Last Name:\"\r\n                      formControlName=\"fhLstNam\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('fhLstNam', 'required')\">Father/Husband Last Name is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"ctDis\" matInput placeholder=\"City Or District:\" formControlName=\"ctDis\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('ctDis', 'required')\">City Or District is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"addr\" matInput placeholder=\"Address:\" formControlName=\"addr\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('addr', 'required')\">Address is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"phnum\" matInput placeholder=\"Phone Number:\" formControlName=\"phnum\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('phnum', 'required')\">Phone Number is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"cellNum\" matInput placeholder=\"Cell Number:\" formControlName=\"cellNum\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('cellNum', 'required')\">Cell Number is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"emailAdd\" matInput placeholder=\"Email Address:\" formControlName=\"emailAdd\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('emailAdd', 'required')\">Email Address is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"amtTyp\" matInput placeholder=\"Amount Type:\" formControlName=\"amtTyp\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('amtTyp', 'required')\">Amount Type is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empCmpNam\" matInput placeholder=\"Employer Company Name:\"\r\n                      formControlName=\"empCmpNam\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empCmpNam', 'required')\">Employer Company Name is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empOwnStat\" matInput placeholder=\"Employer Ownership Status:\"\r\n                      formControlName=\"empOwnStat\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empOwnStat', 'required')\">Employer Ownership Status is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empBusCat\" matInput placeholder=\"Employer Business Category:\"\r\n                      formControlName=\"empBusCat\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empBusCat', 'required')\">Employer Business Category is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empAdd\" matInput placeholder=\"Employer Address:\" formControlName=\"empAdd\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empAdd', 'required')\">Employer Address is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empCtDis\" matInput placeholder=\"Employer City/District:\"\r\n                      formControlName=\"empCtDis\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empCtDis', 'required')\">Employer City/District is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empPhNum\" matInput placeholder=\"Employer Phone Number:\"\r\n                      formControlName=\"empPhNum\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empPhNum', 'required')\">Employer Phone Number is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empCelNum\" matInput placeholder=\"Employer Cell Number:\"\r\n                      formControlName=\"empCelNum\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empCelNum', 'required')\">Employer Cell Number is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"empEmlAdd\" matInput placeholder=\"Employer Email Address:\"\r\n                      formControlName=\"empEmlAdd\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('empEmlAdd', 'required')\">Employer Email Address is\r\n                      <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"assType\" matInput placeholder=\"Association Type:\" formControlName=\"assType\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('assType', 'required')\">Association Type is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"gpId\" matInput placeholder=\"Group ID:\" formControlName=\"gpId\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('gpId', 'required')\">Group ID is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" name=\"amnts\" matInput placeholder=\"Amount:\" formControlName=\"amnt\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"hasError('amnt', 'required')\">Amount is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cRow\">\r\n                  <div class=\"modal-footer smmodal-footer text-center\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <button type=\"submit\" class=\"btn btn-primary btn-min\">Ok</button>\r\n              <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelMfcibForm()\">Cancel</button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-----------------------    End MFCIB Form                 ----------------->\r\n\r\n\r\n\r\n\r\n    <!----------------------------      START FETCH MFCIB                 --------------------------->\r\n\r\n\r\n\r\n    <div class=\"modal fade\" id=\"fetchmfcib\" role=\"dialog\">\r\n      <div class=\"modal-dialog mymodal bigger\" style=\"max-width:95%; top:1%\">\r\n        <form (ngSubmit)=\"onFetchMFCIB()\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Other Credit</h5>\r\n            </div>\r\n            <div class=\"modal-body pt-0\" style=\"max-height:50%; top:1%\" *ngIf=\"obj.report.status == 'CR'\">\r\n\r\n              <div class=\"col-sm-12 mb-3 mt-2\">\r\n\r\n\r\n                <!----------------- Individual Credit Report ------------------------------->\r\n\r\n                <h5>Individual Credit Report (Sample Report)</h5>\r\n                <div class=\"borderbox pb-0\">\r\n                  <ul class=\"infolist mt-2 mb-2\">\r\n                    <li><b>File #:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.FILE_NO}}</span></li>\r\n                    <li><b>Creation Date:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.CREATION_DATE}}</span></li>\r\n                    <li><b>Name: </b><span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.FIRST_NAME}}\r\n                        {{obj.report.ROOT.INDIVIDUAL_DETAIL.LAST_NAME}}</span></li>\r\n                    <li>CNIC: <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.CNIC}}</span></li>\r\n                  </ul>\r\n                  <hr>\r\n                  <ul class=\"infolist mt-2 mb-2\">\r\n                    <li><b>Transaction #:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.TRANX_NO}}</span></li>\r\n                    <li><b>Transaction Date:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.TRANX_DATE}}</span></li>\r\n                    <li><b>NIC #:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.NIC}}</span></li>\r\n                    <li><b>Gender:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.GENDER}}</span></li>\r\n                  </ul>\r\n                  <hr>\r\n                  <ul class=\"infolist mt-2 mb-2\">\r\n                    <li><b>Maker:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.MAKER}} </span></li>\r\n                    <li><b>Checker:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.CHECKER}}</span></li>\r\n                    <li><b>DOB:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.DOB}}</span></li>\r\n                  </ul>\r\n                  <hr>\r\n                  <ul class=\"infolist mt-2 mb-2\">\r\n                    <li><b>Realations</b></li>\r\n                    <li><b>Father/Husband:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.FATHER_HUSBAND_FNAME}}</span>\r\n                    </li>\r\n                    <li><b>Member:</b> <span> {{obj.report.ROOT.INDIVIDUAL_DETAIL.DOB}}</span></li>\r\n                  </ul>\r\n                  <br>\r\n                </div>\r\n              </div>\r\n\r\n              <!------------------ Latest Address Information --------------------------->\r\n\r\n              <div class=\"col-sm-12\">\r\n                <div class=\"pt-1\">\r\n                  <label><b>LATEST ADDRESS INFORMATION</b></label>\r\n                </div>\r\n                <div class=\"borderbox p-2 mnh-140\">\r\n                  <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\">\r\n                    <tr>\r\n                      <td width=\"\"><b>Residential Address:</b> </td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[0].ADDRESS}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>City: </b></td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[0].CITY}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Tehsil/Town:</b> </td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Chak:</b></td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>UC:</b></td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Phone Number:</b></td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[0].PHONE2}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Cell Number:</b></td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[0].PHONE1}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Gas Consumer#:</b></td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Electricity Consumer #:</b> </td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!------------------ Previous Address Information --------------------------->\r\n\r\n\r\n              <div class=\"col-sm-12\">\r\n                <div class=\"pt-1\">\r\n                  <label><b>PREVIOUS ADDRESS INFORMATION</b></label>\r\n                </div>\r\n                <div class=\"borderbox p-2 mnh-140\">\r\n                  <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\">\r\n                    <tr>\r\n                      <td width=\"\"><b>Residential Address:</b> </td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[1].ADDRESS}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>City: </b></td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[1].CITY}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Tehsil/Town:</b> </td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Chak:</b></td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>UC:</b></td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Phone Number:</b></td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[1].PHONE2}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Cell Number:</b></td>\r\n                      <td>{{obj.report.ROOT.HOME_INFORMATION[1].PHONE1}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Gas Consumer#:</b></td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><b>Electricity Consumer #:</b> </td>\r\n                      <td>N/A</td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!---------------------- Default History ------------------------------>\r\n\r\n              <h5>Default History</h5>\r\n              <div class=\"table-responsive mb-md-5\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th>Member</th>\r\n                      <th>Branch</th>\r\n                      <th>Date</th>\r\n                      <th>Account #</th>\r\n                      <th>Amount</th>\r\n                      <th>TY</th>\r\n                      <th>ST</th>\r\n                      <th>RR</th>\r\n                      <th>AC</th>\r\n                      <th>Group ID</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let item of defaults\">\r\n                      <td>{{item.MEM_NAME}}</td>\r\n                      <td>{{item.SUBBRN_NAME}}</td>\r\n                      <td>{{item.UPD_STATUS_DATE}}</td>\r\n                      <td>{{item.UPD_ACCT_NO}}</td>\r\n                      <td>{{item.UPD_AMOUNT}}</td>\r\n                      <td>{{item.UPD_ACCT_TY}}</td>\r\n                      <td>{{item.UPD_STATUS}}</td>\r\n                      <td>{{item.UPD_RTR}}</td>\r\n                      <td>{{item.ASSOC_TY}}</td>\r\n                      <td>{{item.GROUP_ID}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              <!--------------------  File Notes ---------------------------->\r\n\r\n              <h5>File Notes</h5>\r\n              <div class=\"table-responsive mb-md-5\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th>Ref. Date</th>\r\n                      <th>Account#</th>\r\n                      <th>Comments</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{{obj.report.ROOT.FILE_NOTES.REF_DATE}}</td>\r\n                      <td>{{obj.report.ROOT.FILE_NOTES.ACCT_NO}}</td>\r\n                      <td>{{obj.report.ROOT.FILE_NOTES.COMMENTS}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              <!--------------- CCP ------------------------------------>\r\n\r\n              <h5>CCP</h5>\r\n              <div class=\"table-responsive\" *ngFor=\"let master of obj.report.ROOT.CCP_MASTER\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th>Member, Branch</th>\r\n                      <th>Account #</th>\r\n                      <th>Term, TY, ST</th>\r\n                      <th>Amount Disbursed</th>\r\n                      <th>Open Date</th>\r\n                      <th>Maturity Date</th>\r\n                      <th>AC</th>\r\n                      <th>Status Date</th>\r\n                      <th>Last Payment</th>\r\n                      <th>OverDue Amount</th>\r\n                      <th>Outstanding Balnace</th>\r\n                      <th>Payment Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{{master.MEM_NAME}},{{master.SUBBRN_NAME}}</td>\r\n                      <td>{{master.ACCT_NO}}</td>\r\n                      <td>{{master.TERM}}, {{master.ACCT_TY}}, {{master.ACCT_STATUS}}</td>\r\n                      <td>{{master.LIMIT}}</td>\r\n                      <td>{{master.OPEN_DATE}}</td>\r\n                      <td>{{master.MATURITY_DATE}}</td>\r\n                      <td>{{master.ACCT_TY}}</td>\r\n                      <td>{{master.STATUS_DATE}}</td>\r\n                      <td>{{master.LAST_PAYMENT}}</td>\r\n                      <td>{{master.OVERDUEAMOUNT}}</td>\r\n                      <td>{{master.BALANCE}}</td>\r\n                      <td>{{master.PAYMENT_STATUS}}</td>\r\n                    </tr>\r\n                    \r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <hr style=\"margin-top: 0rem;margin-bottom: 0.5rem;\">\r\n              <div class=\"table-responsive mb-md-5\" *ngFor=\"let master of obj.report.ROOT.CCP_MASTER\">\r\n                <table class=\"table\">\r\n                    <tr >\r\n                      <td *ngFor=\"let detailhdr of master.CCP_DETAIL\">{{getFormatedmonth(detailhdr.STATUS_MONTH)}}</td>\r\n                    </tr>\r\n                    <tr >\r\n                      <td *ngFor=\"let detailsts of master.CCP_DETAIL\">{{detailsts.PAYMENT_STATUS}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              <!---------------------- Deliquency Summary ---------------------------------->\r\n\r\n              <h5>Delinquency Summary (12 Months)</h5>\r\n              <div class=\"table-responsive mb-md-5\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th>Member, Branch</th>\r\n                      <th>AC Type</th>\r\n                      <th>Amount Disbursed</th>\r\n                      <th>A/C Status</th>\r\n                      <th>OK</th>\r\n                      <th>X</th>\r\n                      <th>30+</th>\r\n                      <th>60+</th>\r\n                      <th>90+</th>\r\n                      <th>120+</th>\r\n                      <th>150+</th>\r\n                      <th>180+</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let summary of ccpList\">\r\n                      <td>{{summary.MEM_NAME}}, {{SUBBRN_NAME}}</td>\r\n                      <td>{{summary.ACCT_TY}}</td>\r\n                      <td>{{summary.OVERDUEAMOUNT}}</td>\r\n                      <td>{{summary.ACCT_STATUS}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.OK}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.X}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.P30}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.P60}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.P90}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.P120}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.P150}}</td>\r\n                      <td>{{summary.CCP_SUMMARY.P180}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n\r\n              <!----------------- Credit App ------------------------>\r\n\r\n              <h5>Credit Apps:</h5>\r\n              <div class=\"table-responsive mb-md-5\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th>Member </th>\r\n                      <th>Branch </th>\r\n                      <th>Application Date</th>\r\n                      <th>Application Id</th>\r\n                      <th>Amount </th>\r\n                      <th>TY </th>\r\n                      <th>AC </th>\r\n                      <th>Group Id</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let item of obj.report.ROOT.ENQUIRIES\">\r\n                      <td>{{item.MEM_NAME}}</td>\r\n                      <td>{{item.SUBBRN_NAME}}</td>\r\n                      <td>{{item.REFERENCE_DATE}}</td>\r\n                      <td>{{item.REFERENCE_NO}}</td>\r\n                      <td>{{item.AMOUNT}}</td>\r\n                      <td>{{item.ACCT_TY}}</td>\r\n                      <td>{{item.ASSOC_TY}}</td>\r\n                      <td>-</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-min\">Ok</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" (click)=\"cancelFetchClick()\">Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!----------------------------      END FETCH MFCIB                 --------------------------->\r\n\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.ts ***!
  \**************************************************************************/
/*! exports provided: MY_FORMATS, MFCIBComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MFCIBComponent", function() { return MFCIBComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_models_mfcib_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/models/mfcib.model */ "./src/app/shared/models/mfcib.model.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_11__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var moment = moment__WEBPACK_IMPORTED_MODULE_11__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var MFCIBComponent = /** @class */ (function () {
    function MFCIBComponent(router, fb, loanService, spinner, breadcrumbProvider, toaster) {
        var _this = this;
        this.router = router;
        this.fb = fb;
        this.loanService = loanService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.obj = {
            "report": {
                "ROOT": {
                    "CCP_SUMMARY": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "SEQ_NO": 26096087,
                            "P90": "-",
                            "X": "-",
                            "P150": "-",
                            "P120": "-",
                            "P60": "-",
                            "OK": 9,
                            "P30": "-",
                            "P180": "-"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "SEQ_NO": 5288909,
                            "P90": "-",
                            "X": "-",
                            "P150": "-",
                            "P120": "-",
                            "P60": "-",
                            "OK": "-",
                            "P30": "-",
                            "P180": "-"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "SEQ_NO": 5165623,
                            "P90": "-",
                            "X": "-",
                            "P150": "-",
                            "P120": "-",
                            "P60": "-",
                            "OK": "-",
                            "P30": "-",
                            "P180": "-"
                        }
                    ],
                    "INDIVIDUAL_DETAIL": {
                        "CREATION_DATE": "17/10/2005",
                        "NIC": "",
                        "FATHER_HUSBAND_MNAME": "",
                        "IS_SELF": "Y",
                        "LAST_NAME": "BOKHARI",
                        "FIRST_NAME": "FARAH",
                        "FILE_NO": 58852626,
                        "TRANX_NO": 545107247,
                        "FATHER_HUSBAND_FNAME": "NBHJCK",
                        "DOB": "09/01/1960",
                        "GENDER": "Female",
                        "MIDDLE_NAME": "",
                        "CNIC": 3220320112278,
                        "PROFESSION": "",
                        "TRANX_DATE": "29/06/2019",
                        "FATHER_HUSBAND_LNAME": "BPUVLJV",
                        "REFERENCE_NO": 24320094496442,
                        "MAKER": "MAKE",
                        "CHECKER": "CHK"
                    },
                    "EMPLOYER_INFORMATION": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "EMPLOYER": "GOVERNMENT SCHOOL",
                            "REPORTED_ON": "03/07/2015",
                            "SELF_EMPLOYED": "NO",
                            "CITY": "LAYYAH",
                            "SEQ_NO": "Previous",
                            "DESIGNATION": "HEAD MASTER",
                            "ADDRESS": "GOVT GIRLS H/S JESAL KALSRA",
                            "PHONE2": "",
                            "PHONE1": 3008767816
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "EMPLOYER": "GOVERNMENT SCHOOL",
                            "REPORTED_ON": "15/12/2015",
                            "SELF_EMPLOYED": "NO",
                            "CITY": "LAYYAH",
                            "SEQ_NO": "Latest",
                            "DESIGNATION": "HEAD MASTER",
                            "ADDRESS": "GIRLS HIGHER SCONDERY SCHOOL THESIL KLASRA",
                            "PHONE2": "",
                            "PHONE1": 3156544909
                        }
                    ],
                    "CREDIT_SCORE": {
                        "ODDS": "",
                        "FILE_NO": "",
                        "TRANX_NO": "",
                        "SCORE": "",
                        "PROB_OF_DEFALUT": "",
                        "PERCENTILE_RISK": "",
                        "SBP_RISK_LEVEL": ""
                    },
                    "CCP_DETAIL": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "072018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "082018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "092018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": 102018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": 112018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": 122018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "012019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "022019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "032019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "042019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "052019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "062019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "072017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "082017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "092017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 102017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 112017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 122017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "012018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "022018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "032018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "042018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "052018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "062018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "072018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "082018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "092018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 102018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 112018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 122018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "012019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "022019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "032019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "042019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "052019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "062019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "072017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "082017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "092017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 102017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 112017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 122017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "012018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "022018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "032018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "042018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "052018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "062018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "072018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "082018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "092018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 102018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 112018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 122018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "012019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "022019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "032019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "042019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "052019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "062019"
                        }
                    ],
                    "REPORT_MESSAGE": {
                        "FILE_NO": "",
                        "MESSAGE": "",
                        "TRANX_NO": ""
                    },
                    "FILE_NOTES": {
                        "FILE_NO": "-",
                        "TRANX_NO": "-",
                        "REF_DATE": "-",
                        "COMMENTS": "-",
                        "ACCT_NO": "-"
                    },
                    "HOME_INFORMATION": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REPORTED_ON": "20/08/2018",
                            "CITY": "LAYYAH",
                            "SEQ_NO": "Previous",
                            "ADDRESS": "MIHLA SADAT DR IZHAR WALI GALI",
                            "PHONE2": "",
                            "PHONE1": ""
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REPORTED_ON": "29/06/2019",
                            "CITY": "LAHORE",
                            "SEQ_NO": "Latest",
                            "ADDRESS": "45, 5, NIL, NEAR MASQ",
                            "PHONE2": "",
                            "PHONE1": 4235555588
                        }
                    ],
                    "CCP_SUMMARY_TOTAL": {
                        "FILE_NO": 58852626,
                        "TRANX_NO": 545107247,
                        "P90": 0,
                        "X": 0,
                        "P150": 0,
                        "P120": 0,
                        "P60": 0,
                        "OK": 9,
                        "P30": 0,
                        "P180": 0
                    },
                    "REVIEW": {
                        "REVIEWS": "",
                        "FILE_NO": "",
                        "TRANX_NO": "",
                        "MEMBER": ""
                    },
                    "ENQUIRIES": [
                        {
                            "ACCT_TY": "IN",
                            "CURRENCY": "PKR",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REFERENCE_DATE": "29/06/2019",
                            "ASSOC_TY": "PRN",
                            "AMOUNT": 90000,
                            "MEM_NAME": "KASHF",
                            "SEPARATE_DATE": "",
                            "CO_BORROWER": "-",
                            "SUBBRN_NAME": "THOKAR",
                            "REFERENCE_NO": 24320094496442
                        },
                        {
                            "ACCT_TY": "IN",
                            "CURRENCY": "PKR",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REFERENCE_DATE": "28/06/2019",
                            "ASSOC_TY": "PRN",
                            "AMOUNT": 50000,
                            "MEM_NAME": "KASHF",
                            "SEPARATE_DATE": "",
                            "CO_BORROWER": "-",
                            "SUBBRN_NAME": "THOKAR",
                            "REFERENCE_NO": 24320094496441
                        },
                        {
                            "ACCT_TY": "IN",
                            "CURRENCY": "PKR",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REFERENCE_DATE": "19/07/2018",
                            "ASSOC_TY": "PRN",
                            "AMOUNT": 40000,
                            "MEM_NAME": "KASHF",
                            "SEPARATE_DATE": "",
                            "CO_BORROWER": "-",
                            "SUBBRN_NAME": "KOT SULTAN",
                            "REFERENCE_NO": 31300537281
                        }
                    ],
                    "CCP_MASTER": [
                        {
                            "CURRENCY": "",
                            "CCP_SUMMARY": {
                                "FILE_NO": 58852626,
                                "TRANX_NO": 545107247,
                                "SEQ_NO": 26096087,
                                "P90": "-",
                                "X": "-",
                                "P150": "-",
                                "P120": "-",
                                "P60": "-",
                                "OK": 9,
                                "P30": "-",
                                "P180": "-"
                            },
                            "LIMIT": 40000,
                            "TERM": "INT",
                            "MATURITY_DATE": "31/07/2019",
                            "STATUS_DATE": "30/04/2019",
                            "OVERDUEAMOUNT": "",
                            "ACCT_NO": 3130000544,
                            "CCP_DETAIL": [
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "072018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "082018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "092018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": 102018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": 112018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": 122018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "012019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "022019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "032019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "042019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "052019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "062019"
                                }
                            ],
                            "HIGH_CREDIT": "",
                            "BALANCE": 12000,
                            "ACCT_TY": "IN",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "LAST_PAYMENT": 4000,
                            "SEQ_NO": 26096087,
                            "ACCT_STATUS": "OPEN",
                            "MEM_NAME": "KASHF",
                            "OPEN_DATE": "31/07/2018",
                            "SUBBRN_NAME": "KOT SULTAN",
                            "CO-BORROWER": "PRN"
                        },
                        {
                            "CURRENCY": "PKR",
                            "CCP_SUMMARY": {
                                "FILE_NO": 58852626,
                                "TRANX_NO": 545107247,
                                "SEQ_NO": 5288909,
                                "P90": "-",
                                "X": "-",
                                "P150": "-",
                                "P120": "-",
                                "P60": "-",
                                "OK": "-",
                                "P30": "-",
                                "P180": "-"
                            },
                            "LIMIT": 1000000,
                            "TERM": "INT",
                            "MATURITY_DATE": "",
                            "STATUS_DATE": "31/12/2016",
                            "OVERDUEAMOUNT": 22082,
                            "ACCT_NO": "-",
                            "CCP_DETAIL": [
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "072017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "082017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "092017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 102017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 112017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 122017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "012018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "022018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "032018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "042018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "052018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "062018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "072018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "082018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "092018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 102018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 112018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 122018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "012019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "022019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "032019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "042019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "052019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "062019"
                                }
                            ],
                            "HIGH_CREDIT": "",
                            "BALANCE": 872194,
                            "ACCT_TY": "PL",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "30+",
                            "LAST_PAYMENT": 33972,
                            "SEQ_NO": 5288909,
                            "ACCT_STATUS": "OPEN",
                            "MEM_NAME": "Private",
                            "OPEN_DATE": "25/11/2015",
                            "SUBBRN_NAME": "",
                            "CO-BORROWER": "PRN"
                        },
                        {
                            "CURRENCY": "PKR",
                            "CCP_SUMMARY": {
                                "FILE_NO": 58852626,
                                "TRANX_NO": 545107247,
                                "SEQ_NO": 5165623,
                                "P90": "-",
                                "X": "-",
                                "P150": "-",
                                "P120": "-",
                                "P60": "-",
                                "OK": "-",
                                "P30": "-",
                                "P180": "-"
                            },
                            "LIMIT": 878000,
                            "TERM": "INT",
                            "MATURITY_DATE": "",
                            "STATUS_DATE": "30/11/2015",
                            "OVERDUEAMOUNT": "",
                            "ACCT_NO": "-",
                            "CCP_DETAIL": [
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "072017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "082017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "092017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 102017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 112017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 122017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "012018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "022018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "032018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "042018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "052018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "062018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "072018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "082018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "092018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 102018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 112018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 122018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "012019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "022019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "032019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "042019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "052019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "062019"
                                }
                            ],
                            "HIGH_CREDIT": "",
                            "BALANCE": 0,
                            "ACCT_TY": "PL",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "LAST_PAYMENT": 0,
                            "SEQ_NO": 5165623,
                            "ACCT_STATUS": "CLOSE",
                            "MEM_NAME": "Private",
                            "OPEN_DATE": "31/12/2013",
                            "SUBBRN_NAME": "",
                            "CO-BORROWER": "PRN"
                        }
                    ],
                    "DEFAULTS": [
                        {
                            "ASSOC_TY": "-",
                            "ORG_CURRENCY": "-",
                            "UPD_CURRENCY": "-",
                            "UPD_STATUS": "-",
                            "GROUP_ID": "-",
                            "FILE_NO": "-",
                            "TRANX_NO": "-",
                            "ORG_ACCT_TY": "-",
                            "ORG_STATUS_DATE": "-",
                            "ORG_STATUS": "-",
                            "ORG_AMOUNT": "-",
                            "UPD_STATUS_DATE": "-",
                            "UPD_ACCT_NO": "-",
                            "ORG_ACCT_NO": "-",
                            "MEM_NAME": "-",
                            "UPD_ACCT_TY": "-",
                            "UPD_RTR": "-",
                            "ORG_RTR": "-",
                            "UPD_AMOUNT": "-",
                            "SUBBRN_NAME": "-"
                        }
                    ]
                },
                "status": "CR"
            },
            "status": {
                "ROOT": {
                    "CCP_SUMMARY": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "SEQ_NO": 26096087,
                            "P90": "-",
                            "X": "-",
                            "P150": "-",
                            "P120": "-",
                            "P60": "-",
                            "OK": 9,
                            "P30": "-",
                            "P180": "-"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "SEQ_NO": 5288909,
                            "P90": "-",
                            "X": "-",
                            "P150": "-",
                            "P120": "-",
                            "P60": "-",
                            "OK": "-",
                            "P30": "-",
                            "P180": "-"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "SEQ_NO": 5165623,
                            "P90": "-",
                            "X": "-",
                            "P150": "-",
                            "P120": "-",
                            "P60": "-",
                            "OK": "-",
                            "P30": "-",
                            "P180": "-"
                        }
                    ],
                    "INDIVIDUAL_DETAIL": {
                        "CREATION_DATE": "17/10/2005",
                        "NIC": "",
                        "FATHER_HUSBAND_MNAME": "",
                        "IS_SELF": "Y",
                        "LAST_NAME": "BOKHARI",
                        "FIRST_NAME": "FARAH",
                        "FILE_NO": 58852626,
                        "TRANX_NO": 545107247,
                        "FATHER_HUSBAND_FNAME": "NBHJCK",
                        "DOB": "09/01/1960",
                        "GENDER": "Female",
                        "MIDDLE_NAME": "",
                        "CNIC": 3220320112278,
                        "PROFESSION": "",
                        "TRANX_DATE": "29/06/2019",
                        "FATHER_HUSBAND_LNAME": "BPUVLJV",
                        "REFERENCE_NO": 24320094496442,
                        "MAKER": "MAKE",
                        "CHECKER": "CHK"
                    },
                    "EMPLOYER_INFORMATION": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "EMPLOYER": "GOVERNMENT SCHOOL",
                            "REPORTED_ON": "03/07/2015",
                            "SELF_EMPLOYED": "NO",
                            "CITY": "LAYYAH",
                            "SEQ_NO": "Previous",
                            "DESIGNATION": "HEAD MASTER",
                            "ADDRESS": "GOVT GIRLS H/S JESAL KALSRA",
                            "PHONE2": "",
                            "PHONE1": 3008767816
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "EMPLOYER": "GOVERNMENT SCHOOL",
                            "REPORTED_ON": "15/12/2015",
                            "SELF_EMPLOYED": "NO",
                            "CITY": "LAYYAH",
                            "SEQ_NO": "Latest",
                            "DESIGNATION": "HEAD MASTER",
                            "ADDRESS": "GIRLS HIGHER SCONDERY SCHOOL THESIL KLASRA",
                            "PHONE2": "",
                            "PHONE1": 3156544909
                        }
                    ],
                    "CREDIT_SCORE": {
                        "ODDS": "",
                        "FILE_NO": "",
                        "TRANX_NO": "",
                        "SCORE": "",
                        "PROB_OF_DEFALUT": "",
                        "PERCENTILE_RISK": "",
                        "SBP_RISK_LEVEL": ""
                    },
                    "CCP_DETAIL": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "072018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "082018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "092018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": 102018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": 112018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": 122018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "012019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "022019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "032019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "042019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "052019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 26096087,
                            "STATUS_MONTH": "062019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "072017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "082017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "092017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 102017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 112017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 122017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "012018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "022018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "032018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "042018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "052018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "062018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "072018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "082018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "092018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 102018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 112018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": 122018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "012019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "022019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "032019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "042019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "052019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5288909,
                            "STATUS_MONTH": "062019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "072017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "082017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "092017"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 102017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 112017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 122017
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "012018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "022018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "032018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "042018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "052018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "062018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "072018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "082018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "092018"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 102018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 112018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": 122018
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "012019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "022019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "032019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "042019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "052019"
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "-",
                            "SEQ_NO": 5165623,
                            "STATUS_MONTH": "062019"
                        }
                    ],
                    "REPORT_MESSAGE": {
                        "FILE_NO": "",
                        "MESSAGE": "",
                        "TRANX_NO": ""
                    },
                    "FILE_NOTES": {
                        "FILE_NO": "",
                        "TRANX_NO": "",
                        "REF_DATE": "",
                        "COMMENTS": "",
                        "ACCT_NO": ""
                    },
                    "HOME_INFORMATION": [
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REPORTED_ON": "20/08/2018",
                            "CITY": "LAYYAH",
                            "SEQ_NO": "Previous",
                            "ADDRESS": "MIHLA SADAT DR IZHAR WALI GALI",
                            "PHONE2": "",
                            "PHONE1": ""
                        },
                        {
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REPORTED_ON": "29/06/2019",
                            "CITY": "LAHORE",
                            "SEQ_NO": "Latest",
                            "ADDRESS": "45, 5, NIL, NEAR MASQ",
                            "PHONE2": "",
                            "PHONE1": 4235555588
                        }
                    ],
                    "CCP_SUMMARY_TOTAL": {
                        "FILE_NO": 58852626,
                        "TRANX_NO": 545107247,
                        "P90": 0,
                        "X": 0,
                        "P150": 0,
                        "P120": 0,
                        "P60": 0,
                        "OK": 9,
                        "P30": 0,
                        "P180": 0
                    },
                    "REVIEW": {
                        "REVIEWS": "",
                        "FILE_NO": "",
                        "TRANX_NO": "",
                        "MEMBER": ""
                    },
                    "ENQUIRIES": [
                        {
                            "ACCT_TY": "IN",
                            "CURRENCY": "PKR",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REFERENCE_DATE": "29/06/2019",
                            "ASSOC_TY": "PRN",
                            "AMOUNT": 90000,
                            "MEM_NAME": "KASHF",
                            "SEPARATE_DATE": "",
                            "CO_BORROWER": "-",
                            "SUBBRN_NAME": "THOKAR",
                            "REFERENCE_NO": 24320094496442
                        },
                        {
                            "ACCT_TY": "IN",
                            "CURRENCY": "PKR",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REFERENCE_DATE": "28/06/2019",
                            "ASSOC_TY": "PRN",
                            "AMOUNT": 50000,
                            "MEM_NAME": "KASHF",
                            "SEPARATE_DATE": "",
                            "CO_BORROWER": "-",
                            "SUBBRN_NAME": "THOKAR",
                            "REFERENCE_NO": 24320094496441
                        },
                        {
                            "ACCT_TY": "IN",
                            "CURRENCY": "PKR",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "REFERENCE_DATE": "19/07/2018",
                            "ASSOC_TY": "PRN",
                            "AMOUNT": 40000,
                            "MEM_NAME": "KASHF",
                            "SEPARATE_DATE": "",
                            "CO_BORROWER": "-",
                            "SUBBRN_NAME": "KOT SULTAN",
                            "REFERENCE_NO": 31300537281
                        }
                    ],
                    "CCP_MASTER": [
                        {
                            "CURRENCY": "",
                            "CCP_SUMMARY": {
                                "FILE_NO": 58852626,
                                "TRANX_NO": 545107247,
                                "SEQ_NO": 26096087,
                                "P90": "-",
                                "X": "-",
                                "P150": "-",
                                "P120": "-",
                                "P60": "-",
                                "OK": 9,
                                "P30": "-",
                                "P180": "-"
                            },
                            "LIMIT": 40000,
                            "TERM": "INT",
                            "MATURITY_DATE": "31/07/2019",
                            "STATUS_DATE": "30/04/2019",
                            "OVERDUEAMOUNT": "",
                            "ACCT_NO": 3130000544,
                            "CCP_DETAIL": [
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "072018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "082018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "092018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": 102018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": 112018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": 122018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "012019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "022019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "032019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "OK",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "042019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "052019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 26096087,
                                    "STATUS_MONTH": "062019"
                                }
                            ],
                            "HIGH_CREDIT": "",
                            "BALANCE": 12000,
                            "ACCT_TY": "IN",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "LAST_PAYMENT": 4000,
                            "SEQ_NO": 26096087,
                            "ACCT_STATUS": "OPEN",
                            "MEM_NAME": "KASHF",
                            "OPEN_DATE": "31/07/2018",
                            "SUBBRN_NAME": "KOT SULTAN",
                            "CO-BORROWER": "PRN"
                        },
                        {
                            "CURRENCY": "PKR",
                            "CCP_SUMMARY": {
                                "FILE_NO": 58852626,
                                "TRANX_NO": 545107247,
                                "SEQ_NO": 5288909,
                                "P90": "-",
                                "X": "-",
                                "P150": "-",
                                "P120": "-",
                                "P60": "-",
                                "OK": "-",
                                "P30": "-",
                                "P180": "-"
                            },
                            "LIMIT": 1000000,
                            "TERM": "INT",
                            "MATURITY_DATE": "",
                            "STATUS_DATE": "31/12/2016",
                            "OVERDUEAMOUNT": 22082,
                            "ACCT_NO": "-",
                            "CCP_DETAIL": [
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "072017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "082017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "092017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 102017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 112017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 122017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "012018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "022018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "032018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "042018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "052018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "062018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "072018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "082018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "092018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 102018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 112018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": 122018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "012019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "022019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "032019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "042019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "052019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5288909,
                                    "STATUS_MONTH": "062019"
                                }
                            ],
                            "HIGH_CREDIT": "",
                            "BALANCE": 872194,
                            "ACCT_TY": "PL",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "30+",
                            "LAST_PAYMENT": 33972,
                            "SEQ_NO": 5288909,
                            "ACCT_STATUS": "OPEN",
                            "MEM_NAME": "Private",
                            "OPEN_DATE": "25/11/2015",
                            "SUBBRN_NAME": "",
                            "CO-BORROWER": "PRN"
                        },
                        {
                            "CURRENCY": "PKR",
                            "CCP_SUMMARY": {
                                "FILE_NO": 58852626,
                                "TRANX_NO": 545107247,
                                "SEQ_NO": 5165623,
                                "P90": "-",
                                "X": "-",
                                "P150": "-",
                                "P120": "-",
                                "P60": "-",
                                "OK": "-",
                                "P30": "-",
                                "P180": "-"
                            },
                            "LIMIT": 878000,
                            "TERM": "INT",
                            "MATURITY_DATE": "",
                            "STATUS_DATE": "30/11/2015",
                            "OVERDUEAMOUNT": "",
                            "ACCT_NO": "-",
                            "CCP_DETAIL": [
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "072017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "082017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "092017"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 102017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 112017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 122017
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "012018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "022018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "032018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "042018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "052018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "062018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "072018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "082018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "092018"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 102018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 112018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": 122018
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "012019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "022019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "032019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "042019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "052019"
                                },
                                {
                                    "FILE_NO": 58852626,
                                    "TRANX_NO": 545107247,
                                    "PAYMENT_STATUS": "-",
                                    "SEQ_NO": 5165623,
                                    "STATUS_MONTH": "062019"
                                }
                            ],
                            "HIGH_CREDIT": "",
                            "BALANCE": 0,
                            "ACCT_TY": "PL",
                            "FILE_NO": 58852626,
                            "TRANX_NO": 545107247,
                            "PAYMENT_STATUS": "OK",
                            "LAST_PAYMENT": 0,
                            "SEQ_NO": 5165623,
                            "ACCT_STATUS": "CLOSE",
                            "MEM_NAME": "Private",
                            "OPEN_DATE": "31/12/2013",
                            "SUBBRN_NAME": "",
                            "CO-BORROWER": "PRN"
                        }
                    ],
                    "DEFAULTS": [
                        {
                            "ASSOC_TY": "",
                            "ORG_CURRENCY": "",
                            "UPD_CURRENCY": "",
                            "UPD_STATUS": "",
                            "GROUP_ID": "",
                            "FILE_NO": "",
                            "TRANX_NO": "",
                            "ORG_ACCT_TY": "",
                            "ORG_STATUS_DATE": "",
                            "ORG_STATUS": "",
                            "ORG_AMOUNT": "",
                            "UPD_STATUS_DATE": "",
                            "UPD_ACCT_NO": "",
                            "ORG_ACCT_NO": "",
                            "MEM_NAME": "",
                            "UPD_ACCT_TY": "",
                            "UPD_RTR": "",
                            "ORG_RTR": "",
                            "UPD_AMOUNT": "",
                            "SUBBRN_NAME": ""
                        }
                    ]
                },
                "status": "CR"
            }
        };
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.formSaved = true;
        this.isEdit = false;
        this.hide = true;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_7__["MyErrorStateMatcher"]();
        this.hasError = function (controlName, errorName) {
            return _this.mfcibForm.controls[controlName].hasError(errorName);
        };
        //  Start FETCH MFCIB
        this.mfcibDoc = null;
        // End  MFCIB Form
        this.deliqSumm = this.obj.report.ROOT.CCP_SUMMARY;
        this.indivInfo = this.obj.report.ROOT.INDIVIDUAL_DETAIL;
        this.crdtApp = this.obj.report.ROOT.ENQUIRIES;
        this.ccpList = this.obj.report.ROOT.CCP_MASTER;
        this.fileNotes = this.obj.report.ROOT.FILE_NOTES;
        this.defaults = this.obj.report.ROOT.DEFAULTS;
    }
    MFCIBComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.model = JSON.parse(sessionStorage.getItem('model'));
        this.mfcibForm = this.fb.group({
            appId: [this.model.loanAppSeq, _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            memCod: ['706', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            ctrlBrnchCod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            sbBrnchCod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            chkUsrNam: ['CWEB', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            mkUsrNam: ['MWEB', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            mkrpas: [''],
            cnic: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            nicPass: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            frstNam: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            midNam: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            lstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            gen: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            dob: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            fhfstNam: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            fhMidNam: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            fhLstNam: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            ctDis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            addr: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            phnum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            cellNum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            emailAdd: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            amtTyp: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empCmpNam: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empOwnStat: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empBusCat: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empAdd: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empCtDis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empPhNum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empCelNum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            empEmlAdd: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            gpId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            assType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
            amnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_9__["Validators"].required],
        });
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem("basicCrumbs"));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, "/loan-origination/app/" + element.formUrl, element.isSaved);
        });
        var now = new Date();
        // this.today = date.getFullYear() +"-"+ (date.getMonth()+1) +"-"+ date.getDate();
        now = new Date();
        this.spinner.hide();
        var month;
        if ((now.getMonth() + 1) < 10) {
            month = '0' + (now.getMonth() + 1);
        }
        else {
            month = '' + (now.getMonth() + 1);
        }
        var day;
        if ((now.getDate() + 1) < 10) {
            day = '0' + (now.getDate());
        }
        else {
            day = '' + (now.getDate());
        }
        var year = now.getFullYear();
        this.today = year + '-' + month + '-' + day;
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        this.spinner.hide();
        this.mfcibLoan = new _shared_models_mfcib_model__WEBPACK_IMPORTED_MODULE_3__["MFCIBLoan"](this.model.loanSeq, this.model.formSeq);
        this.mfcibLoan.clientSeq = this.model.clientSeq;
        if (sessionStorage.getItem('editLoan') === 'true') {
            this.formSaved = true;
            this.loanService.getMfcibLoans(this.model.loanSeq).subscribe(function (res) {
                _this.model.mfcibArray = res;
                res.forEach(function (obj) {
                    if (obj.loanCompletionDate) {
                        var array = obj.loanCompletionDate.split('T', 1);
                        console.log(array.length);
                        if (array.length) {
                            obj.loanCompletionDate = array[0];
                        }
                    }
                });
                console.log(res);
                console.log(_this.model.mfcibArray);
            }, function (error) {
                console.log('err', error);
            });
        }
    };
    MFCIBComponent.prototype.onSave = function () {
        var _this = this;
        if (this.model.forms) {
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    forms.isSaved = true;
                }
            });
        }
        sessionStorage.setItem('model', JSON.stringify(this.model));
    };
    MFCIBComponent.prototype.continueClicked = function () {
        var _this = this;
        console.log(this.model.forms);
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    MFCIBComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedMFCIB', this.formSaved.toString());
    };
    MFCIBComponent.prototype.onEditClicked = function (loan) {
        this.mfcibLoan = JSON.parse(JSON.stringify(loan));
        this.mfcibLoan.index = this.model.mfcibArray.indexOf(loan);
        $('#Addmfcib').modal('show');
        this.isEdit = true;
    };
    MFCIBComponent.prototype.onAddClick = function () {
        this.mfcibLoan = new _shared_models_mfcib_model__WEBPACK_IMPORTED_MODULE_3__["MFCIBLoan"](this.model.loanSeq, this.model.formSeq);
        this.isEdit = false;
        this.mfcibLoan.clientSeq = this.model.clientSeq;
        $('#Addmfcib').modal('show');
    };
    MFCIBComponent.prototype.cancelClicked = function () {
        this.mfcibLoan = new _shared_models_mfcib_model__WEBPACK_IMPORTED_MODULE_3__["MFCIBLoan"](this.model.loanSeq, this.model.formSeq);
        this.mfcibLoan.clientSeq = this.model.clientSeq;
        $('#Addmfcib').modal('hide');
    };
    MFCIBComponent.prototype.deleteItem = function (item) {
        $('#deleteConfirmation').modal('show');
        this.itemToBeDeleted = item;
    };
    MFCIBComponent.prototype.confirmDelete = function () {
        var _this = this;
        this.spinner.show();
        console.log(this.itemToBeDeleted.mfcibSeq);
        this.loanService.deleteMfcibLoan(this.itemToBeDeleted.mfcibSeq).subscribe(function (res) {
            _this.spinner.hide();
            $('#deleteConfirmation').modal('hide');
            console.log(res);
            console.log(_this.model.mfcibArray);
            _this.toaster.success("Deleted");
            // this.removeFromArray(item,this.model.mfcibArray);
            for (var i = 0; i < _this.model.mfcibArray.length; i++) {
                if (_this.model.mfcibArray[i].mfcibSeq === _this.itemToBeDeleted.mfcibSeq) {
                    _this.model.mfcibArray.splice(i, 1);
                }
            }
            sessionStorage.setItem('model', JSON.stringify(_this.model));
        }, function (error) {
            _this.spinner.hide();
            console.log('err', error);
        });
    };
    MFCIBComponent.prototype.removeFromArray = function (item, array) {
        for (var i = 0; i < array.length; i++) {
            if (array[i].mfcibSeq === item.mfcibSeq) {
                array.splice(i, 1);
            }
        }
    };
    MFCIBComponent.prototype.onAddMfcibFormSubmit = function () {
        var _this = this;
        console.log(this.mfcibLoan);
        this.mfcibLoan.loanAppSeq = this.model.loanAppSeq;
        this.mfcibLoan.clientSeq = this.model.clientSeq;
        if (+this.mfcibLoan.totalAmount < +this.mfcibLoan.currentOutStandingAmount) {
            this.toaster.error("Outstanding Amount should not be greater than Total Amount.");
            return;
        }
        this.spinner.show();
        if (this.isEdit) {
            this.loanService.updateMfcibLoan(this.mfcibLoan).subscribe(function (res) {
                _this.spinner.hide();
                _this.toaster.success("Updated");
                console.log(res);
                console.log(_this.model.mfcibArray);
                _this.model.mfcibArray[_this.mfcibLoan.index] = _this.mfcibLoan;
                _this.mfcibLoan = new _shared_models_mfcib_model__WEBPACK_IMPORTED_MODULE_3__["MFCIBLoan"](_this.model.loanSeq, _this.model.formSeq);
                $('#Addmfcib').modal('hide');
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }, function (error) {
                _this.spinner.hide();
                console.log('err', error);
            });
        }
        else {
            console.log(JSON.stringify(this.mfcibLoan));
            this.loanService.saveMfcibLoan(this.mfcibLoan).subscribe(function (res) {
                _this.spinner.hide();
                _this.toaster.success("Saved");
                console.log(res);
                _this.mfcibLoan.mfcibSeq = res.mfcibSeq;
                _this.model.mfcibArray.push(_this.mfcibLoan);
                console.log(_this.model.mfcibArray);
                _this.mfcibLoan = new _shared_models_mfcib_model__WEBPACK_IMPORTED_MODULE_3__["MFCIBLoan"](_this.model.loanSeq, _this.model.formSeq);
                $('#Addmfcib').modal('hide');
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }, function (error) {
                _this.toaster.error(error.error.error, "Error");
                _this.spinner.hide();
                console.log('err', error);
            });
        }
    };
    MFCIBComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    MFCIBComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    MFCIBComponent.prototype.onFetchClick = function () {
        var _this = this;
        this.loanService.getAllDocumentsForLoanApp(this.model.loanAppSeq).subscribe(function (res) {
            console.log(res);
            if (res != null) {
                var docs_1 = [];
                res.forEach(function (d) {
                    if (d.docImg != null && d.docSeq == 0) {
                        docs_1.push(d);
                        _this.mfcibDoc = d.docImg;
                        _this.obj = JSON.parse(d.docImg);
                        console.log(_this.obj);
                        $('#fetchmfcib').modal('show');
                    }
                });
                if (_this.mfcibDoc == null || _this.mfcibDoc == undefined) {
                    $('#mfcibForm').modal('show');
                }
            }
            // this.docs = res;
        });
    };
    MFCIBComponent.prototype.onFetchMFCIB = function () {
    };
    MFCIBComponent.prototype.cancelFetchClick = function () {
        $('#fetchmfcib').modal('hide');
    };
    // END FETCH MFCIB
    //  Start MFCIB Form  
    MFCIBComponent.prototype.onMfcibForm = function () {
        $('#mfcibForm').modal('show');
    };
    MFCIBComponent.prototype.onMFCIBFormSubmit = function () {
        console.log(this.mfcibForm.controls);
    };
    MFCIBComponent.prototype.cancelMfcibForm = function () {
        $('#mfcibForm').modal('hide');
    };
    MFCIBComponent.prototype.getFormatedmonth = function (str) {
        str = "" + str;
        var lastFour = str.substr(str.length - 4);
        var month = str.slice(0, -4);
        return ((month.length == 1) ? "0" + month : month) + "/" + lastFour;
    };
    MFCIBComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-mfcib',
            template: __webpack_require__(/*! ./mfcib.component.html */ "./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.html"),
            styles: [__webpack_require__(/*! ./mfcib.component.css */ "./src/app/pages/loan-origination/loan-app/mfcib/mfcib.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_10__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_8__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_9__["FormBuilder"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_1__["LoanService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_5__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]])
    ], MFCIBComponent);
    return MFCIBComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.css":
/*!***************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.css ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n    <div class=\"container-fluid\">\r\n      <app-breadcrumb></app-breadcrumb>\r\n      <form (ngSubmit)=\"onNomineeFormSubmit()\" #nomineeForm=\"ngForm\">\r\n        <div class=\"content\">\r\n          <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n  \r\n          <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" id=\"nominee-tab\" data-toggle=\"tab\" href=\"#nominee\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Next Of Kin Info</a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div class=\"pt-1 pb-1\" *ngIf=\"hasBoth\">\r\n            <mat-label>Is Nominee Detail Available ?</mat-label>\r\n            <br>\r\n            <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.isNomDetailAvailable\" name=\"isNomDetailAvailable\" required>\r\n              <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">{{disFlag.name}}</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\" *ngIf=\"!model.isNomDetailAvailable\">\r\n            <div class=\"tab-pane fade show active\" id=\"nominee\" role=\"tabpanel\" aria-labelledby=\"nominee-tab\">\r\n              <!-- <div class=\"pt-1 pb-1\" *ngIf=\"!model.selfPDC\">\r\n                <mat-label>Co-borrower Same as Next Of Kin ?</mat-label>\r\n                <br>\r\n                <mat-radio-group [(ngModel)]=\"model.nextOfKin.isSAN\" name=\"isSAN\" required>\r\n                  <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">{{disFlag.name}}</mat-radio-button>\r\n                </mat-radio-group>\r\n              </div> -->\r\n              <div class=\"pt-1 pb-1\">\r\n                <mat-label>Is Next Of Kin same as Client’s Father or Spouse ?</mat-label>\r\n                <br>\r\n                <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.nextOfKin.fatherSpzFlag\" (change)=\"sameAsClientSpaouseChange()\" name=\"fatherSpzFlag\" required>\r\n                  <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">{{disFlag.name}}</mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n              <h6 class=\"colorBlack mt-2 mb-2\">Next Of Kin Detail</h6>\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keyup)=\"cnicPattern($event, 'nextOfKin')\" [required]=\"cnicMandatory\" pattern=\"^[0-9+]{5}-[0-9+]{7}-[0-9]{1}$\" maxlength=\"15\"\r\n                      minlength=\"15\" id=\"cnicNum\" name=\"cnicNum\" [disabled]=\"readonly\" matInput placeholder=\"CNIC\" [(ngModel)]=\"cnicPatternObj.nomCnic\"\r\n                      #nomCnic=\"ngModel\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"nomCnic.invalid\">\r\n                      cnic number is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" [required]=\"cnicMandatory\" name=\"Expiry\" min=\"{{date}}\" id=\"cnicExpryDate\" [(ngModel)]=\"model.nextOfKin.cnicExpryDate\" readonly\r\n                      disabled placeholder=\"CNIC Expiry Date\" [matDatepicker]=\"picker1\" [errorStateMatcher]=\"matcher\" #cnicExpryDate=\"ngModel\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker startView=\"multi-year\" #picker1 disabled=\"false\"></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n  \r\n                <!-- <div class=\"cCol1\">\r\n                  <button class=\"velBtn\" type=\"button\" *ngIf=\"!validated\" [disabled]=\"nomCnic.invalid || model.nextOfKin.cnicExpryDate == ''\" (click)=\"validate()\">Validate with KASHF</button>\r\n                </div> -->\r\n  \r\n              </div>\r\n             \r\n                <div class=\"cRow\">\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyLetters($event)\" required matInput [disabled]=\"readonly && auth.role!='admin'\" id=\"firstName\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" [errorStateMatcher]=\"matcher\"\r\n                        #firstName=\"ngModel\" name=\"firstName\" [(ngModel)]=\"model.nextOfKin.firstName\" placeholder=\"First Name\"\r\n                        [disabled]=\"model.nextOfKin.fatherSpzFlag\">\r\n                      <mat-error *ngIf=\"firstName.invalid\">\r\n                        first name is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyLetters($event)\" value=\"\" id=\"lastName\" name=\"lastName\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\"\r\n                        [errorStateMatcher]=\"matcher\" [(ngModel)]=\"model.nextOfKin.lastName\" placeholder=\"Last Name\" matInput [disabled]=\"readonly && auth.role!='admin'\"\r\n                        #lastName=\"ngModel\" [disabled]=\"model.nextOfKin.fatherSpzFlag\">\r\n                      <mat-error *ngIf=\"lastName.invalid\">\r\n                        last name is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\" *ngIf=\"!model.nextOfKin.fatherSpzFlag\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyLetters($event)\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" id=\"fatherFirstName\" name=\"fatherFirstName\"\r\n                        [(ngModel)]=\"model.nextOfKin.fatherFirstName\" placeholder=\"Father First Name\" matInput [disabled]=\"readonly\">\r\n                      <mat-error *ngIf=\"lastName.invalid\">\r\n                        first name is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\" *ngIf=\"!model.nextOfKin.fatherSpzFlag\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyLetters($event)\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" id=\"fatherLastName\" name=\"fatherLastName\"\r\n                        [(ngModel)]=\"model.nextOfKin.fatherLastName\" placeholder=\"Father Last Name\" matInput [disabled]=\"readonly\">\r\n                      <mat-error *ngIf=\"lastName.invalid\">\r\n                        last name is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1 \">\r\n                    <mat-form-field>\r\n                      <input matInput [disabled]=\"readonly\" (keypress)=\"onlyNumbers($event)\" type=\"text\" required maxlength=\"11\" pattern=\"^[0-9]{11}$\" [errorStateMatcher]=\"matcher\"\r\n                        [(ngModel)]=\"model.nextOfKin.phone\" id=\"phone\" name=\"phone\" placeholder=\"Phone No.\" #phone=\"ngModel\">\r\n                      <mat-error *ngIf=\"phone.invalid\">\r\n                        phone number is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                        <!-- [max]=\"eightenYearsBefore\" [min]=\"minDobYear\" -->\r\n                      <input matInput [disabled]=\"readonly && auth.role!='admin'\" required name=\"dob\" [matDatepicker]=\"picker3\" placeholder=\"Date of birth\"\r\n                        (dateChange)=\"onDOBChange(model.nextOfKin.dob)\" [value]=\"date.value\" [(ngModel)]=\"model.nextOfKin.dob\" readonly\r\n                        disabled>\r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                      <mat-datepicker startView=\"multi-year\" #picker3 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1 \">\r\n                    <mat-form-field>\r\n                      <input matInput [disabled]=\"readonly\" type=\"text\" readonly disabled [(ngModel)]=\"age\" id=\"age\" name=\"age\" placeholder=\"Age\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly\" placeholder=\"Select Gender\" [(ngModel)]=\"model.nextOfKin.genderKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                        name=\"genderKey\" required>\r\n                        <mat-option *ngFor=\"let edu of gender\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"gender\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Gender\"\r\n                    [(ngModel)]=\"model.nextOfKin.genderKey\">\r\n                  </ng-select> -->\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly\" placeholder=\"Select Occupation\" [(ngModel)]=\"model.nextOfKin.occupationKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                        name=\"occupationKey\" required>\r\n                        <mat-option *ngFor=\"let edu of occupation\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"occupation\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Occupation\"\r\n                    [(ngModel)]=\"model.nextOfKin.occupationKey\"></ng-select> -->\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Relation\" [(ngModel)]=\"model.nextOfKin.relationKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                        name=\"relationKey\" required>\r\n                        <mat-option *ngFor=\"let edu of relationType\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"relationType\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Relationship with Client\"\r\n                    [(ngModel)]=\"model.nextOfKin.relationKey\"></ng-select> -->\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Marital Status\" [(ngModel)]=\"model.nextOfKin.maritalStatusKey\" [errorStateMatcher]=\"matcher\"\r\n                        pattern=\"^[1-9]\\d*$\" name=\"maritalStatusKey\" required>\r\n                        <mat-option *ngFor=\"let edu of maritalStatus\" [value]=\"edu.codeKey\">\r\n                          {{edu.codeValue}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- <ng-select [items]=\"maritalStatus\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Marital Status\"\r\n                    [(ngModel)]=\"model.nextOfKin.maritalStatusKey\"></ng-select> -->\r\n                  </div>\r\n                </div>\r\n              \r\n            </div>\r\n          </div>\r\n          <button (click)=\"continueClicked()\" [disabled]=\"!formSaved\" type=\"button\" class=\"btn btn-primary\">Continue</button>\r\n          <button class=\"btn btn-default\" [disabled]=\"(!nomineeForm.form.valid || readonly) && auth.role!='admin'\" type=\"submit\">Save</button>\r\n  \r\n        </div>\r\n      </form>\r\n    </div>\r\n  </main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.ts ***!
  \**************************************************************************************/
/*! exports provided: MY_FORMATS, NextOfKinComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NextOfKinComponent", function() { return NextOfKinComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/models/Nominee.model */ "./src/app/shared/models/Nominee.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/models/CNICPattern.model */ "./src/app/shared/models/CNICPattern.model.ts");
/* harmony import */ var _shared_models_History_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/models/History.model */ "./src/app/shared/models/History.model.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_14__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var moment = moment__WEBPACK_IMPORTED_MODULE_14__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var NextOfKinComponent = /** @class */ (function () {
    function NextOfKinComponent(router, loanService, commonService, spinner, breadcrumbProvider, toaster) {
        this.router = router;
        this.loanService = loanService;
        this.commonService = commonService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.disFlags = [{ name: 'Yes', value: true }, { name: 'No', value: false }];
        this.formSaved = false;
        this.validated = true;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__["MyErrorStateMatcher"]();
        this.history = new _shared_models_History_model__WEBPACK_IMPORTED_MODULE_11__["History"]();
        this.hasNom = false;
        this.hasBoth = false;
        this.cnicPatternObj = new _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_10__["CNICPattern"]();
        this.residenceArray = [];
        this.cnicMandatory = false;
        this.clientPhone = "";
        this.now = new Date();
        this.now.setDate((this.now.getDate() + 1));
        var month;
        if ((this.now.getMonth() + 1) < 10) {
            month = '0' + (this.now.getMonth());
        }
        else {
            month = '' + (this.now.getMonth());
        }
        var day;
        if ((this.now.getDate() + 1) < 10) {
            day = '0' + (this.now.getDate());
        }
        else {
            day = '' + (this.now.getDate());
        }
        var year = this.now.getFullYear();
        var currentDate = year + '-' + month + '-' + day;
        this.date = currentDate;
        this.eightenYearsBefore = new Date((year - 18), month, (+day - 1));
        this.minDobYear = new Date((year - 64), month, (+day + 1));
    }
    NextOfKinComponent.prototype.validate = function () {
        var _this = this;
        if (/^([0-9])\1*$/.test(this.model.nextOfKin.cnicNum)) {
            this.toaster.error("Invalid CNIC", "CNIC Number");
            this.spinner.hide();
            return;
        }
        if (this.model.nextOfKin.cnicExpryDate == undefined || this.model.nextOfKin.cnicExpryDate == '') {
            this.toaster.error("Select CNIC Expiry Date");
            return;
        }
        this.spinner.show();
        this.loanService.validateCNIC(this.model.nextOfKin.cnicNum).subscribe(function (res) {
            _this.spinner.hide();
            console.log(res);
            if (res.client) {
                _this.history = Object.assign(_this.history, res.client, _this.history);
                _this.history.title = "Client";
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else if (res.clientRel) {
                _this.history = Object.assign(_this.history, res.clientRel, _this.history);
                _this.history.title = "Client";
                if (_this.history.type == "1") {
                    _this.history.title = "Nominee";
                }
                else if (_this.history.type == "2") {
                    _this.history.title = "Coborrower";
                }
                else if (_this.history.type == "3") {
                    _this.history.title = "Next-of-Kin";
                }
                else if (_this.history.type == "4") {
                    _this.history.title = "Client Relative";
                }
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else {
                _this.validated = true;
            }
            console.log(_this.history);
        }, function (error) {
            _this.spinner.hide();
        });
        if (+this.model.nextOfKin.cnicNum % 2) {
            this.model.nextOfKin.genderKey = this.findKeyFromValue('MALE', this.gender);
        }
        else {
            this.model.nextOfKin.genderKey = this.findKeyFromValue('FEMALE', this.gender);
        }
    };
    NextOfKinComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedNominee', this.formSaved.toString());
    };
    NextOfKinComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        if (this.model.forms) {
            this.hasBoth = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            _this.hasBoth = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            _this.hasBoth = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (_this.hasBoth) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (_this.hasBoth) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (!this.model.nextOfKin) {
            this.model.nextOfKin = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__["Nominee"]();
        }
        else if (this.model.nextOfKin.cnicNum != null || this.model.nextOfKin.cnicNum != undefined) {
            if (this.model.nextOfKin.cnicNum.length > 0) {
                this.setPattern();
                this.validated = this.model.nextOfKin.isValidated;
                this.clientPhone = this.model.nextOfKin.phone;
                this.age = this.calculateAge(new Date(this.model.nextOfKin.dob));
            }
        }
        this.model.nextOfKin.loanAppSeq = this.model.loanAppSeq;
        this.model.nextOfKin.formSeq = this.model.formSeq;
        this.model.nextOfKin.clientSeq = this.model.clientSeq;
        this.model.nextOfKin.typFlg = 2;
        console.log(this.model.nextOfKin);
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.formSaved = true;
            this.spinner.show();
            this.loanService.getClntRel(this.model.nextOfKin).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                if (res != null && +res.cnicNum != 0) {
                    _this.hasNom = true;
                    _this.validated = true;
                    res.clientSeq = _this.model.clientSeq;
                    _this.model.nextOfKin = res;
                    _this.setPattern();
                    var array = void 0;
                    if (_this.model.nextOfKin.dob) {
                        array = _this.model.nextOfKin.dob.split('T', 1);
                        console.log(array.length);
                        if (array.length) {
                            _this.model.nextOfKin.dob = array[0];
                        }
                    }
                    if (_this.model.nextOfKin.cnicExpryDate) {
                        array = _this.model.nextOfKin.cnicExpryDate.split('T', 1);
                        console.log(array.length);
                        console.log(array[0]);
                        if (array.length) {
                            _this.model.nextOfKin.cnicExpryDate = array[0];
                        }
                    }
                    _this.clientPhone = _this.model.nextOfKin.phone;
                    _this.age = _this.calculateAge(new Date(_this.model.nextOfKin.dob));
                }
                else {
                    _this.hasNom = false;
                    _this.getPreviousClientRel();
                }
            }, function (error) {
                _this.spinner.hide();
                console.log('err', error);
            });
        }
        else if (this.model.nextOfKin.clntRelSeq != undefined && this.model.nextOfKin.clntRelSeq != 0) {
            this.hasNom = true;
            this.validated = true;
            this.clientPhone = this.model.nextOfKin.phone;
            this.age = this.calculateAge(new Date(this.model.nextOfKin.dob));
            this.setPattern();
        }
        else {
            this.hasNom = false;
            this.getPreviousClientRel();
        }
        this.loadLovs();
        this.setPattern();
        if (this.model.nextOfKin.dob)
            this.age = this.calculateAge(new Date(this.model.nextOfKin.dob));
        if (this.model.nextOfKin.phone)
            this.clientPhone = this.model.nextOfKin.phone;
    };
    NextOfKinComponent.prototype.getPreviousClientRel = function () {
        var _this = this;
        this.loanService.getClientRelFromPreviousLoan(this.model.nextOfKin).subscribe(function (res) {
            if (res != null && +res.cnicNum != 0) {
                _this.validated = true;
                res.clientSeq = _this.model.clientSeq;
                res.loanAppSeq = _this.model.loanAppSeq;
                _this.model.nextOfKin = res;
                _this.setPattern();
                var array = void 0;
                if (_this.model.nextOfKin.dob) {
                    array = _this.model.nextOfKin.dob.split('T', 1);
                    console.log(array.length);
                    if (array.length) {
                        _this.model.nextOfKin.dob = array[0];
                    }
                }
                if (_this.model.nextOfKin.cnicExpryDate) {
                    array = _this.model.nextOfKin.cnicExpryDate.split('T', 1);
                    console.log(array.length);
                    console.log(array[0]);
                    if (array.length) {
                        _this.model.nextOfKin.cnicExpryDate = array[0];
                    }
                }
                _this.clientPhone = _this.model.nextOfKin.phone;
                _this.age = _this.calculateAge(new Date(_this.model.nextOfKin.dob));
            }
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, 'Error');
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    NextOfKinComponent.prototype.setPattern = function () {
        var _this = this;
        ///  CNIC Pattern
        if (this.model.nextOfKin.cnicNum == undefined || this.model.nextOfKin.cnicNum == null)
            return;
        this.cnicPatternObj.nomCnic = "";
        var str = this.model.nextOfKin.cnicNum + "";
        var charArray = str.split("");
        charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + '-';
            _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + item;
        });
    };
    NextOfKinComponent.prototype.continueClicked = function () {
        var _this = this;
        if (this.model.isSAN || this.model.selfPDC) {
            // this.router.navigate(['loan-origination/business-appraisal']);
            if (this.model.forms) {
                var i_1 = 0;
                this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 2].formUrl]);
                    }
                    i_1++;
                });
            }
        }
        else {
            if (this.model.forms) {
                var i_2 = 0;
                this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_2 + 1].formUrl]);
                    }
                    i_2++;
                });
            }
            // this.router.navigate(['loan-origination/co-borrower']);
        }
    };
    NextOfKinComponent.prototype.onNomineeFormSubmit = function () {
        var _this = this;
        this.model.nextOfKin.typFlg = 2;
        this.model.nextOfKin.isValidated = this.validated;
        this.spinner.show();
        this.loanService.saveStatus(this.model.clientSeq, this.model.isNomDetailAvailable).subscribe(function (res) {
            if (_this.model.isNomDetailAvailable) {
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = false;
                        }
                    });
                }
            }
            sessionStorage.setItem('model', JSON.stringify(_this.model));
        }, function (error) {
            // this.toaster.error(error.error.error, 'Error');
            // this.spinner.hide();
            console.log('err In Loan Service');
            console.log('err', error);
        });
        if (this.model.isNomDetailAvailable) {
            if (this.model.forms) {
                this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        forms.isSaved = false;
                        _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                    }
                });
            }
            this.formSaved = true;
            sessionStorage.setItem('model', JSON.stringify(this.model));
            this.spinner.hide();
            return;
        }
        if (this.hasNom) {
            console.log('EDIT');
            console.log(this.model.nextOfKin);
            this.model.nextOfKin.loanAppSeq = this.model.loanAppSeq;
            this.loanService.updateClientRel(this.model.nextOfKin).subscribe(function (res) {
                console.log(res);
                _this.model.nextOfKin.clntRelSeq = res.clientRelSeq;
                _this.spinner.hide();
                _this.toaster.success('Saved');
                if (_this.model.isSAN) {
                    _this.model.coBorrower = _this.model.nextOfKin;
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                _this.toaster.error(error.error.error, 'Error');
                _this.spinner.hide();
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            console.log(this.model);
            this.loanService.saveClientRel(this.model.nextOfKin).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                _this.toaster.success('Saved');
                _this.hasNom = true;
                _this.model.nextOfKin.clntRelSeq = res.clntRelSeq;
                if (_this.model.isSAN) {
                    _this.model.coBorrower = _this.model.nextOfKin;
                    if (_this.model.forms) {
                        _this.model.forms.forEach(function (forms) {
                            if (forms.formUrl == 'co-borrower') {
                                forms.isSaved = true;
                                _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                            }
                        });
                    }
                    sessionStorage.setItem('model', JSON.stringify(_this.model));
                }
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                _this.toaster.error(error.error.error, 'Error');
                _this.spinner.hide();
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
    };
    NextOfKinComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["OCCUPATION"]).subscribe(function (res) {
            _this.occupation = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["GENDER"]).subscribe(function (res) {
            _this.gender = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["RELATION_TYPE_NOMINEE"]).subscribe(function (res) {
            _this.relationType = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_9__["MARITAL_STATUS"]).subscribe(function (res) {
            _this.maritalStatus = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    NextOfKinComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    NextOfKinComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    NextOfKinComponent.prototype.sameAsClientSpaouseChange = function () {
        if (this.model.nextOfKin.fatherSpzFlag) {
            if (this.model.fathrFirstName.length) {
                this.model.nextOfKin.firstName = this.model.fathrFirstName;
                this.model.nextOfKin.lastName = this.model.fathrLastName;
            }
            else {
                this.model.nextOfKin.firstName = this.model.spzFirstName;
                this.model.nextOfKin.lastName = this.model.spzLastName;
            }
            this.model.nextOfKin.fatherFirstName = "";
            this.model.nextOfKin.fatherLastName = "";
        }
        else {
            this.model.nextOfKin.firstName = "";
            this.model.nextOfKin.lastName = "";
        }
    };
    NextOfKinComponent.prototype.onDOBChange = function (dob) {
        this.age = this.calculateAge(new Date(dob));
    };
    NextOfKinComponent.prototype.calculateAge = function (birthday) {
        var ageDifMs = Date.now() - birthday.getTime();
        var ageDate = new Date(ageDifMs); // miliseconds from epoch
        return Math.abs(ageDate.getUTCFullYear() - 1970);
    };
    NextOfKinComponent.prototype.cnicPattern = function (event, type) {
        var _this = this;
        if (this.readonly) {
            this.readonly = false;
        }
        console.log(event);
        this.validated = false;
        var dt = this.model.nextOfKin.cnicExpryDate;
        this.model.nextOfKin = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__["Nominee"]();
        this.model.nextOfKin.cnicExpryDate = dt;
        this.age = "";
        if (event.keyCode == 9
            || event.keyCode == 27 || event.keyCode == 13
            || (event.keyCode == 65 && event.ctrlKey === true))
            return;
        if ((event.keyCode < 48 || event.keyCode > 57))
            event.preventDefault();
        var oldSeq = this.model.nextOfKin.clntRelSeq;
        this.model.nextOfKin = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__["Nominee"]();
        this.model.nextOfKin.loanAppSeq = this.model.loanAppSeq;
        this.model.nextOfKin.formSeq = this.model.formSeq;
        this.model.nextOfKin.clientSeq = this.model.clientSeq;
        this.model.nextOfKin.clntRelSeq = oldSeq;
        this.model.nextOfKin.typFlg = 2;
        this.age = "";
        this.clientPhone = "";
        var length = 0;
        if (type == "client") {
            if (this.cnicPatternObj.clientCNIC.length)
                length = this.cnicPatternObj.clientCNIC.length;
            if (length <= 15) {
                this.cnicPatternObj.clientCNIC = this.cnicPatternObj.clientCNIC.replace(/-/g, '');
                var array = this.cnicPatternObj.clientCNIC.split('');
                this.cnicPatternObj.clientCNIC = "";
                this.model.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + "-";
                        }
                        if (_this.cnicPatternObj.clientCNIC.length < 15) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + char;
                            _this.model.cnicNum = _this.model.cnicNum + char;
                        }
                    }
                });
            }
        }
        else if (type == "nextOfKin") {
            if (this.cnicPatternObj.nomCnic.length)
                length = this.cnicPatternObj.nomCnic.length;
            this.cnicPatternObj.nomCnic = this.cnicPatternObj.nomCnic.replace(/-/g, '');
            var array = this.cnicPatternObj.nomCnic.split('');
            this.cnicPatternObj.nomCnic = "";
            this.model.nextOfKin.cnicNum = "";
            array.forEach(function (char, index) {
                var asciiCode = char.charCodeAt(0);
                if (asciiCode >= 48 && asciiCode <= 57) {
                    if (index == 5 || index == 12) {
                        _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + "-";
                    }
                    if (_this.cnicPatternObj.nomCnic.length < 15) {
                        _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + char;
                        _this.model.nextOfKin.cnicNum = _this.model.nextOfKin.cnicNum + char;
                    }
                }
            });
        }
        else if (type == "clientRel") {
            if (this.cnicPatternObj.cobCNIC.length)
                length = this.cnicPatternObj.cobCNIC.length;
            if (length < 15) {
                this.cnicPatternObj.cobCNIC = this.cnicPatternObj.cobCNIC.replace(/-/g, '');
                var array = this.cnicPatternObj.cobCNIC.split('');
                this.cnicPatternObj.cobCNIC = "";
                this.model.clientRel.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + "-";
                        }
                        if (_this.cnicPatternObj.cobCNIC.length < 15) {
                            _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + char;
                            _this.model.clientRel.cnicNum = _this.model.clientRel.cnicNum + char;
                        }
                    }
                });
            }
        }
        console.log(this.model.nextOfKin.cnicNum);
        if (this.model.nextOfKin.cnicNum.length > 0) {
            this.validated = false;
            this.cnicMandatory = true;
        }
        else {
            this.cnicMandatory = false;
            this.validated = true;
        }
    };
    // cnicPattern(event: any, type: any) {
    //   console.log(event)
    //   this.validated = false;
    //   if (event.charCode == 8 || event.charCode == 9
    //     || event.charCode == 27 || event.charCode == 13
    //     || (event.charCode == 65 && event.ctrlKey === true))
    //     return;
    //   if ((event.charCode < 48 || event.charCode > 57))
    //     event.preventDefault();
    //   let length: number = 0;
    //   if (type == "client") {
    //     if (this.cnicPatternObj.clientCNIC.length)
    //       length = this.cnicPatternObj.clientCNIC.length;
    //     if (length < 15) {
    //       if (length == 5 || length == 13)
    //         this.cnicPatternObj.clientCNIC = this.cnicPatternObj.clientCNIC + "-";
    //       this.model.cnicNum = this.cnicPatternObj.clientCNIC.replace(/-/g, '');
    //       this.model.cnicNum = this.model.cnicNum + event.key;
    //     }
    //   } else if (type == "nextOfKin") {
    //     if (this.cnicPatternObj.nomCnic.length)
    //       length = this.cnicPatternObj.nomCnic.length;
    //     if (length < 15) {
    //       if (length == 5 || length == 13)
    //         this.cnicPatternObj.nomCnic = this.cnicPatternObj.nomCnic + "-";
    //       if (this.model.nextOfKin.cnicNum == undefined)
    //         this.model.nextOfKin.cnicNum = "";
    //       this.model.nextOfKin.cnicNum = this.cnicPatternObj.nomCnic.replace(/-/g, '');
    //       this.model.nextOfKin.cnicNum = this.model.nextOfKin.cnicNum + event.key;
    //     }
    //   } else if (type == "co-borrower") {
    //     if (this.cnicPatternObj.cobCNIC.length)
    //       length = this.cnicPatternObj.cobCNIC.length;
    //     if (length < 15) {
    //       if (length == 5 || length == 13)
    //         this.cnicPatternObj.cobCNIC = this.cnicPatternObj.cobCNIC + "-";
    //       this.model.coBorrower.cnicNum = this.cnicPatternObj.cobCNIC.replace(/-/g, '');
    //       this.model.coBorrower.cnicNum = this.model.coBorrower.cnicNum + event.key;
    //     }
    //   }
    // }
    NextOfKinComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue == value) {
                    return array[i].codeKey;
                }
            }
        }
    };
    NextOfKinComponent.prototype.phoneNumber = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
        if (this.clientPhone.length == 0)
            this.clientPhone = "(" + this.clientPhone;
        if (this.clientPhone.length == 5)
            this.clientPhone = this.clientPhone + ")";
        if (this.clientPhone.length < 13) {
            this.model.nextOfKin.phone = this.clientPhone.replace(/[(]/g, '');
            this.model.nextOfKin.phone = this.clientPhone.replace(/[)]/g, '');
            this.model.nextOfKin.phone = this.clientPhone.replace(/ /g, '');
            this.model.nextOfKin.phone = this.model.nextOfKin.phone + event.key;
        }
        console.log(this.model.nextOfKin.phone);
    };
    NextOfKinComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-next-of-kin',
            template: __webpack_require__(/*! ./next-of-kin.component.html */ "./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.html"),
            styles: [__webpack_require__(/*! ./next-of-kin.component.css */ "./src/app/pages/loan-origination/loan-app/next-of-kin/next-of-kin.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_12__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"], _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"]])
    ], NextOfKinComponent);
    return NextOfKinComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/nominee/nominee.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/nominee/nominee.component.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/nominee/nominee.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/nominee/nominee.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <form (ngSubmit)=\"onNomineeFormSubmit()\" #nomineeForm=\"ngForm\">\r\n      <div class=\"content\">\r\n        <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n\r\n        <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" id=\"nominee-tab\" data-toggle=\"tab\" href=\"#nominee\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Nominee Info</a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"pt-1 pb-1\" *ngIf=\"hasBoth\" style=\" margin-left: 2em; \">\r\n          <mat-label>Is Nominee Detail Available ?</mat-label>\r\n          <br>\r\n          <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.isNomDetailAvailable\" name=\"isNomDetailAvailable\" required>\r\n            <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">{{disFlag.name}}</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\" *ngIf=\"model.isNomDetailAvailable\">\r\n          <div class=\"tab-pane fade show active\" id=\"nominee\" role=\"tabpanel\" aria-labelledby=\"nominee-tab\">\r\n            <div class=\"pt-1 pb-1\" *ngIf=\"!model.selfPDC\">\r\n              <mat-label>Is Nominee same as Co-borrower ?</mat-label>\r\n              <br>\r\n              <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.isSAN\" name=\"isSAN\" required (change)=\"changeSAN()\">\r\n                <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">{{disFlag.name}}</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div class=\"pt-1 pb-1\">\r\n              <mat-label>Is Nominee same as Client’s Father or Spouse ?</mat-label>\r\n              <br>\r\n              <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.nominee.fatherSpzFlag\" (change)=\"sameAsClientSpaouseChange()\" name=\"fatherSpzFlag\" required>\r\n                <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">{{disFlag.name}}</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <h6 class=\"colorBlack mt-2 mb-2\">Nominee Detail</h6>\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input [disabled]=\"validated && !readonly\" type=\"text\" (keyup)=\"cnicPattern($event, 'nominee')\" required pattern=\"^[0-9+]{5}-[0-9+]{7}-[0-9]{1}$\" maxlength=\"15\"\r\n                    minlength=\"15\" id=\"cnicNum\" name=\"cnicNum\" matInput placeholder=\"CNIC\" [(ngModel)]=\"cnicPatternObj.nomCnic\"\r\n                    #nomCnic=\"ngModel\" [errorStateMatcher]=\"matcher\">\r\n                  <mat-error *ngIf=\"nomCnic.invalid\">\r\n                    cnic number is\r\n                    <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input [disabled]=\"readonly && auth.role!='admin'\" matInput required name=\"Expiry\" min=\"{{date}}\" id=\"cnicExpryDate\"  (dateChange)=\"onExpChange(model.nominee.cnicExpryDate)\" [(ngModel)]=\"model.nominee.cnicExpryDate\" readonly\r\n                    disabled placeholder=\"CNIC Expiry Date\" [matDatepicker]=\"picker1\" [errorStateMatcher]=\"matcher\" #cnicExpryDate=\"ngModel\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                  <mat-datepicker startView=\"multi-year\" #picker1 disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"cCol1\">\r\n                <button class=\"velBtn\" type=\"button\" *ngIf=\"!validated\" [disabled]=\"nomCnic.invalid || model.nominee.cnicExpryDate == ''\" (click)=\"validate()\">Validate with KASHF</button>\r\n              </div>\r\n\r\n            </div>\r\n            <div *ngIf=\"validated\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" [disabled]=\"readonly && auth.role!='admin'\" (keypress)=\"onlyLetters($event)\" required matInput id=\"firstName\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" [errorStateMatcher]=\"matcher\"\r\n                      #firstName=\"ngModel\" name=\"firstName\" [(ngModel)]=\"model.nominee.firstName\" placeholder=\"First Name\"\r\n                      [disabled]=\"model.nominee.fatherSpzFlag\">\r\n                    <mat-error *ngIf=\"firstName.invalid\">\r\n                      first name is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyLetters($event)\" value=\"\" id=\"lastName\" name=\"lastName\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\"\r\n                      [errorStateMatcher]=\"matcher\" [(ngModel)]=\"model.nominee.lastName\" [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Last Name\" matInput\r\n                      #lastName=\"ngModel\" [disabled]=\"model.nominee.fatherSpzFlag\">\r\n                    <mat-error *ngIf=\"lastName.invalid\">\r\n                      last name is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- *ngIf=\"!model.nominee.fatherSpzFlag\" -->\r\n                <div class=\"cCol1\" >\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyLetters($event)\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" id=\"fatherFirstName\" required name=\"fatherFirstName\"\r\n                      [(ngModel)]=\"model.nominee.fatherFirstName\" [disabled]=\"readonly\" placeholder=\"Father First Name\" matInput>\r\n                    <mat-error *ngIf=\"lastName.invalid\">\r\n                      first name is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- *ngIf=\"!model.nominee.fatherSpzFlag\" -->\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyLetters($event)\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" required id=\"fatherLastName\" name=\"fatherLastName\"\r\n                      [(ngModel)]=\"model.nominee.fatherLastName\"  [disabled]=\"readonly\"placeholder=\"Father Last Name\" matInput>\r\n                    <mat-error *ngIf=\"lastName.invalid\">\r\n                      last name is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput [disabled]=\"readonly\" type=\"text\" (keypress)=\"onlyNumbers($event)\" required maxlength=\"11\" pattern=\"^[0-9]{11}$\" [errorStateMatcher]=\"matcher\"\r\n                      [(ngModel)]=\"model.nominee.phone\" id=\"phone\" name=\"phone\" placeholder=\"Phone No.\" #phone=\"ngModel\">\r\n                    <mat-error *ngIf=\"phone.invalid\">\r\n                      phone number is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input matInput [disabled]=\"readonly && auth.role!='admin'\" required [max]=\"eightenYearsBefore\" [min]=\"minDobYear\" name=\"dob\" [matDatepicker]=\"picker3\" placeholder=\"Date of birth\"\r\n                      (dateChange)=\"onDOBChange(model.nominee.dob)\" [value]=\"date.value\" [(ngModel)]=\"model.nominee.dob\" readonly\r\n                      disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker startView=\"multi-year\" #picker3 disabled=\"false\"></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput [disabled]=\"readonly\" type=\"text\" readonly disabled [(ngModel)]=\"age\" id=\"age\" name=\"age\" placeholder=\"Age\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Select Gender\" [(ngModel)]=\"model.nominee.genderKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                      name=\"genderKey\" required>\r\n                      <mat-option *ngFor=\"let edu of gender\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"gender\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Gender\"\r\n                  [(ngModel)]=\"model.nominee.genderKey\">\r\n                </ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Select Occupation\" [(ngModel)]=\"model.nominee.occupationKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                      name=\"occupationKey\" required>\r\n                      <mat-option *ngFor=\"let edu of occupation\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"occupation\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Occupation\"\r\n                  [(ngModel)]=\"model.nominee.occupationKey\"></ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Relation\" [(ngModel)]=\"model.nominee.relationKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                      name=\"relationKey\" required>\r\n                      <mat-option *ngFor=\"let edu of relationType\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"relationType\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Relationship with Client\"\r\n                  [(ngModel)]=\"model.nominee.relationKey\"></ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Select Marital Status\" [(ngModel)]=\"model.nominee.maritalStatusKey\" [errorStateMatcher]=\"matcher\"\r\n                      pattern=\"^[1-9]\\d*$\" name=\"maritalStatusKey\" required>\r\n                      <mat-option *ngFor=\"let edu of maritalStatus\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"maritalStatus\" required bindLabel=\"codeValue\" bindValue=\"codeKey\" name=\"codeValue\" placeholder=\"Select Marital Status\"\r\n                  [(ngModel)]=\"model.nominee.maritalStatusKey\"></ng-select> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button (click)=\"continueClicked()\" type=\"button\" class=\"btn btn-primary\">Continue</button>\r\n        <button class=\"btn btn-default\" [disabled]=\"(!nomineeForm.form.valid || readonly) && auth.role!='admin'\" type=\"submit\">Save</button>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/nominee/nominee.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/nominee/nominee.component.ts ***!
  \******************************************************************************/
/*! exports provided: MY_FORMATS, NomineeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NomineeComponent", function() { return NomineeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/models/Nominee.model */ "./src/app/shared/models/Nominee.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/models/CNICPattern.model */ "./src/app/shared/models/CNICPattern.model.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _shared_models_History_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/models/History.model */ "./src/app/shared/models/History.model.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var src_app_shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/shared/models/InsuranceMembers.model */ "./src/app/shared/models/InsuranceMembers.model.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















var moment = moment__WEBPACK_IMPORTED_MODULE_14__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var NomineeComponent = /** @class */ (function () {
    function NomineeComponent(router, loanService, commonService, spinner, breadcrumbProvider, toaster) {
        this.router = router;
        this.loanService = loanService;
        this.commonService = commonService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.disFlags = [{ name: 'Yes', value: true }, { name: 'No', value: false }];
        this.formSaved = false;
        this.validated = false;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__["MyErrorStateMatcher"]();
        this.history = new _shared_models_History_model__WEBPACK_IMPORTED_MODULE_11__["History"]();
        this.hasNom = false;
        this.hasBoth = false;
        this.cnicPatternObj = new _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_9__["CNICPattern"]();
        this.residenceArray = [];
        this.clientPhone = "";
        this.now = new Date();
        this.now.setDate((this.now.getDate() + 1));
        var month;
        if ((this.now.getMonth() + 1) < 10) {
            month = '0' + (this.now.getMonth());
        }
        else {
            month = '' + (this.now.getMonth());
        }
        var day;
        if ((this.now.getDate() + 1) < 10) {
            day = '0' + (this.now.getDate());
        }
        else {
            day = '' + (this.now.getDate());
        }
        var year = this.now.getFullYear();
        var currentDate = year + '-' + month + '-' + day;
        this.date = currentDate;
        this.eightenYearsBefore = new Date((year - 18), month, (+day - 1));
        this.minDobYear = new Date((year - 64), month, (+day + 1));
    }
    NomineeComponent.prototype.validate = function () {
        var _this = this;
        if (/^([0-9])\1*$/.test(this.model.nominee.cnicNum)) {
            this.toaster.error("Invalid CNIC", "CNIC Number");
            this.spinner.hide();
            return;
        }
        if (this.model.nominee.cnicExpryDate == undefined || this.model.nominee.cnicExpryDate == '') {
            this.toaster.error("Select CNIC Expiry Date");
            return;
        }
        if (this.model.nominee.cnicNum == this.model.cnicNum) {
            this.toaster.error("Client CNIC can not be same as Nominee CNIC");
            return;
        }
        this.spinner.show();
        this.loanService.validateCNIC(this.model.nominee.cnicNum).subscribe(function (res) {
            _this.spinner.hide();
            console.log(res);
            if (res.client) {
                _this.history = Object.assign(_this.history, res.client, _this.history);
                _this.history.title = "Client";
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else if (res.clientRel) {
                _this.history = Object.assign(_this.history, res.clientRel, _this.history);
                _this.history.title = "Client";
                if (_this.history.type == "1") {
                    _this.history.title = "Nominee";
                }
                else if (_this.history.type == "3") {
                    _this.history.title = "Coborrower";
                }
                else if (_this.history.type == "2") {
                    _this.history.title = "Next-of-Kin";
                }
                else if (_this.history.type == "4") {
                    _this.history.title = "Client Relative";
                }
                if (_this.history.status != "Completed" && _this.history.status != "COMPLETED") {
                    _this.toaster.error("Active as " + _this.history.title + " with Loan ID [" + _this.history.loanAppSeq + "] Client Name [" + _this.history.firstName + " " + _this.history.lastName + "] Status [" + _this.history.status + "]");
                }
                else {
                    _this.validated = true;
                }
            }
            else {
                _this.validated = true;
            }
            console.log(_this.history);
        }, function (error) {
            _this.spinner.hide();
        });
        // setTimeout(() => {
        //   /** spinner ends after 5 seconds */
        //   this.spinner.hide();
        //   this.toaster.success("validated");
        //   this.validated = true;
        // }, 2800);
        if (+this.model.nominee.cnicNum % 2) {
            this.model.nominee.genderKey = this.findKeyFromValue('MALE', this.gender);
        }
        else {
            this.model.nominee.genderKey = this.findKeyFromValue('FEMALE', this.gender);
        }
    };
    NomineeComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedNominee', this.formSaved.toString());
    };
    NomineeComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        if (this.model.isNomDetailAvailable == undefined) {
            this.model.isNomDetailAvailable = true;
        }
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            _this.hasBoth = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (!this.model.nominee) {
            this.model.nominee = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__["Nominee"]();
        }
        else if (this.model.nominee.cnicNum != null || this.model.nominee.cnicNum != undefined) {
            if (this.model.nominee.cnicNum.length > 0) {
                this.clientPhone = this.model.nominee.phone;
                this.age = this.calculateAge(new Date(this.model.nominee.dob));
                this.setPattern();
                this.validated = this.model.nominee.isValidated;
            }
        }
        this.model.nominee.loanAppSeq = this.model.loanAppSeq;
        this.model.nominee.formSeq = this.model.formSeq;
        this.model.nominee.clientSeq = this.model.clientSeq;
        this.model.nominee.typFlg = 1;
        console.log(this.model);
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.spinner.show();
            this.loanService.getClntRel(this.model.nominee).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                if (res != null && +res.cnicNum != 0) {
                    _this.hasNom = true;
                    _this.validated = true;
                    _this.formSaved = true;
                    res.clientSeq = _this.model.clientSeq;
                    _this.model.nominee = res;
                    _this.setPattern();
                    var array = void 0;
                    if (_this.model.nominee.dob) {
                        array = _this.model.nominee.dob.split('T', 1);
                        console.log(array.length);
                        if (array.length) {
                            _this.model.nominee.dob = array[0];
                        }
                    }
                    if (_this.model.nominee.cnicExpryDate) {
                        array = _this.model.nominee.cnicExpryDate.split('T', 1);
                        console.log(array.length);
                        console.log(array[0]);
                        if (array.length) {
                            _this.model.nominee.cnicExpryDate = array[0];
                        }
                    }
                    _this.clientPhone = _this.model.nominee.phone;
                    _this.age = _this.calculateAge(new Date(_this.model.nominee.dob));
                }
                else {
                    _this.hasNom = false;
                    console.log(_this.model);
                    _this.model.nominee.loanAppSeq = _this.model.loanAppSeq;
                    _this.getPreviousClientRel();
                }
            }, function (error) {
                _this.spinner.hide();
                console.log('err', error);
            });
        }
        else if (this.model.nominee.clntRelSeq != undefined && this.model.nominee.clntRelSeq != 0) {
            this.hasNom = true;
            this.validated = true;
            this.clientPhone = this.model.nominee.phone;
            if (this.cnicPatternObj.nomCnic == '' || this.cnicPatternObj.nomCnic.length <= 0)
                this.setPattern();
            this.age = this.calculateAge(new Date(this.model.nominee.dob));
        }
        else {
            this.getPreviousClientRel();
        }
        this.loadLovs();
        this.loanService.getInsuranceMembers(this.model.loanAppSeq).subscribe(function (res) {
            res.forEach(function (obj) {
                if (obj.dob) {
                    var array = obj.dob.split('T', 1);
                    console.log(array.length);
                    if (array.length) {
                        obj.dob = array[0];
                    }
                }
            });
            _this.model.insuranceMembers = res;
        });
    };
    NomineeComponent.prototype.getPreviousClientRel = function () {
        var _this = this;
        this.loanService.getClientRelFromPreviousLoan(this.model.nominee).subscribe(function (res) {
            if (res != null && +res.cnicNum != 0) {
                _this.validated = true;
                res.clientRelSeq = null;
                res.clientSeq = _this.model.clientSeq;
                res.loanAppSeq = _this.model.loanAppSeq;
                _this.model.nominee = res;
                _this.setPattern();
                var array = void 0;
                if (_this.model.nominee.dob) {
                    array = _this.model.nominee.dob.split('T', 1);
                    console.log(array.length);
                    if (array.length) {
                        _this.model.nominee.dob = array[0];
                    }
                }
                if (_this.model.nominee.cnicExpryDate) {
                    array = _this.model.nominee.cnicExpryDate.split('T', 1);
                    console.log(array.length);
                    console.log(array[0]);
                    if (array.length) {
                        _this.model.nominee.cnicExpryDate = array[0];
                    }
                }
                _this.clientPhone = _this.model.nominee.phone;
                _this.age = _this.calculateAge(new Date(_this.model.nominee.dob));
            }
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, 'Error');
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    NomineeComponent.prototype.changeSAN = function () {
        // if (!this.model.isSAN) {
        //   this.model.coBorrower = new Nominee();
        // }
    };
    NomineeComponent.prototype.setPattern = function () {
        var _this = this;
        ///  CNIC Pattern
        this.cnicPatternObj.nomCnic = "";
        var str = this.model.nominee.cnicNum + "";
        var charArray = str.split("");
        charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + '-';
            _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + item;
        });
    };
    NomineeComponent.prototype.continueClicked = function () {
        var _this = this;
        if (this.model.isNomDetailAvailable) {
            if (this.model.forms) {
                var i_1 = 0;
                this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        if (_this.model.isSAN) {
                            if (_this.hasBoth) {
                                _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 3].formUrl]);
                            }
                            else {
                                _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 2].formUrl]);
                            }
                        }
                        else {
                            if (_this.hasBoth) {
                                _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 2].formUrl]);
                            }
                            else {
                                _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 1].formUrl]);
                            }
                        }
                    }
                    i_1++;
                });
            }
        }
        else {
            if (this.model.forms) {
                var i_2 = 0;
                this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_2 + 1].formUrl]);
                    }
                    i_2++;
                });
            }
        }
    };
    NomineeComponent.prototype.getCdForVal = function (seq, arr) {
        var cd = "";
        arr.forEach(function (item) {
            if (item.codeKey == seq) {
                cd = item.codeRefCd;
            }
        });
        return cd;
    };
    NomineeComponent.prototype.findSeqForCd = function (cd, arr) {
        var seq = 0;
        arr.forEach(function (item) {
            if (item.codeRefCd == cd) {
                seq = item.codeKey;
            }
        });
        return seq;
    };
    NomineeComponent.prototype.onNomineeFormSubmit = function () {
        var _this = this;
        this.model.nominee.isSAN = this.model.isSAN;
        this.model.nominee.typFlg = 1;
        this.model.nominee.loanAppSeq = this.model.loanAppSeq;
        this.model.nominee.formSeq = this.model.formSeq;
        console.log(this.model.nominee);
        console.log(this.model.nominee.relationKey);
        console.log(this.getCdForVal(this.model.nominee.relationKey, this.relationType));
        if (this.getCdForVal(this.model.nominee.relationKey, this.relationType) == "0008") {
            if (this.model.insuranceMembers.length <= 0) {
                var member = new src_app_shared_models_InsuranceMembers_model__WEBPACK_IMPORTED_MODULE_15__["InsuranceMember"](this.model.loanAppSeq);
                member.dob = this.model.nominee.dob;
                member.genderKey = this.model.nominee.genderKey;
                member.maritalStatusKey = this.model.nominee.maritalStatusKey;
                member.memberCnicNum = this.model.nominee.cnicNum;
                member.memberName = this.model.nominee.firstName + " " + this.model.nominee.lastName;
                member.relKey = this.findSeqForCd(this.getCdForVal(this.model.nominee.relationKey, this.relationType), this.relationTypeInsurance);
                // this.model.loanAppSeq = this.model.loanSeq;
                this.loanService.saveInsuranceMember(member).subscribe(function (res) {
                    console.log(res);
                    _this.spinner.hide();
                    _this.toaster.success("Saved");
                    $('#addmember').modal('hide');
                    sessionStorage.setItem('model', JSON.stringify(_this.model));
                    // this.formSaved = true;
                }, function (error) {
                    console.log('err In Loan Info Service');
                    console.log('err', error);
                });
                // this.loanService.saveInsuranceInfo(this.model).subscribe((res) => {
                //   this.model.clntHlthInsrSeq = res.clntHlthInsrSeq;
                //   this.member = new InsuranceMember(this.model.loanSeq);
                //   let husbandKey = -1; let i = -1;
                //   this.relationType.forEach((relation, index) => {
                //     if (relation.codeValue.toLowerCase() == 'husband') {
                //       husbandKey = relation.codeKey;
                //       i = index;
                //     }
                //   })
                //   if (husbandKey) {
                //     this.model.insuranceMembers.forEach(member => {
                //       if (member.relKey == husbandKey) {
                //         if (i >= 0) {
                //           this.relationType.splice(i, 1);
                //         }
                //       }
                //     })
                //   }
                //   (<any>$('#addmember')).modal('show');
                //   this.model.forms.forEach(
                //     form => {
                //       if ('/loan-origination/app/' + form.formUrl == this.router.url) {
                //         form.isSaved = true; form.formSaved = true;
                //       }
                //     }
                //   );
                //   sessionStorage.setItem('model', JSON.stringify(this.model));
                //   // this.formSaved = true;
                // }, (error) => {
                //   console.log('err In Loan Info Service');
                //   console.log('err', error);
                // });
            }
            else {
                console.log("ALREAFE");
                this.model.insuranceMembers.forEach(function (member) {
                    console.log(member);
                    //     let member = new InsuranceMember(this.model.loanAppSeq);
                    // member.dob = this.model.nominee.dob;
                    // member.genderKey = this.model.nominee.genderKey;
                    // member.maritalStatusKey = this.model.nominee.maritalStatusKey;
                    // member.memberCnicNum = this.model.nominee.cnicNum;
                    // member.memberName = this.model.nominee.firstName + " " + this.model.nominee.lastName;
                    // member.relKey = this.findSeqForCd(this.getCdForVal(this.model.nominee.relationKey, this.relationType), this.relationTypeInsurance);
                });
            }
            // this.model.insuranceMembers.forEach(member=>{
            //   console.log(member);
            //   if()
            // });
        }
        // return;
        this.spinner.show();
        this.model.nominee.isValidated = true;
        this.model.nominee.cobFormSeq = this.cobFormSeq;
        console.log(this.model.clientSeq + "--" + this.model.isNomDetailAvailable);
        this.loanService.saveStatus(this.model.clientSeq, this.model.isNomDetailAvailable).subscribe(function (res) {
            if (!_this.model.isNomDetailAvailable) {
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = false;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
            }
            sessionStorage.setItem('model', JSON.stringify(_this.model));
        }, function (error) {
            // this.toaster.error(error.error.error, 'Error');
            // this.spinner.hide();
            console.log('err In Loan Service');
            console.log('err', error);
        });
        if (!this.model.isNomDetailAvailable) {
            // if (this.model.forms) {
            //   this.model.forms.forEach(
            //     forms => {
            //       if (forms.formUrl == 'co-borrower') {
            //         if (this.model.isSAN && !this.model.selfPDC) {
            //           forms.isSaved = false;
            //           this.model.coBorrower = new Nominee();
            //         }
            //       }
            //     }
            //   );
            // }
            this.model.isSAN = false;
            this.loanService.saveStatusisSAN(this.model.clientSeq, this.model.isSAN).subscribe(function (res) {
            }, function (error) {
                console.log('err', error);
            });
            this.model.nominee = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__["Nominee"]();
            sessionStorage.setItem('model', JSON.stringify(this.model));
            this.formSaved = true;
            this.spinner.hide();
            return;
        }
        this.loanService.saveStatusisSAN(this.model.clientSeq, this.model.isSAN).subscribe(function (res) {
        }, function (error) {
            console.log('err', error);
        });
        this.model.nominee.typFlg = 1;
        if (this.hasNom) {
            console.log('EDIT');
            console.log(this.model.nominee);
            this.model.nominee.loanAppSeq = this.model.loanAppSeq;
            this.loanService.updateClientRel(this.model.nominee).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                _this.toaster.success('Saved');
                _this.model.nominee.clntRelSeq = res.clntRelSeq;
                if (_this.model.isSAN) {
                    // this.model.coBorrower = this.model.nominee;
                    _this.model.forms.forEach(function (element, index) {
                        if (element.formUrl === 'co-borrower') {
                            element.isSaved = true;
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                    });
                }
                else {
                    _this.model.forms.forEach(function (element, index) {
                        if (element.formUrl == 'co-borrower') {
                            element.isSaved = false;
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    });
                }
                // else if (!this.model.selfPDC) {
                //   this.model.forms.forEach(
                //     (element, index) => {
                //       if (element.formUrl === 'co-borrower') {
                //         element.isSaved = false;
                //       }
                //     });
                // }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                // this.toaster.error(error.error.error, 'Error');
                _this.spinner.hide();
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            console.log(this.model);
            this.loanService.saveClientRel(this.model.nominee).subscribe(function (res) {
                console.log(res);
                _this.spinner.hide();
                _this.toaster.success('Saved');
                _this.hasNom = true;
                _this.model.nominee.clntRelSeq = res.clntRelSeq;
                if (_this.model.isSAN) {
                    // this.model.coBorrower = this.model.nominee;
                    if (_this.model.forms) {
                        _this.model.forms.forEach(function (forms) {
                            if (forms.formUrl == 'co-borrower') {
                                forms.isSaved = true;
                                _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, true);
                            }
                        });
                    }
                }
                else {
                    _this.model.forms.forEach(function (element, index) {
                        if (element.formUrl == 'co-borrower') {
                            element.isSaved = false;
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    });
                }
                // else if (!this.model.selfPDC) {
                //   if (this.model.forms) {
                //     this.model.forms.forEach(
                //       forms => {
                //         if (forms.formUrl == 'co-borrower') {
                //           forms.isSaved = false;
                //         }
                //       }
                //     );
                //   }
                // }
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                            forms.isSaved = true;
                        }
                    });
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                _this.toaster.error(error.error.error, 'Error');
                _this.spinner.hide();
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
    };
    NomineeComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["OCCUPATION"]).subscribe(function (res) {
            _this.occupation = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["GENDER"]).subscribe(function (res) {
            _this.gender = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["RELATION_TYPE_NOMINEE"]).subscribe(function (res) {
            _this.relationType = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["MARITAL_STATUS"]).subscribe(function (res) {
            _this.maritalStatus = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["INSURANCE_RELATION"]).subscribe(function (res) {
            _this.relationTypeInsurance = JSON.parse(JSON.stringify(res));
            console.log("================");
        }, function (error) {
            console.log('err', error);
        });
    };
    NomineeComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    NomineeComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    // sameAsClientSpaouseChangeOld() {
    //   console.log(this.model.nominee.fatherSpzFlag);
    //   if (this.model.nominee.fatherSpzFlag) {
    //     if (this.model.fathrFirstName.length) {
    //       this.model.nominee.firstName = this.model.fathrFirstName;
    //       this.model.nominee.lastName = this.model.fathrLastName;
    //       this.model.nominee.relationKey = this.findKeyFromVal("father", this.relationType);
    //     } else {
    //       this.model.nominee.relationKey = this.findKeyFromVal("husband", this.relationType);
    //       this.model.nominee.firstName = this.model.spzFirstName;
    //       this.model.nominee.lastName = this.model.spzLastName;
    //     }
    //     this.model.nominee.fatherFirstName = "";
    //     this.model.nominee.fatherLastName = "";
    //   } else {
    //     this.model.nominee.firstName = "";
    //     this.model.nominee.lastName = "";
    //   }
    // }
    NomineeComponent.prototype.sameAsClientSpaouseChange = function () {
        console.log(this.model.nominee.fatherSpzFlag);
        if (this.model.nominee.fatherSpzFlag) {
            if (this.model.fathrFirstName.length) {
                this.model.nominee.firstName = this.model.fathrFirstName;
                this.model.nominee.lastName = this.model.fathrLastName;
                this.model.nominee.relationKey = this.findKeyFromVal("father", this.relationType);
            }
            else {
                this.model.nominee.relationKey = this.findKeyFromVal("husband", this.relationType);
                this.model.nominee.firstName = this.model.spzFirstName;
                this.model.nominee.lastName = this.model.spzLastName;
            }
            // this.model.nominee.fatherFirstName = "";
            // this.model.nominee.fatherLastName = "";
        }
        else {
            // this.model.nominee.firstName = "";
            // this.model.nominee.lastName = "";
        }
    };
    NomineeComponent.prototype.onDOBChange = function (dob) {
        this.age = this.calculateAge(new Date(this.model.nominee.dob));
        var date;
        if (this.model.nominee.dob) {
            date = new Date(this.model.nominee.dob);
            var month = (date.getMonth() + 1);
            if (month < 10) {
                month = '0' + month;
            }
            var day = date.getDate();
            if (day < 10) {
                day = '0' + day;
            }
            this.model.nominee.dob = date.getFullYear() + '-' + month + '-' + day;
        }
    };
    NomineeComponent.prototype.calculateAge = function (birthday) {
        var ageDifMs = Date.now() - birthday.getTime();
        var ageDate = new Date(ageDifMs); // miliseconds from epoch
        return Math.abs(ageDate.getUTCFullYear() - 1970);
    };
    NomineeComponent.prototype.cnicPattern = function (event, type) {
        var _this = this;
        this.validated = false;
        var dt = this.model.nominee.cnicExpryDate;
        this.model.nominee = new _shared_models_Nominee_model__WEBPACK_IMPORTED_MODULE_3__["Nominee"]();
        this.model.nominee.cnicExpryDate = dt;
        this.age = "";
        if (this.readonly) {
            this.readonly = false;
        }
        if (event.keyCode == 8 || event.keyCode == 9
            || event.keyCode == 27 || event.keyCode == 13
            || (event.keyCode == 65 && event.ctrlKey === true))
            return;
        if ((event.keyCode < 48 || event.keyCode > 57))
            event.preventDefault();
        var length = 0;
        if (type == "client") {
            if (this.cnicPatternObj.clientCNIC.length)
                length = this.cnicPatternObj.clientCNIC.length;
            if (length <= 15) {
                this.cnicPatternObj.clientCNIC = this.cnicPatternObj.clientCNIC.replace(/-/g, '');
                var array = this.cnicPatternObj.clientCNIC.split('');
                this.cnicPatternObj.clientCNIC = "";
                this.model.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + "-";
                        }
                        if (_this.cnicPatternObj.clientCNIC.length < 15) {
                            _this.cnicPatternObj.clientCNIC = _this.cnicPatternObj.clientCNIC + char;
                            _this.model.cnicNum = _this.model.cnicNum + char;
                        }
                    }
                });
            }
        }
        else if (type == "nominee") {
            if (this.cnicPatternObj.nomCnic.length)
                length = this.cnicPatternObj.nomCnic.length;
            this.cnicPatternObj.nomCnic = this.cnicPatternObj.nomCnic.replace(/-/g, '');
            var array = this.cnicPatternObj.nomCnic.split('');
            this.cnicPatternObj.nomCnic = "";
            this.model.nominee.cnicNum = "";
            array.forEach(function (char, index) {
                var asciiCode = char.charCodeAt(0);
                if (asciiCode >= 48 && asciiCode <= 57) {
                    if (index == 5 || index == 12) {
                        _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + "-";
                    }
                    if (_this.cnicPatternObj.nomCnic.length < 15) {
                        _this.cnicPatternObj.nomCnic = _this.cnicPatternObj.nomCnic + char;
                        _this.model.nominee.cnicNum = _this.model.nominee.cnicNum + char;
                    }
                }
            });
        }
        else if (type == "co-borrower") {
            if (this.cnicPatternObj.cobCNIC.length)
                length = this.cnicPatternObj.cobCNIC.length;
            if (length < 15) {
                this.cnicPatternObj.cobCNIC = this.cnicPatternObj.cobCNIC.replace(/-/g, '');
                var array = this.cnicPatternObj.cobCNIC.split('');
                this.cnicPatternObj.cobCNIC = "";
                this.model.coBorrower.cnicNum = "";
                array.forEach(function (char, index) {
                    var asciiCode = char.charCodeAt(0);
                    if (asciiCode >= 48 && asciiCode <= 57) {
                        if (index == 5 || index == 12) {
                            _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + "-";
                        }
                        if (_this.cnicPatternObj.cobCNIC.length < 15) {
                            _this.cnicPatternObj.cobCNIC = _this.cnicPatternObj.cobCNIC + char;
                            _this.model.coBorrower.cnicNum = _this.model.coBorrower.cnicNum + char;
                        }
                    }
                });
            }
        }
    };
    NomineeComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue == value) {
                    return array[i].codeKey;
                }
            }
        }
    };
    NomineeComponent.prototype.phoneNumber = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
        if (this.clientPhone.length == 0)
            this.clientPhone = "(" + this.clientPhone;
        if (this.clientPhone.length == 5)
            this.clientPhone = this.clientPhone + ")";
        if (this.clientPhone.length < 13) {
            this.model.nominee.phone = this.clientPhone.replace(/[(]/g, '');
            this.model.nominee.phone = this.clientPhone.replace(/[)]/g, '');
            this.model.nominee.phone = this.clientPhone.replace(/ /g, '');
            this.model.nominee.phone = this.model.nominee.phone + event.key;
        }
        console.log(this.model.nominee.phone);
    };
    NomineeComponent.prototype.findKeyFromVal = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue.toLowerCase() == key.toLowerCase()) {
                    return array[i].codeKey;
                }
            }
        }
        return 0;
    };
    NomineeComponent.prototype.onExpChange = function (dob) {
        var date;
        if (this.model.nominee.cnicExpryDate) {
            date = new Date(this.model.nominee.cnicExpryDate);
            var month = (date.getMonth() + 1);
            if (month < 10) {
                month = '0' + month;
            }
            var day = date.getDate();
            if (day < 10) {
                day = '0' + day;
            }
            this.model.nominee.cnicExpryDate = date.getFullYear() + '-' + month + '-' + day;
        }
    };
    NomineeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-nominee',
            template: __webpack_require__(/*! ./nominee.component.html */ "./src/app/pages/loan-origination/loan-app/nominee/nominee.component.html"),
            styles: [__webpack_require__(/*! ./nominee.component.css */ "./src/app/pages/loan-origination/loan-app/nominee/nominee.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_12__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"], _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"]])
    ], NomineeComponent);
    return NomineeComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.css":
/*!*******************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.css ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\nng-select.ng-invalid.ng-touched .ng-select-container {\r\n    border-color: #dc3545;\r\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\r\n}\r\n.example-margin {\r\n  margin: 0 10px;\r\n}\r\n"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.html":
/*!********************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n\r\n      <form (ngSubmit)=\"onPersonalInfoSubmit()\" #addPersonalInfoForm=\"ngForm\">\r\n        <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" id=\"basic-tab\" data-toggle=\"tab\" href=\"#basincinfo\" role=\"tab\"\r\n              aria-controls=\"home\" aria-selected=\"true\">Basic\r\n              Info</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" id=\"address-tab\" data-toggle=\"tab\" href=\"#addressTab\" role=\"tab\"\r\n              aria-controls=\"addressTab\" aria-selected=\"false\">Address</a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"tab-content borrowerTabsContent mb-md-3\" id=\"borrowerTabsContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"basincinfo\" role=\"tabpanel\" aria-labelledby=\"basic-tab\">\r\n\r\n            <div class=\"pt-1 pb-1\">\r\n              <label>Client ID:\r\n                <span class=\"colorBlue\">{{model.clientSeq}} </span>\r\n              </label>\r\n              <br>\r\n            </div>\r\n            <div class=\"pt-1\">\r\n              <label>Client Information</label>\r\n            </div>\r\n            <div class=\"borderbox\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" matInput [value]=\"cnicPattern.clientCNIC\" readonly disabled\r\n                      placeholder=\"CNIC: xxxxx-xxxxxxx-x\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input matInput required [matDatepicker]=\"picker1\" placeholder=\"CNIC Expiry Date\"\r\n                      (dateChange)=\"onExpChange(model.expiryDate)\" name=\"expiryDate\" [(ngModel)]=\"model.expiryDate\"\r\n                      [disabled]=\"auth.role!='admin'\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker startView=\"year\" #picker1></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 text-center\">\r\n                  <mat-checkbox class=\"example-margin\" (change)=\"selfPdcChange()\" name=\"selfPDC\"\r\n                    [(ngModel)]=\"model.selfPDC\">Self\r\n                    PDC</mat-checkbox>\r\n                </div>\r\n                <div *ngIf=\"hasExpired\">\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" matInput [(ngModel)]=\"model.tokenNum\" placeholder=\"Token No\" name=\"tokenNum\"\r\n                        (keypress)=\"onlyNumbers($event)\" maxlength=\"13\" #tokenNum=\"ngModel\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input matInput required [matDatepicker]=\"picker2\" [min]=\"now\" placeholder=\"Token Expiry Date\"\r\n                        name=\"tokenDate\" [(ngModel)]=\"model.tokenDate\">\r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                      <mat-datepicker startView=\"year\" #picker2></mat-datepicker>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"cCol1\">\r\n                  <label>Attach CNIC picture</label>\r\n                  <input type=\"file\" class=\"form-control\" value=\"Attach CNIC picture\">\r\n                </div> -->\r\n                <!-- <div class=\"cCol1\">\r\n                  <label class=\"blankLabel\">&nbsp;</label>\r\n                  <button class=\"velBtn gray\">Validate with KASHF</button>\r\n                </div> -->\r\n              </div>\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly && auth.role!='admin'\" (keypress)=\"onlyLetters($event)\" matInput\r\n                      type=\"text\" required [(ngModel)]=\"model.firstName\" id=\"firstName\" name=\"firstName\"\r\n                      #firstName=\"ngModel\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\" [errorStateMatcher]=\"matcher\"\r\n                      placeholder=\"First Name\">\r\n                    <mat-error *ngIf=\"firstName.invalid\">\r\n                      first name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly && auth.role!='admin'\" (keypress)=\"onlyLetters($event)\" matInput\r\n                      type=\"text\" [(ngModel)]=\"model.lastName\" #lastName=\"ngModel\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\"\r\n                      [errorStateMatcher]=\"matcher\" id=\"lastName\" name=\"lastName\" placeholder=\"Last Name\">\r\n                    <mat-error *ngIf=\"lastName.invalid\">\r\n                      last name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" (keypress)=\"onlyLetters($event)\" matInput type=\"text\"\r\n                      [(ngModel)]=\"model.nickName\" #nickName=\"ngModel\" pattern=\"([a-zA-Z ]{2,30}\\s*)+\"\r\n                      [errorStateMatcher]=\"matcher\" id=\"nickName\" name=\"nickName\" placeholder=\"Nick Name\">\r\n                    <mat-error *ngIf=\"nickName.invalid\">\r\n                      nick name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" matInput type=\"text\" (keypress)=\"onlyNumbers($event)\" required\r\n                      maxlength=\"11\" pattern=\"^[0-9]{11}$\" [errorStateMatcher]=\"matcher\" [(ngModel)]=\"model.phone\"\r\n                      id=\"phone\" name=\"phone\" placeholder=\"Phone No.\" #phone=\"ngModel\">\r\n                    <mat-error *ngIf=\"phone.invalid\">\r\n                      phone number is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input matInput required name=\"dob\" (dateChange)=\"onDOBChange(model.dob)\" [max]=\"eightenYearsBefore\"\r\n                      [min]=\"minDobYear\" [matDatepicker]=\"picker3\" placeholder=\"Date of birth\" [(ngModel)]=\"model.dob\"\r\n                      ng-model-option=\"{Asia/Karachi}\" readonly>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker startView=\"multi-year\" required #picker3 disabled=\"true\"></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" matInput type=\"text\" readonly disabled [(ngModel)]=\"model.clntAge\"\r\n                      id=\"clntAge\" name=\"clntAge\" placeholder=\"Age\" #clntAge=\"ngModel\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Gender\" [(ngModel)]=\"model.genderKey\"\r\n                      name=\"genderKey\" required [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\">\r\n                      <mat-option *ngFor=\"let edu of gender\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly && auth.role!='admin'\" (selectionChange)=\"maritalStatusChange()\"\r\n                      placeholder=\"Marital Status\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                      [(ngModel)]=\"model.maritalStatusKey\" name=\"maritalStatus\" required>\r\n                      <mat-option *ngFor=\"let edu of maritalStatus\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"maritalStatus\"\r\n                             required\r\n                             bindLabel=\"codeValue\"\r\n                             bindValue=\"codeKey\"\r\n                             name=\"codeValue\"\r\n                             placeholder=\"Select Marital Status\"\r\n                             [(ngModel)]=\"model.maritalStatus\">\r\n                  </ng-select> -->\r\n                </div>\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <mat-select placeholder=\"Education\" [disabled]=\"readonly\" [(ngModel)]=\"model.eduLvlKey\"\r\n                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"eduLvlKey\" required>\r\n                      <mat-option *ngFor=\"let edu of education\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"education\"\r\n                  [formControl]=\"eduLvlKey\"\r\n                             required\r\n                             bindLabel=\"codeValue\"\r\n                             bindValue=\"codeKey\"\r\n                             name=\"codeValue\"\r\n                             placeholder=\"Select Education\"\r\n                             [(ngModel)]=\"model.eduLvlKey\">\r\n                  </ng-select>-->\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-label>\r\n                    Disability Flag\r\n                  </mat-label>\r\n                  <br>\r\n                  <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.disableFlag\" (change)=\"disabilityChange()\"\r\n                    name=\"disableFlag\" required>\r\n                    <mat-radio-button class=\"w-50\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">\r\n                      {{disFlag.name}}</mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"!model.disableFlag\" placeholder=\"Disablility\" [required]=\"model.disableFlag\"\r\n                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" [disabled]=\"!model.disableFlag\"\r\n                      [(ngModel)]=\"model.natureDisabilityKey\" name=\"natureDisabilityKey\">\r\n                      <mat-option *ngFor=\"let edu of disability\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"disability\"\r\n                               bindLabel=\"codeValue\"\r\n                               bindValue=\"codeKey\"\r\n                               name=\"codeValue\"\r\n                               [(ngModel)]=\"model.natureDisabilityKey\"\r\n                               placeholder=\"Select Nature\">\r\n                    </ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Occupation\" [(ngModel)]=\"model.occupationKey\"\r\n                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"occupationKey\" required>\r\n                      <mat-option *ngFor=\"let edu of occupation\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"occupation\"\r\n                             required\r\n                             bindLabel=\"codeValue\"\r\n                             bindValue=\"codeKey\"\r\n                             name=\"codeValue\"\r\n                             placeholder=\"Select Occupation\"\r\n                             [(ngModel)]=\"model.occupationKey\">\r\n                  </ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <mat-select [disabled]=\"readonly\" placeholder=\"Residence\" [(ngModel)]=\"model.residenceTypeKey\"\r\n                      [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                      <mat-option *ngFor=\"let edu of residenceArray\" [value]=\"edu.codeKey\">\r\n                        {{edu.codeValue}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!-- <ng-select [items]=\"residenceArray\"\r\n                             required\r\n                             bindLabel=\"codeValue\"\r\n                             bindValue=\"codeKey\"\r\n                             name=\"codeValue\"\r\n                             placeholder=\"Select Residence\"\r\n                             [(ngModel)]=\"model.residence\">\r\n                  </ng-select> -->\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" (keypress)=\"onlyLetters($event)\" matInput type=\"text\"\r\n                      [(ngModel)]=\"model.motherMaidenName\" #motherMaidenName=\"ngModel\" pattern=\"([a-zA-Z ]{3,30}\\s*)+\"\r\n                      [errorStateMatcher]=\"matcher\" id=\"motherMaidenName\" required name=\"motherMaidenName\"\r\n                      placeholder=\"Mother Maiden Name\">\r\n                    <mat-error *ngIf=\"motherMaidenName.invalid\">\r\n                      mother maiden name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" matInput (keypress)=\"onlyNumbers($event)\" type=\"text\" maxlength=\"2\"\r\n                      pattern=\"\\d*\" min=\"1\" pattern=\"([0-9]{1,2}\\s*)+\" required [(ngModel)]=\"model.houseHoldMember\"\r\n                      id=\"houseHoldMember\" name=\"houseHoldMember\" placeholder=\"House Hold Members\" #hhMembers=\"ngModel\">\r\n                    <mat-error *ngIf=\"hhMembers.invalid\">\r\n                      house hold members are <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" matInput (keypress)=\"onlyNumbers($event)\" type=\"text\" maxlength=\"2\"\r\n                      pattern=\"\\d*\" max=\"99\" min=\"0\" #numOfDependents=\"ngModel\" [errorStateMatcher]=\"matcher\" required\r\n                      [(ngModel)]=\"model.numOfDependts\" id=\"numOfDependts\" name=\"numOfDependts\"\r\n                      placeholder=\"No. of Dependents\">\r\n                    <mat-hint *ngIf=\"+numOfDependents.value>+hhMembers.value\" style=\"color: red;\">Dependents must be\r\n                      less\r\n                      than\r\n                      <strong>Household Members</strong>\r\n                    </mat-hint>\r\n                    <mat-error *ngIf=\"numOfDependents.invalid\">\r\n                      No. of Dependents is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" matInput (keypress)=\"onlyNumbers($event)\" type=\"text\" maxlength=\"2\"\r\n                      pattern=\"\\d*\" [required]=\"!isSingle\" [(ngModel)]=\"model.numOfChidren\" #numOfChildren=\"ngModel\"\r\n                      [disabled]=\"isSingle\" id=\"numOfChidren\" name=\"numOfChidren\" placeholder=\"No. of Childrens\">\r\n                    <mat-error *ngIf=\"numOfChildren.invalid\">\r\n                      No. of Children is <strong>invalid</strong>\r\n                    </mat-error>\r\n                    <!-- <mat-hint *ngIf=\"+numOfChildren.value>+numOfDependents.value\" style=\"color: red;\">Children must be less\r\n                      than\r\n                      <strong>Dependants</strong>\r\n                    </mat-hint> -->\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly\" matInput (keypress)=\"onlyNumbers($event)\" type=\"text\" maxlength=\"2\"\r\n                      pattern=\"^[0-9]\\d*$\" required [(ngModel)]=\"model.earningMembers\" #earningMembers=\"ngModel\"\r\n                      id=\"earningMembers\" name=\"earningMembers\" placeholder=\"Earning Members\">\r\n                    <mat-error *ngIf=\"earningMembers.invalid\">\r\n                      earning members are <strong>invalid</strong>\r\n                    </mat-error>\r\n                    <mat-hint *ngIf=\"(+model.earningMembers>+model.houseHoldMember)\" style=\"color: red;\">Earning Members\r\n                      must be less than\r\n                      <strong>Household Members</strong>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"pt-1\" *ngIf=\"!isMarried\">\r\n              <label>Father’s Information</label>\r\n            </div>\r\n            <div class=\"borderbox\" *ngIf=\"!isMarried\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly && auth.role!='admin'\" matInput (keypress)=\"onlyLetters($event)\"\r\n                      pattern=\"([a-zA-Z ]{3,30}\\s*)+\" type=\"text\" [required]=\"!isMarried\"\r\n                      [(ngModel)]=\"model.fathrFirstName\" id=\"fathrFirstName\" name=\"fathrFirstName\"\r\n                      placeholder=\"Father First Name\" #fathrFirstName=\"ngModel\">\r\n                    <mat-error *ngIf=\"fathrFirstName.invalid\">\r\n                      father first name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly && auth.role!='admin'\" matInput (keypress)=\"onlyLetters($event)\"\r\n                      pattern=\"([a-zA-Z ]{3,30}\\s*)+\" type=\"text\" [required]=\"!isMarried\"\r\n                      [(ngModel)]=\"model.fathrLastName\" id=\"fathrLastName\" name=\"fathrLastName\"\r\n                      placeholder=\"Father Last Name\" #fathrLastName=\"ngModel\">\r\n                    <mat-error *ngIf=\"fathrLastName.invalid\">\r\n                      father first name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"pt-1\" *ngIf=\"isMarried\">\r\n              <label>Spouse’s Information</label>\r\n            </div>\r\n            <div class=\"borderbox\" *ngIf=\"isMarried\">\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly && auth.role!='admin'\" matInput (keypress)=\"onlyLetters($event)\"\r\n                      pattern=\"([a-zA-Z ]{3,30}\\s*)+\" type=\"text\" [(ngModel)]=\"model.spzFirstName\"\r\n                      [required]=\"isMarried\" [disabled]=\"!isMarried\" id=\"spzFirstName\" name=\"spzFirstName\"\r\n                      placeholder=\"Spouse First Name\" #spzFirstName=\"ngModel\">\r\n                    <mat-error *ngIf=\"spzFirstName.invalid\">\r\n                      spouse first name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1 \">\r\n                  <mat-form-field>\r\n                    <input [disabled]=\"readonly && auth.role!='admin'\" matInput (keypress)=\"onlyLetters($event)\"\r\n                      pattern=\"([a-zA-Z ]{3,30}\\s*)+\" type=\"text\" [(ngModel)]=\"model.spzLastName\" [required]=\"isMarried\"\r\n                      [disabled]=\"!isMarried\" id=\"spzLastName\" name=\"spzLastName\" placeholder=\"Spouse Last Name\"\r\n                      #spzLastName=\"ngModel\">\r\n                    <mat-error *ngIf=\"spzLastName.invalid\">\r\n                      spouse last name is <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"addressTab\" role=\"tabpanel\" aria-labelledby=\"address-tab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input readonly matInput required id=\"province\" name=\"province\" [(ngModel)]=\"model.provinceName\"\r\n                    readonly placeholder=\"Province\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input readonly required matInput id=\"district\" name=\"district\" [(ngModel)]=\"model.districtName\"\r\n                    readonly placeholder=\"District\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input readonly matInput required id=\"tehsil\" name=\"tehsil\" [(ngModel)]=\"model.tehsilName\" readonly\r\n                    placeholder=\"Tehsil\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input readonly matInput required id=\"uc\" name=\"uc\" [(ngModel)]=\"model.ucName\" readonly\r\n                    placeholder=\"UC\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input readonly matInput required id=\"city\" name=\"city\" [(ngModel)]=\"model.cityName\" readonly\r\n                    placeholder=\"City\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 mt-3\">\r\n                <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" class=\"btn btn-dots\"\r\n                  data-toggle=\"modal\" data-target=\"#Location\"></button>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input [disabled]=\"readonly && auth.role!='admin'\" matInput type=\"text\" value=\"\" maxlength=\"15\"\r\n                    required id=\"houseNum\" name=\"houseHum\" [(ngModel)]=\"model.houseNum\" #houseNum=\"ngModel\"\r\n                    (keypress)=\"alphaNumeric($event)\" placeholder=\"House Number\">\r\n                  <mat-error *ngIf=\"houseNum.invalid\">\r\n                    house number is <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input matInput [disabled]=\"readonly && auth.role!='admin'\" (keypress)=\"alphaNumeric($event)\"\r\n                    type=\"text\" value=\"\" required id=\"street\" name=\"street\" [(ngModel)]=\"model.sreet_area\"\r\n                    placeholder=\"Street/Area\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <ng-select [disabled]=\"readonly && auth.role!='admin'\" [items]=\"communityArray\" required\r\n                  bindLabel=\"cmntyNm\" bindValue=\"cmntySeq\" name=\"cmntyNm\" placeholder=\"Select Community\"\r\n                  [(ngModel)]=\"model.community\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput required [disabled]=\"readonly && auth.role!='admin'\"\r\n                    [(ngModel)]=\"model.village\" id=\"village\" name=\"village\" placeholder=\"Village\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol3 \">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput required id=\"other\" name=\"other\"\r\n                    [disabled]=\"readonly && auth.role!='admin'\" [(ngModel)]=\"model.otherDetails\"\r\n                    placeholder=\"Other Details\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input matInput [disabled]=\"readonly\" type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"2\"\r\n                    pattern=\"\\d*\" max=\"99\" min=\"0\" #yearResidence=\"ngModel\" [(ngModel)]=\"model.yearsOfResidence\"\r\n                    id=\"yearsOfResidence\" name=\"yearsOfResidence\" (change)=\"calculateTotalMonth()\"\r\n                    placeholder=\"No. of Years of Residence\" [errorStateMatcher]=\"matcher\" />\r\n                  <mat-error *ngIf=\"yearResidence.invalid\">\r\n                    residence years are <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [disabled]=\"readonly\" (keypress)=\"onlyNumbers($event)\" min=\"1\" max=\"12\" matInput\r\n                    required maxlength=\"2\" #mnthsResidence=\"ngModel\" [errorStateMatcher]=\"matcher\"\r\n                    pattern=\"^(0?[0-9]|1[012])$\" [(ngModel)]=\"model.mnthsOfResidence\" id=\"mnthsResidence\"\r\n                    name=\"mnthsResidence\" placeholder=\"No. of Months of Residence\" (change)=\"calculateTotalMonth()\" />\r\n                  <mat-error *ngIf=\"mnthsResidence.invalid\">\r\n                    residence months are <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [readonly]=\"true\" [disabled]=\"true\" matInput readonly\r\n                    [(ngModel)]=\"totalmnthsOfResidence\" id=\"totalmnthsOfResidence\" name=\"totalmnthsOfResidence\"\r\n                    placeholder=\"Residence tenure in months\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"pt-1 pb-1\">\r\n              <mat-label>Is Permanent Address Same as Current Address:</mat-label>\r\n              <br>\r\n              <mat-radio-group [disabled]=\"readonly\" [(ngModel)]=\"model.isPermAddress\" name=\"isPermAddress\" required\r\n                (change)=\"PermAddressChange()\">\r\n                <mat-radio-button class=\"m-r-30\" *ngFor=\"let disFlag of disFlags\" [value]=\"disFlag.value\">\r\n                  {{disFlag.name}}</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div class=\"pt-1 pb-1\" [hidden]=\"model.isPermAddress\">\r\n              <mat-form-field>\r\n                <input type=\"text\" [disabled]=\"readonly\" matInput [required]=\"!model.isPermAddress\"\r\n                  id=\"permanentAddress\" name=\"permanentAddress\" [(ngModel)]=\"model.permAddress\"\r\n                  placeholder=\"Permanent Address\" [errorStateMatcher]=\"matcher\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!formSaved\"\r\n          (click)=\"continueClicked()\">Continue</button>\r\n        <button [disabled]=\"readonly && auth.role!='admin'\" class=\"btn btn-default\" type=\"submit\">Save</button>\r\n      </form>\r\n      <!-- [disabled]=\"!formSaved\" -->\r\n      <!-- [disabled]=\"!addPersonalInfoForm.form.valid\" -->\r\n\r\n      <div class=\"modal fade\" id=\"Location\" role=\"dialog\">\r\n        <div class=\"modal-dialog bigger mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Location </h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table last-left\">\r\n                  <thead class=\"thead-light last-left\">\r\n                    <tr>\r\n                      <th>Province</th>\r\n                      <th>District</th>\r\n                      <th>Tehsil</th>\r\n                      <th width=\"20%\">UC</th>\r\n                      <th>City</th>\r\n                      <th>Select</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody class=\"evenodd\">\r\n                    <tr *ngFor=\"let address of addresses\">\r\n                      <td>{{address.provinceName}} </td>\r\n                      <td>{{address.districtName}}</td>\r\n                      <td>{{address.tehsilName}}</td>\r\n                      <td>{{address.ucName}}</td>\r\n                      <td>{{address.cityName}}</td>\r\n                      <td>\r\n                        <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary btn-min\"\r\n                          (click)=\"selectAddress(address)\">Select</button>\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.ts":
/*!******************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.ts ***!
  \******************************************************************************************/
/*! exports provided: MY_FORMATS, PersonalInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonalInfoComponent", function() { return PersonalInfoComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_models_address_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/models/address.model */ "./src/app/shared/models/address.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/models/CNICPattern.model */ "./src/app/shared/models/CNICPattern.model.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var src_app_shared_adapters_moment_date_adapter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/shared/adapters/moment-date-adapter */ "./src/app/shared/adapters/moment-date-adapter.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var moment = moment__WEBPACK_IMPORTED_MODULE_13__;
var MY_FORMATS = {
    parse: {
        dateInput: 'LL',
    },
    display: {
        dateInput: 'DD-MM-YYYY',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY',
    },
};
var PersonalInfoComponent = /** @class */ (function () {
    function PersonalInfoComponent(loanService, router, commonService, spinner, breadcrumbProvider, toaster) {
        this.loanService = loanService;
        this.router = router;
        this.commonService = commonService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.disFlags = [{ name: 'Yes', value: true }, { name: 'No', value: false }];
        this.formSaved = false;
        this.date = new Date();
        this.isMarried = false;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_8__["MyErrorStateMatcher"]();
        this.cnicPattern = new _shared_models_CNICPattern_model__WEBPACK_IMPORTED_MODULE_9__["CNICPattern"]();
        this.hasExpired = false;
        this.isSingle = false;
        this.basicCrumbs = [];
        this.charArray = [];
        this.str = "";
        this.addresses = [];
        this.address = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_3__["Address"]();
        this.residenceArray = [];
        this.clientPhone = "";
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        // this.readonly = (this.auth.role == 'admin') ? true: false;
        this.now = new Date();
        this.spinner.hide();
        var month;
        if ((this.now.getMonth() + 1) < 10) {
            month = '0' + (this.now.getMonth());
        }
        else {
            month = '' + (this.now.getMonth());
        }
        var day;
        if ((this.now.getDate() + 1) < 10) {
            day = '0' + (this.now.getDate());
        }
        else {
            day = '' + (this.now.getDate());
        }
        var year = this.now.getFullYear();
        var currentDate = year + '-' + month + '-' + day;
        this.date = currentDate;
        this.eightenYearsBefore = new Date((year - 18), month, day);
        this.minDobYear = new Date((year - 64), month, (+day + 1));
        this.maxDate = (year + 100) + '-' + month + '-' + day;
    }
    PersonalInfoComponent.prototype.calculateTotalMonth = function () {
        if (this.model.mnthsOfResidence == null || this.model.mnthsOfResidence == '') {
            this.model.mnthsOfResidence = 0;
        }
        this.totalmnthsOfResidence = (+this.model.yearsOfResidence * 12) + +this.model.mnthsOfResidence;
    };
    PersonalInfoComponent.prototype.maritalStatusChange = function () {
        if (this.findValueFromKey(this.model.maritalStatusKey, this.maritalStatus) ===
            'MARRIED' || this.findValueFromKey(this.model.maritalStatusKey, this.maritalStatus) ===
            'Married' || this.findValueFromKey(this.model.maritalStatusKey, this.maritalStatus) === 'married') {
            this.isMarried = true;
            this.model.fathrFirstName = "";
            this.model.fathrLastName = "";
        }
        else {
            this.isMarried = false;
            this.model.spzFirstName = "";
            this.model.spzLastName = "";
        }
        if (this.findValueFromKey(this.model.maritalStatusKey, this.maritalStatus) ===
            'SINGLE' || this.findValueFromKey(this.model.maritalStatusKey, this.maritalStatus) ===
            'Single' || this.findValueFromKey(this.model.maritalStatusKey, this.maritalStatus) === 'single') {
            this.isSingle = true;
            this.model.numOfChidren = 0;
        }
        else {
            this.isSingle = false;
        }
    };
    PersonalInfoComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedPersonalInfo', this.formSaved.toString());
    };
    PersonalInfoComponent.prototype.checkExpiry = function () {
        return false;
    };
    PersonalInfoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.spinner.show();
        this.basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        this.basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
            if (element.formUrl == 'personal-info' && element.isSaved == true) {
                _this.formSaved = true;
            }
        });
        this.model = JSON.parse(sessionStorage.getItem('model'));
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        if (this.model.expiryDate) {
            if ((new Date(this.model.expiryDate) < (new Date()))) {
                this.hasExpired = true;
            }
        }
        // this.model = this.loanService.landingModel;
        ///  CNIC Pattern
        this.str = this.model.cnicNum + "";
        this.charArray = this.str.split("");
        this.charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                _this.cnicPattern.clientCNIC = _this.cnicPattern.clientCNIC + '-';
            _this.cnicPattern.clientCNIC = _this.cnicPattern.clientCNIC + item;
        });
        this.clientPhone = this.model.phone;
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        // this.model.selfPDC = false;
        console.log(this.model);
        this.calculateTotalMonth();
        // this.maritalStatusChange(this.model.maritalStatusKey);
        // this.totalmnthsOfResidence = (this.model.yearsOfResidence*12)+this.model.mnthsOfResidence;
        var array;
        if (this.model.dob) {
            array = this.model.dob.split('T', 1);
            if (array.length) {
                this.model.dob = array[0];
                this.model.clntAge = this.calculateAge(new Date(this.model.dob));
            }
        }
        if (this.model.expiryDate) {
            array = this.model.expiryDate.split('T', 1);
            if (array.length) {
                this.model.expiryDate = array[0];
            }
        }
        this.getLocations();
        this.loadLovs();
        if (sessionStorage.getItem('editLoan') === 'true') {
            this.formSaved = true;
            this.loanService.getLoanApp(this.model.loanSeq).subscribe(function (res) {
                // res.clientSeq = this.model.clientSeq;
                res.loanApp.clientSeq = _this.model.clientSeq;
                res.loanApp.totIncmOfErngMemb = _this.model.totIncmOfErngMemb;
                res.loanApp.bizDtl = _this.model.bizDtl;
                _this.model = Object.assign(_this.model, res.loanApp, _this.model);
                _this.model.clntAge = _this.calculateAge(new Date(_this.model.dob));
                if (_this.model.forms.length === 0) {
                    _this.model.forms = res.forms;
                    // this.model.forms.forEach(
                    //   forms => {
                    //     if (forms.formUrl == "mfcib" || forms.formUrl == "documents") {
                    //       forms.isSaved = true;
                    //       this.breadcrumbProvider.addCheckedItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                    //     } else if (forms.formUrl == "submit" && this.auth.role == 'bm') {
                    //       forms.formNm = "Process Application";
                    //       this.breadcrumbProvider.addCheckedItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                    //     } else if (!(forms.formUrl === 'co-borrower' && this.model.isSelfPdc)) {
                    //       this.breadcrumbProvider.addCheckedItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved);
                    //     } else {
                    //       this.breadcrumbProvider.addDisabledItem(forms.formNm, '/loan-origination/app/' + forms.formUrl, true);
                    //     }
                    //     if ('/loan-origination/app/' + forms.formUrl === this.router.url) {
                    //       this.model.formSeq = forms.formSeq;
                    //     }
                    //   }
                    // );
                    if (_this.model.forms) {
                        var hasboth_2 = false;
                        _this.model.forms.forEach(function (element) {
                            if (element.formUrl == 'nominee') {
                                _this.model.forms.forEach(function (form) {
                                    if (form.formUrl == 'next-of-kin') {
                                        hasboth_2 = true;
                                        form.hasNextOfKin = true;
                                        element.hasNextOfKin = true;
                                        hasboth_2 = true;
                                    }
                                });
                            }
                        });
                        _this.model.forms.forEach(function (element, index) {
                            if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                                element.isSaved = true;
                                _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                            }
                            else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                                element.isSaved = true;
                                _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                            }
                            else if (element.formUrl == "submit" && _this.auth.role == 'bm' || _this.auth.role == 'ho') {
                                element.formNm = "Process Application";
                                _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
                            }
                            else if (element.formUrl == 'next-of-kin') {
                                if (hasboth_2) {
                                    _this.model.hasNextOfKin = true;
                                    if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                                    }
                                    else {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                    }
                                }
                                else {
                                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                }
                            }
                            else if (element.formUrl == 'nominee') {
                                if (hasboth_2) {
                                    _this.model.hasNextOfKin = true;
                                    if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                                    }
                                    else {
                                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                    }
                                }
                                else {
                                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                                }
                            }
                            else {
                                _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                            }
                            if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                                _this.model.formSeq = element.formSeq;
                            }
                        });
                    }
                }
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }, function (error) {
                console.log('err In Loan Info Service');
                console.log('err', error);
            });
        }
        this.spinner.hide();
    };
    PersonalInfoComponent.prototype.getLocations = function () {
        var _this = this;
        this.loanService.getLocationsForPort(this.model.portSeq).subscribe(function (res) {
            _this.addresses = res;
            // this.addresses = res;
        }, function (error) {
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    PersonalInfoComponent.prototype.onPersonalInfoSubmit = function () {
        var _this = this;
        // return;
        console.log(this.model);
        if (this.model.firstName == null || this.model.firstName == '' ||
            this.model.motherMaidenName == null || this.model.motherMaidenName == '' ||
            this.model.phone == null || this.model.phone == '' ||
            this.model.dob == null || this.model.dob == '' ||
            this.model.genderKey == 0 || this.model.maritalStatusKey == 0 ||
            this.model.eduLvlKey == 0 || this.model.occupationKey == 0 ||
            this.model.residenceTypeKey == 0) {
            $('#basic-tab').click();
            this.toaster.warning('Fields Missing in Personal-Info');
            return;
        }
        if (+this.model.numOfDependts > +this.model.houseHoldMember) {
            this.toaster.error("Dependents can not exceed Household Members");
            $('#basic-tab').click();
            return;
        }
        // if (+this.model.numOfChidren > +this.model.numOfDependts) {
        //   this.toaster.error("Children can not exceed Dependants"); $('#basic-tab').click(); return;
        // }
        if ((+this.model.earningMembers > +this.model.houseHoldMember)) {
            this.toaster.error("Earning Members can not exceed Household Members");
            $('#basic-tab').click();
            return;
        }
        if (this.model.earningMembers <= 0) {
            this.toaster.error("Invalid Number of Earning Members");
            $('#basic-tab').click();
            return;
        }
        if (this.isMarried) {
            if (this.model.spzFirstName == null || this.model.spzFirstName == '' ||
                this.model.spzLastName == null || this.model.spzLastName == '') {
                $('#basic-tab').click();
                this.toaster.warning('Fields Missing in Spouse’s Information');
                return;
            }
        }
        else {
            if (this.model.fathrFirstName == null || this.model.fathrFirstName == '' ||
                this.model.fathrLastName == null || this.model.fathrLastName == '') {
                $('#basic-tab').click();
                this.toaster.warning('Fields Missing in Father’s Information');
                return;
            }
            this.model.sameAsFS = { firstName: this.model.fathrFirstName, lastName: this.model.fathrLastName };
        }
        if (this.model.provinceName == null || this.model.provinceName == '' || this.model.otherDetails == null || this.model.otherDetails == '' ||
            this.model.houseNum == null || this.model.houseNum == '' || this.model.village == null || this.model.village == '' || this.model.otherDetails == null || this.model.otherDetails == ''
            || this.model.sreet_area == null || this.model.sreet_area == '' || this.model.community == null || this.model.community == '') {
            $('#address-tab').click();
            this.toaster.warning('Fields Missing in Address');
            return;
        }
        else {
            this.loanService.clientAddress.provinceName = this.model.provinceName;
            this.loanService.clientAddress.distName = this.model.districtName;
            this.loanService.clientAddress.tehsilName = this.model.tehsilName;
            this.loanService.clientAddress.ucName = this.model.ucName;
            this.loanService.clientAddress.cityName = this.model.cityName;
            this.loanService.clientAddress.houseNum = this.model.houseNum;
            this.loanService.clientAddress.sreet_area = this.model.sreet_area;
            this.loanService.clientAddress.village = this.model.village;
            this.loanService.clientAddress.otherDetails = this.model.otherDetails;
            this.loanService.clientAddress.otherDetails = this.model.otherDetails;
            this.loanService.clientAddress.community = this.model.community;
        }
        if (!this.model.isPermAddress) {
            if (this.model.permAddress == null || this.model.permAddress == '') {
                $('#address-tab').click();
                this.toaster.warning('Add Permament Address');
                return;
            }
        }
        if (+this.model.yearsOfResidence <= 0 && +this.model.mnthsOfResidence <= 0) {
            $('#address-tab').click();
            this.toaster.warning('Invalid Residence Tenure in Months');
            return;
        }
        if (this.hasExpired) {
            if (this.model.tokenNum == null || this.model.tokenNum == "") {
                $('#basic-tab').click();
                this.toaster.warning('Token Number Missing');
                return;
            }
            if (this.model.tokenDate == null || this.model.tokenDate == "") {
                $('#basic-tab').click();
                this.toaster.warning('Token Date Missing');
                return;
            }
        }
        this.spinner.show();
        if (sessionStorage.getItem('editLoan') == 'true') {
            this.loanService.updatePersonalInfo(this.model).subscribe(function (res) {
                _this.spinner.hide();
                _this.toaster.success('Personal-Info Saved');
                sessionStorage.setItem("model", JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                if (error.status == 500) {
                    _this.toaster.error('Internal Server Error', 'Error!');
                }
                else {
                    _this.toaster.error(error.error.error, 'Error!');
                }
                _this.spinner.hide();
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
        else {
            this.loanService.savePersonalInfo(this.model).subscribe(function (res) {
                _this.basicCrumbs.forEach(function (element) {
                    if (_this.router.url == '/loan-origination/app/' + element.formUrl) {
                        element.isSaved = true;
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        // this.breadcrumbProvider.updateSavedStatusViaLabel(element.formNm, element.formUrl, element.isSaved);
                    }
                });
                sessionStorage.setItem('basicCrumbs', JSON.stringify(_this.basicCrumbs));
                _this.spinner.hide();
                _this.toaster.success('Personal-Info Saved');
                sessionStorage.setItem('model', JSON.stringify(_this.model));
                _this.formSaved = true;
            }, function (error) {
                _this.spinner.hide();
                if (error.status == 500) {
                    _this.toaster.error('Internal Server Error', 'Error!');
                }
                else {
                    _this.toaster.error(error.error.error, 'Error!');
                }
                console.log('err In Loan Service');
                console.log('err', error);
            });
        }
    };
    PersonalInfoComponent.prototype.continueClicked = function () {
        this.router.navigate(['loan-origination/app/loan-info']);
    };
    PersonalInfoComponent.prototype.onDOBChange = function (dob) {
        this.model.clntAge = this.calculateAge(new Date(dob));
        var date;
        if (this.model.dob) {
            date = new Date(this.model.dob);
            var month = (date.getMonth() + 1);
            if (month < 10) {
                month = '0' + month;
            }
            var day = date.getDate();
            if (day < 10) {
                day = '0' + day;
            }
            this.model.dob = date.getFullYear() + '-' + month + '-' + day;
        }
    };
    PersonalInfoComponent.prototype.onExpChange = function (dob) {
        var date;
        if (this.model.expiryDate) {
            date = new Date(this.model.expiryDate);
            var month = (date.getMonth() + 1);
            if (month < 10) {
                month = '0' + month;
            }
            var day = date.getDate();
            if (day < 10) {
                day = '0' + day;
            }
            this.model.expiryDate = date.getFullYear() + '-' + month + '-' + day;
        }
    };
    PersonalInfoComponent.prototype.calculateAge = function (birthday) {
        var ageDifMs = Date.now() - birthday.getTime();
        var ageDate = new Date(ageDifMs); // miliseconds from epoch
        return Math.abs(ageDate.getUTCFullYear() - 1970);
    };
    PersonalInfoComponent.prototype.selectAddress = function (add) {
        this.address = add;
        Object.assign(this.model, add, this.model);
    };
    PersonalInfoComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["EDUCATION"]).subscribe(function (res) {
            _this.education = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["OCCUPATION"]).subscribe(function (res) {
            _this.occupation = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["GENDER"]).subscribe(function (res) {
            _this.gender = res;
            if (sessionStorage.getItem('editLoan') != 'true') {
                if (+_this.model.cnicNum % 2) {
                    _this.model.genderKey = _this.findKeyFromValue('MALE', _this.gender);
                }
                else {
                    _this.model.genderKey = _this.findKeyFromValue('FEMALE', _this.gender);
                }
            }
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["MARITAL_STATUS"]).subscribe(function (res) {
            _this.maritalStatus = res;
            _this.maritalStatusChange();
        }, function (error) {
            console.log('err', error);
        });
        // this.disability = this.lovService("OCCUPATION");
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["NATURE_OF_DISABILITY"]).subscribe(function (res) {
            _this.disability = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["RESIDENCE"]).subscribe(function (res) {
            _this.residenceArray = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getCommunityForPort(this.model.portKey).subscribe(function (res) {
            _this.communityArray = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    PersonalInfoComponent.prototype.lovService = function (name) {
        this.commonService.getValues(name).subscribe(function (res) {
            return res;
        }, function (error) {
            console.log('err', error);
        });
    };
    PersonalInfoComponent.prototype.findValueFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == key) {
                    return array[i].codeValue;
                }
            }
        }
    };
    PersonalInfoComponent.prototype.onlyLetters = function (event) {
        var pattern = /[a-zA-Z ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    PersonalInfoComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    PersonalInfoComponent.prototype.phoneNumber = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
        if (this.clientPhone == null)
            this.clientPhone = "";
        if (this.clientPhone.length == 0)
            this.clientPhone = "(" + this.clientPhone;
        if (this.clientPhone.length == 5)
            this.clientPhone = this.clientPhone + ")";
        if (this.clientPhone.length < 13) {
            this.model.phone = this.clientPhone.replace(/[()]/g, '');
            this.model.phone = this.clientPhone.replace(/ /g, '');
            this.model.phone = this.model.phone + event.key;
        }
    };
    PersonalInfoComponent.prototype.alphaNumeric = function (event) {
        var pattern = /[0-9a-zA-Z/ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    PersonalInfoComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeValue == value) {
                    return array[i].codeKey;
                }
            }
        }
    };
    PersonalInfoComponent.prototype.selfPdcChange = function () {
        this.loanService.selfPDC = this.model.selfPDC;
    };
    PersonalInfoComponent.prototype.disabilityChange = function () {
        if (!this.model.disableFlag)
            this.model.natureDisabilityKey = null;
    };
    PersonalInfoComponent.prototype.PermAddressChange = function () {
        if (this.model.isPermAddress) {
            this.model.permAddress = "";
        }
    };
    PersonalInfoComponent.prototype.checkValidity = function (val1, val2) {
        if (val1 > val2) {
            return true;
        }
        return false;
    };
    PersonalInfoComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-personal-info',
            template: __webpack_require__(/*! ./personal-info.component.html */ "./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.html"),
            styles: [__webpack_require__(/*! ./personal-info.component.css */ "./src/app/pages/loan-origination/loan-app/personal-info/personal-info.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_12__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_11__["MomentDateAdapter"], deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_12__["MAT_DATE_LOCALE"]] },
                // { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_12__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
                // { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },
                { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_12__["DateAdapter"], useClass: src_app_shared_adapters_moment_date_adapter__WEBPACK_IMPORTED_MODULE_14__["MomentUtcDateAdapter"] },
                { provide: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_11__["MAT_MOMENT_DATE_ADAPTER_OPTIONS"], useValue: { useUtc: true } }
            ],
        }),
        __metadata("design:paramtypes", [_shared_services_loan_service__WEBPACK_IMPORTED_MODULE_1__["LoanService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _shared_services_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_6__["BreadcrumbProvider"], ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"]])
    ], PersonalInfoComponent);
    return PersonalInfoComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/psc/psc.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/psc/psc.component.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/psc/psc.component.html":
/*!************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/psc/psc.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n\r\n    <form (ngSubmit)=\"onPscFormSubmit()\" [formGroup]=\"pscForm\">\r\n      <div class=\"content\">\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-3\">\r\n            <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n          </div>\r\n\r\n          <div class=\"col-sm-3 mt-3\" *ngIf=\"model.previousPscScore>0\">\r\n            <label>\r\n              <b>Previous Poverty Score: {{model.previousPscScore}}</b>\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"col-sm-3 mt-3\">\r\n            <label>\r\n              <b>Aggregated Poverty Score: {{score}}</b>\r\n            </label>\r\n          </div>\r\n\r\n          \r\n\r\n        </div>\r\n        <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n        <div formArrayName=\"questionArray\" *ngFor=\"let order of pscForm['controls'].questionArray['controls']; let i = index\">\r\n          <!--<div class=\"cRow\" *ngFor=\"let question of model.questions;trackBy: customTrackBy; let i = index; \">-->\r\n\r\n              <mat-label>{{model.questions[i].questionString}}\r\n                <span class=\"colorRed\">*</span>\r\n              </mat-label>\r\n              <mat-form-field>\r\n                <mat-select [disabled]=\"readonly\" (selectionChange)=\"onAnswerSelect(i)\" placeholder=\"Select One: \" [formControlName]=\"i\">\r\n\r\n                  <mat-option *ngFor=\"let answer of model.questions[i].answers;\"\r\n                  [value]=\"answer.answerKey\">\r\n                  {{answer.answerString}}\r\n                  </mat-option>\r\n\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <!--<select class=\"form-control\" [formControlName]=\"i\" name=\"answerSeq\">-->\r\n                <!--<option *ngFor=\"let answer of model.questions[i].answers\" [value]=\"answer.answerKey\">{{answer.answerKey}}{{answer.answerString}}</option>-->\r\n              <!--</select>-->\r\n            </div>\r\n          <!--</div>-->\r\n\r\n        </div>\r\n        </div>\r\n            <!--<mat-form-field>-->\r\n              <!--<mat-select (selectionChange)=\"onAnswerSelect(question)\" placeholder=\"Select One:\"-->\r\n                          <!--[(ngModel)]=\"question.answerSeq\" name=\"answerSeq\"-->\r\n                          <!--required>-->\r\n                <!--<mat-option *ngFor=\"let answer of question.answers;\"-->\r\n                            <!--[value]=\"answer.answerKey\">-->\r\n                  <!--{{answer.answerString}}-->\r\n                <!--</mat-option>-->\r\n              <!--</mat-select>-->\r\n            <!--</mat-form-field>-->\r\n\r\n\r\n            <!--<mat-form-field>-->\r\n            <!--<mat-select placeholder=\"Select One:\">-->\r\n            <!--<mat-option *ngFor=\"let answer of question.answers;\" [value]=\"answer.answerKey\">-->\r\n            <!--{{answer.answerString}}-->\r\n            <!--</mat-option>-->\r\n            <!--</mat-select>-->\r\n            <!--</mat-form-field>-->\r\n\r\n            <!--<ng-select-->\r\n            <!--[items]=\"question.answers\"-->\r\n            <!--bindLabel=\"answerString\"-->\r\n            <!--bindValue=\"answerKey\"-->\r\n            <!--placeholder=\"Select one: \">-->\r\n            <!--</ng-select>-->\r\n            <!-- <ng-select [items]=\"question.answers\" required bindLabel=\"answerString\" bindValue=\"answerKey\" placeholder=\"Select One\" (change)=\"onAnswerSelect(question)\"\r\n              name=\"answerString\" [(ngModel)]=\"question.answerSeq\">\r\n            </ng-select> -->\r\n\r\n        <!-- <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>Education level of Head of Family</label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">Never attended school</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>Children schooling status of Age (5-16) Years <span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">There are no children between 5 and 16 years old in the household</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>No. of Residential Room <span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">0</option>\r\n            <option value=\"\">1</option>\r\n            <option value=\"\">2</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>Type of toilet in Use <span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">Flush connected to a public sewerage,  to a pit or to an open drain</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>Does the household own at least one refrigerator, freezer or washing machine  <span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">Yes</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>Does the household own at least one Air Conditioner/Geyser/Heater?  <span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">Yes</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>Does the household own at least one cooking stove or microwave? <span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">Yes</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"cRow\">\r\n        <div class=\"cCol3\">\r\n          <label>Does the household own an engine driven Vehicle  <span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-control\">\r\n            <option value=\"\">Yes</option>\r\n          </select>\r\n        </div>\r\n      </div> -->\r\n\r\n\r\n\r\n        <div class=\"mt-5 mb-5\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"continueClicked()\">Continue</button>\r\n          <button class=\"btn btn-default\" [disabled]=\"readonly\" type=\"submit\" >Save</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</main>\r\n"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/psc/psc.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/psc/psc.component.ts ***!
  \**********************************************************************/
/*! exports provided: PscComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PscComponent", function() { return PscComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var PscComponent = /** @class */ (function () {
    function PscComponent(router, loanService, spinner, breadcrumbProvider, toaster, fb) {
        this.router = router;
        this.loanService = loanService;
        this.spinner = spinner;
        this.breadcrumbProvider = breadcrumbProvider;
        this.toaster = toaster;
        this.fb = fb;
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.questions = [];
        this.questionsKeys = [];
        this.formSaved = false;
        this.score = 0;
    }
    PscComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        // this.loanService.breadcrumbs.forEach(
        //   breadcrumb => this.breadcrumbProvider.addCheckedItem(breadcrumb.label, breadcrumb.href, breadcrumb.isSaved)
        // );
        this.spinner.hide();
        this.model = JSON.parse(sessionStorage.getItem('model'));
        console.log(this.model.previousPscScore);
        // console.log(this.model);
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        this.loanService.getQuestionAndAnswer().subscribe(function (res) {
            // console.log(this.questions);
            _this.model.questions = res;
            _this.questions = res;
            _this.model.questions.forEach(function (obj) {
                obj.questionSeq = obj.questionKey;
                obj.loanAppSeq = _this.model.loanAppSeq;
                obj.formSeq = _this.model.formSeq;
            });
            // if (sessionStorage.getItem('editLoan') === 'true') {
            _this.formSaved = true;
            _this.loanService.getPSC(_this.model.loanAppSeq).subscribe(function (ress) {
                console.log('here');
                console.log(ress);
                // console.log('questions here');
                if (ress.length) {
                    var _loop_1 = function (i) {
                        ress.forEach(function (r) {
                            if (r.questionSeq == _this.model.questions[i].questionKey) {
                                _this.model.questions[i].answerSeq = r.answerSeq;
                                _this.questions[i].answerSeq = r.answerSeq;
                                _this.questions[i].loanAppSeq = _this.model.loanAppSeq;
                                _this.questionsKeys.push(r.answerSeq);
                            }
                        });
                    };
                    for (var i = 0; i < _this.model.questions.length; i++) {
                        _loop_1(i);
                    }
                }
                // console.log(this.questionsKeys);
                _this.createForm();
                _this.calculatePscScore();
                // console.log(this.model.questions);
            }, function (error) {
                console.log('err', error);
            });
            // }
        }, function (error) {
            console.log('err', error);
        });
    };
    PscComponent.prototype.createForm = function () {
        console.log('create form');
        console.log(this.model.questions);
        this.controls = this.model.questions.map(function (c) { return new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](c.answerSeq, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required); });
        this.pscForm = this.fb.group({
            questionArray: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormArray"](this.controls)
        });
        // const group = this.fb.group({});
        // this.questions.forEach(question => {
        //   group.addControl('question' + question.questionKey,
        //     new FormControl({value: question.answerSeq }, Validators.required));
        // });
        // return group;
    };
    PscComponent.prototype.continueClicked = function () {
        var _this = this;
        // this.router.navigate(['loan-origination/documents']);
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                    _this.router.navigate(['/loan-origination/app/' + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    PscComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedPsc', this.formSaved.toString());
    };
    PscComponent.prototype.customTrackBy = function (index, obj) {
        return index;
    };
    PscComponent.prototype.saveClicked = function () {
    };
    PscComponent.prototype.onAnswerSelect = function (event) {
        console.log(event);
        var v = this.pscForm.value.questionArray[event];
        this.model.questions[event].answerSeq = v;
        console.log(v);
        this.calculatePscScore();
    };
    PscComponent.prototype.calculatePscScore = function () {
        this.score = 0;
        for (var i = 0; i < this.model.questions.length; i++) {
            if (this.model.questions[i].answerSeq) {
                for (var z = 0; z < this.model.questions[i].answers.length; z++) {
                    if (this.model.questions[i].answers[z].answerKey == this.model.questions[i].answerSeq) {
                        this.score = this.score + this.model.questions[i].answers[z].answerScore;
                    }
                }
            }
        }
    };
    PscComponent.prototype.onPscFormSubmit = function () {
        var _this = this;
        this.spinner.show();
        console.log(this.model.loanAppSeq);
        for (var i = 0; i < this.model.questions.length; i++) {
            this.questions[i].pscScore = this.score;
            this.questions[i].loanAppSeq = this.model.loanAppSeq;
        }
        this.loanService.savePSC(this.model.questions).subscribe(function (res) {
            _this.spinner.hide();
            _this.toaster.success('Saved');
            // console.log(res);
            if (_this.model.forms) {
                _this.model.forms.forEach(function (forms) {
                    if ('/loan-origination/app/' + forms.formUrl == _this.router.url) {
                        forms.isSaved = true;
                        _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                    }
                });
            }
            sessionStorage.setItem('model', JSON.stringify(_this.model));
            // console.log('model here');
            // console.log(JSON.stringify(this.model));
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.error, 'Error');
            console.log('err', error);
        });
    };
    PscComponent.prototype.calculateScore = function () {
    };
    PscComponent.prototype.trackByIndex = function (index, obj) {
        return index;
    };
    PscComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-psc',
            template: __webpack_require__(/*! ./psc.component.html */ "./src/app/pages/loan-origination/loan-app/psc/psc.component.html"),
            styles: [__webpack_require__(/*! ./psc.component.css */ "./src/app/pages/loan-origination/loan-app/psc/psc.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_4__["BreadcrumbProvider"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"]])
    ], PscComponent);
    return PscComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.css":
/*!*************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.css ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".example-month-picker .mat-calendar-period-button {\r\n    pointer-events: none;\r\n  }\r\n  \r\n  .example-month-picker .mat-calendar-arrow {\r\n    display: none;\r\n  }\r\n  \r\n  .dot {\r\n    margin-right: 5px;\r\n    height: 8px;\r\n    width: 8px;\r\n    \r\n    border-radius: 50%;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .green{\r\n    background-color: #0ed30e;\r\n  }\r\n  \r\n  .orange{\r\n    background-color:#f89a3b;\r\n  }"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.html":
/*!**************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"content\">\r\n      <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n      <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n        <li class=\"nav-item\"> <a class=\"nav-link active\" id=\"basic-tab\" data-toggle=\"tab\" href=\"#basincinfo\" role=\"tab\"\r\n            aria-controls=\"home\" aria-selected=\"true\"><span *ngIf=\"model.schoolAppraisal.hasBasic\"\r\n              class=\"dot green\"></span><span *ngIf=\"!model.schoolAppraisal.hasBasic\" class=\"dot orange\"></span>Basic\r\n            Info</a> </li>\r\n        <li class=\"nav-item\"> <a class=\"nav-link\" id=\"address-tab\" data-toggle=\"tab\" href=\"#addressTab\" role=\"tab\"\r\n            aria-controls=\"addressTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolAppraisal.hasAddress\"\r\n              class=\"dot green\"></span><span *ngIf=\"!model.schoolAppraisal.hasAddress\" class=\"dot orange\"></span>School\r\n            Address Details</a> </li>\r\n        <li class=\"nav-item\"> <a class=\"nav-link\" id=\"GradeDetails-tab\" data-toggle=\"tab\" href=\"#GradeDetailsTab\"\r\n            role=\"tab\" aria-controls=\"addressTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolAppraisal.hasGrade\"\r\n              class=\"dot green\"></span><span *ngIf=\"!model.schoolAppraisal.hasGrade\" class=\"dot orange\"></span>Grade\r\n            Details</a> </li>\r\n        <li class=\"nav-item\"> <a class=\"nav-link\" id=\"attendance-tab\" data-toggle=\"tab\" href=\"#attendanceTab\" role=\"tab\"\r\n            aria-controls=\"addressTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolAppraisal.hasAttend\"\r\n              class=\"dot green\"></span><span *ngIf=\"!model.schoolAppraisal.hasAttend\" class=\"dot orange\"></span>Staff\r\n            Profile</a> </li>\r\n        <li class=\"nav-item\"> <a class=\"nav-link\" id=\"incomeid\" data-toggle=\"tab\" href=\"#incomeTab\" role=\"tab\"\r\n            aria-controls=\"incomeTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolAppraisal.hasIncome\"\r\n              class=\"dot green\"></span><span *ngIf=\"!model.schoolAppraisal.hasIncome\"\r\n              class=\"dot orange\"></span>Income</a> </li>\r\n        <li class=\"nav-item\"> <a class=\"nav-link\" id=\"expensesid\" data-toggle=\"tab\" href=\"#expensesTab\" role=\"tab\"\r\n            aria-controls=\"expensesTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolAppraisal.hasExpense\"\r\n              class=\"dot green\"></span><span *ngIf=\"!model.schoolAppraisal.hasExpense\"\r\n              class=\"dot orange\"></span>Expenses</a> </li>\r\n        <!-- <li class=\"nav-item\"> <a class=\"nav-link\" id=\"school-quality\" data-toggle=\"tab\" href=\"#schoolqualityTab\" role=\"tab\"\r\n            aria-controls=\"schoolqualityTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolAppraisal.hasQltyChck\" class=\"dot green\"></span><span *ngIf=\"!model.schoolAppraisal.hasQltyChck\" class=\"dot orange\"></span>School Quality Questionnaire</a> </li> -->\r\n      </ul>\r\n      <form (ngSubmit)=\"onSubmit()\" #schoolAppraisalForm=\"ngForm\">\r\n        <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"basincinfo\" role=\"tabpanel\" aria-labelledby=\"basic-tab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" maxlength=\"30\" matInput [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Name: *\"\r\n                    name=\"schNm\" [(ngModel)]=\"model.schoolAppraisal.schNm\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Ownership: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.schOwnTypKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"schOwnTypKey\">\r\n                    <mat-option *ngFor=\"let edu of schoolOwnerShip\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Relation with Owner: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.relWthOwnKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"relWthOwnKey\">\r\n                    <mat-option *ngFor=\"let edu of relation\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Principal: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.schPpalKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"schPpalKey\">\r\n                    <mat-option *ngFor=\"let edu of principal\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Building Ownership Status: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.bldngOwnKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"bldngOwnKey\">\r\n                    <mat-option *ngFor=\"let edu of buildingOwnerShip\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"PEF Supported School: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.pefSptFlg\" [errorStateMatcher]=\"matcher\" pattern=\"^[0-9]\\d*$\"\r\n                    name=\"pefSptFlg\">\r\n                    <mat-option *ngFor=\"let edu of boolean\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Type: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.schTypKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"schTypKey\">\r\n                    <mat-option *ngFor=\"let edu of schoolType\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Level: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.schLvlKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"schLvlKey\">\r\n                    <mat-option *ngFor=\"let edu of schoolLevel\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Medium: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.schMedmKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"schMedmKey\">\r\n                    <mat-option *ngFor=\"let edu of schoolMedium\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Area Units: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.schAreaUntKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                    name=\"schAreaUntKey\">\r\n                    <mat-option *ngFor=\"let edu of schoolArea\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" maxlength=\"3\" placeholder=\"School Area: *\" (keypress)=\"onlyNumbers($event)\"\r\n                    matInput [disabled]=\"readonly && auth.role!='admin'\" [errorStateMatcher]=\"matcher\" #schArea=\"ngModel\" name=\"schArea\"\r\n                    pattern=\"^[1-9]\\d*$\" [(ngModel)]=\"model.schoolAppraisal.schArea\">\r\n                  <mat-error *ngIf=\"schArea.invalid\">\r\n                    School Area is <strong>invalid</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <!-- <mat-form-field>\r\n                  <input [(ngModel)]=\"this.model.schoolAppraisal.yearSchlEst\" [matDatepicker]=\"dp\" placeholder=\"Year of School Establishment\"  matInput>\r\n                  <mat-datepicker-toggle matSuffix [for]=\"dp\"  (change)=\"calculateSchoolAge()\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event, dp)\" (monthSelected)=\"chosenMonthHandler($event, dp)\"\r\n                    panelClass=\"example-month-picker\">\r\n                  </mat-datepicker>\r\n                </mat-form-field> -->\r\n                <mat-form-field>\r\n                  <input matInput [matDatepicker]=\"dp\" readonly [max]=\"yearBefore\"\r\n                    placeholder=\"Year of School Establishment: *\" name=\"yearBefore\" [(ngModel)]=\"date\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event, dp)\"\r\n                    (monthSelected)=\"chosenMonthHandler($event, dp)\" panelClass=\"example-month-picker\">\r\n                  </mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <mat-select [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"Is School Registered: *\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.schRegdFlg\" [errorStateMatcher]=\"matcher\" pattern=\"^[0-9]\\d*$\"\r\n                    name=\"schRegdFlg\">\r\n                    <mat-option *ngFor=\"let edu of boolean\" [value]=\"edu.codeKey\">\r\n                      {{edu.codeValue}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"cCol1\"  *ngIf=\"model.schoolAppraisal.schRegdFlg\">\r\n                  <mat-form-field>\r\n                      <input type=\"text\" maxlength=\"50\"  matInput\r\n                        [disabled]=\"readonly && auth.role!='admin'\" placeholder=\"School Registeration: *\" name=\"schRegdAgy\"\r\n                        [(ngModel)]=\"model.schoolAppraisal.schRegdAgy\">\r\n                    </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"addressTab\" role=\"tabpanel\" aria-labelledby=\"address-tab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input matInput readonly id=\"province\" name=\"province\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.addressDto.provinceName\" readonly placeholder=\"Province: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input matInput readonly id=\"district\" name=\"district\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.addressDto.districtName\" readonly placeholder=\"District: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input matInput readonly id=\"tehsil\" name=\"tehsil\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.addressDto.tehsilName\" readonly placeholder=\"Tehsil: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input matInput readonly id=\"uc\" name=\"uc\" [(ngModel)]=\"model.schoolAppraisal.addressDto.ucName\"\r\n                    readonly placeholder=\"UC: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 \">\r\n                <mat-form-field>\r\n                  <input matInput readonly id=\"city\" name=\"city\" [(ngModel)]=\"model.schoolAppraisal.addressDto.cityName\"\r\n                    readonly placeholder=\"City: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1 mt-3\">\r\n                <button type=\"button\" class=\"btn btn-dots\" data-toggle=\"modal\" data-target=\"#Location\"></button>\r\n                <div class=\"modal fade\" id=\"Location\" role=\"dialog\">\r\n                  <div class=\"modal-dialog bigger mymodal\">\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                      <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">Location </h5>\r\n                      </div>\r\n                      <div class=\"modal-body\">\r\n                        <div class=\"table-responsive\">\r\n                          <table class=\"table last-left\">\r\n                            <thead class=\"thead-light last-left\">\r\n                              <tr>\r\n                                <th>Province</th>\r\n                                <th>District</th>\r\n                                <th>Tehsil</th>\r\n                                <th width=\"20%\">UC</th>\r\n                                <th>City</th>\r\n                                <th>Select</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody class=\"evenodd\">\r\n                              <tr *ngFor=\"let address of addresses\">\r\n                                <td>{{address.provinceName}} </td>\r\n                                <td>{{address.districtName}}</td>\r\n                                <td>{{address.tehsilName}}</td>\r\n                                <td>{{address.ucName}}</td>\r\n                                <td>{{address.cityName}}</td>\r\n                                <td>\r\n                                  <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary btn-min\"\r\n                                    (click)=\"selectAddress(address)\">Select</button>\r\n                                </td>\r\n                              </tr>\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" value=\"\" id=\"houseNum\" name=\"houseHum\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.addressDto.houseNum\" matInput placeholder=\"House Number: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" value=\"\" id=\"street\" name=\"street\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.addressDto.sreet_area\" matInput placeholder=\"Street/Area: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <ng-select [disabled]=\"readonly && auth.role!='admin'\" [items]=\"communityArray\" required bindLabel=\"cmntyNm\"\r\n                  bindValue=\"cmntySeq\" name=\"cmntyNm\" placeholder=\"Select Community\" [(ngModel)]=\"model.schoolAppraisal.addressDto.community\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" value=\"\" id=\"village\" name=\"village\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.addressDto.village\" matInput placeholder=\"Village\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input [disabled]=\"readonly && auth.role!='admin'\" type=\"text\" id=\"other\" name=\"other\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.addressDto.otherDetails\" matInput placeholder=\"Other Details: *\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"attendanceTab\" role=\"tabpanel\" aria-labelledby=\"basic-tab\">\r\n            <!-- <h6 class=\"colorBlack\">Revenue & Attendance in School</h6> -->\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [disabled]=\"readonly && auth.role!='admin'\" matInput [errorStateMatcher]=\"matcher\"\r\n                    (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" name=\"totMaleTchrs\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.totMaleTchrs\" (change)=\"calculateStRatio()\"\r\n                    placeholder=\"Total Male Teachers: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" [errorStateMatcher]=\"matcher\" name=\"totFemTchrs\"\r\n                    (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" [(ngModel)]=\"model.schoolAppraisal.totFemTchrs\"\r\n                    (change)=\"calculateStRatio()\" placeholder=\"Total Female Teachers: *\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput [disabled]=\"readonly\" name=\"totalteachers\"\r\n                    [value]=\"(+model.schoolAppraisal.totFemTchrs) + (+model.schoolAppraisal.totMaleTchrs)  | number:'1.0-0'\"\r\n                    disabled placeholder=\"Total Teachers\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput [disabled]=\"readonly\" [errorStateMatcher]=\"matcher\" name=\"stRatio\"\r\n                    [value]=\"getTotal() | number:'1.0-0'\"\r\n                    disabled placeholder=\"Average Students per Teacher\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" matInput [disabled]=\"readonly && auth.role!='admin'\" [errorStateMatcher]=\"matcher\"\r\n                      (change)=\"calculateStRatio()\" name=\"lastYrDrop\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\"\r\n                      [(ngModel)]=\"model.schoolAppraisal.lastYrDrop\" placeholder=\"Last Year Dropout Students: *\">\r\n                  </mat-form-field>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"GradeDetailsTab\" role=\"tabpanel\" aria-labelledby=\"basic-tab\">\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"model.schoolAppraisal.schoolGradeDtos.length\" placeholder=\"Total Grades\"\r\n                    matInput disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <!-- <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"10\" [value]=\"totalGrade.avgFee\"\r\n                    placeholder=\"Total Average Class Fee\" matInput disabled>\r\n                </mat-form-field>\r\n              </div> -->\r\n              <!-- <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" [value]=\"totalGrade.femStdntPrsnt\"\r\n                    placeholder=\"Total Present Girls\" matInput disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"totalGrade.maleStdntPrsnt\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\"\r\n                    placeholder=\"Total Present Boys\" matInput disabled>\r\n                </mat-form-field>\r\n              </div> -->\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"totalGrade.totFemStdnt\" placeholder=\"Total girls in school\" matInput\r\n                     disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"totalGrade.totMaleStdnt\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\"\r\n                    placeholder=\"Total boys in school\" matInput  disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"totalGrade.totalStudents\" placeholder=\"Total School Strength\" matInput\r\n                     disabled>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"cRow\">\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"totalGrade.girlsAverage\" placeholder=\"% of Girls\" matInput\r\n                     disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"totalGrade.classAverageFee\" placeholder=\"Average School Fee\" matInput\r\n                     disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" [value]=\"totalGrade.schoolRevenue\" placeholder=\"School Revenue\" matInput\r\n                     disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"cCol1\">\r\n                <mat-form-field>\r\n                  <input type=\"text\" matInput readonly disabled [errorStateMatcher]=\"matcher\"\r\n                    (change)=\"calculateStRatio()\" name=\"lastYrDroprd\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\"\r\n                    [(ngModel)]=\"model.schoolAppraisal.lastYrDrop\" placeholder=\"Last Year Dropout Students: *\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-sm-6\">\r\n                <h6 class=\"colorBlack\">Grade Details</h6>\r\n              </div>\r\n              <div class=\"col-sm-6 addBtn\">\r\n                <button class=\"btn btn-primary btn-sm\" [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" (click)=\"openAddGrade()\"><i class=\"fa fa-plus\"></i>\r\n                  Add</button>\r\n                <div class=\"modal fade\" id=\"GradeDetails\" role=\"dialog\">\r\n                  <div class=\"modal-dialog big mymodal\">\r\n\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                      <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">Grade Details</h5>\r\n                      </div>\r\n                      <form class=\"md-float-material\" [formGroup]=\"schoolGradeForm\" (ngSubmit)=\"onSubmitGrade()\">\r\n                        <div class=\"modal-body text-left\">\r\n                          <div class=\"cRow\">\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <mat-select placeholder=\"Grade\" (keypress)=\"onlyNumbers($event)\"\r\n                                  formControlName=\"grdKey\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                                  name=\"grdKey\">\r\n                                  <mat-option *ngFor=\"let edu of grade\" [value]=\"edu.codeKey\">\r\n                                    {{edu.codeValue}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" matInput  (keypress)=\"onlyNumbers($event)\"\r\n                                  maxlength=\"10\" placeholder=\"Class Fee\" formControlName=\"avgFee\"\r\n                                  [errorStateMatcher]=\"matcher\">\r\n                                <mat-error *ngIf=\"!schoolGradeForm.get('avgFee').valid\">\r\n                                  Class Fee is <strong></strong>\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" \r\n                                  matInput placeholder=\"Females Enrolled\" formControlName=\"totFemStdnt\"\r\n                                  [errorStateMatcher]=\"matcher\">\r\n                                <mat-error *ngIf=\"!schoolGradeForm.get('totFemStdnt').valid\">\r\n                                  Females Enrolled is <strong>invalid</strong>\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" \r\n                                  matInput placeholder=\"Males Enrolled\" formControlName=\"totMaleStdnt\"\r\n                                  [errorStateMatcher]=\"matcher\">\r\n                                <mat-error *ngIf=\"!schoolGradeForm.get('totMaleStdnt').valid\">\r\n                                  Males Enrolled is <strong>invalid</strong>\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <!-- <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" matInput placeholder=\"Female Students Present\"\r\n                                  formControlName=\"femStdntPrsnt\" [errorStateMatcher]=\"matcher\">\r\n                                <mat-error *ngIf=\"!schoolGradeForm.get('femStdntPrsnt').valid\">\r\n                                  Female Students Present is <strong></strong>\r\n                                </mat-error>\r\n                                <mat-hint *ngIf=\"+schoolGradeForm.get('totFemStdnt').value<+schoolGradeForm.get('femStdntPrsnt').value\" style=\"color: red;\">Female Students Present must be less than\r\n                                  <strong>Total Female Students</strong>\r\n                                </mat-hint>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" matInput placeholder=\"Male Students Present\"\r\n                                  formControlName=\"maleStdntPrsnt\" [errorStateMatcher]=\"matcher\">\r\n                                <mat-error *ngIf=\"!schoolGradeForm.get('maleStdntPrsnt').valid\">\r\n                                  Male Students Present is <strong></strong>\r\n                                </mat-error>\r\n                                <mat-hint *ngIf=\"+schoolGradeForm.get('totMaleStdnt').value<+schoolGradeForm.get('maleStdntPrsnt').value\" style=\"color: red;\">Male Students Present must be less than\r\n                                  <strong>Total Male Students</strong>\r\n                                </mat-hint>\r\n                              </mat-form-field>\r\n                            </div> -->\r\n                            <div class=\"cCol2\">\r\n                              <mat-form-field>\r\n                                <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" matInput\r\n                                   placeholder=\"Students Paying No Fee\"\r\n                                  formControlName=\"noFeeStdnt\" [errorStateMatcher]=\"matcher\">\r\n                                <mat-error *ngIf=\"!schoolGradeForm.get('noFeeStdnt').valid\">\r\n                                  Students Paying No Fee is <strong></strong>\r\n                                </mat-error>\r\n                                <mat-hint\r\n                                  *ngIf=\"(+schoolGradeForm.get('totFemStdnt').value + +schoolGradeForm.get('totMaleStdnt').value) < +schoolGradeForm.get('noFeeStdnt').value\"\r\n                                  style=\"color: red;\">Students Paying no fee must be less than\r\n                                  <strong> Total Students</strong>\r\n                                </mat-hint>\r\n                              </mat-form-field>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"modal-footer text-center\">\r\n                          <button type=\"submit\" [disabled]=\"!schoolGradeForm.valid\"\r\n                            class=\"btn btn-primary btn-min\">Ok</button>\r\n                          <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th>Grade</th>\r\n                    <th>Class Fee</th>\r\n                    <th>Females Enrolled</th>\r\n                    <th>Males Enrolled</th>\r\n                    <!-- <th>Female Students Present</th>\r\n                    <th>Male Students Present</th> -->\r\n                    <th>Students Paying No Fee</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let grd of model.schoolAppraisal.schoolGradeDtos; let i=index\">\r\n                    <td>{{findValueFromKey(grd.grdKey, gradeOrig)}}</td>\r\n                    <td>{{grd.avgFee | currency:'PKR':''}}</td>\r\n                    <td>{{grd.totFemStdnt}}</td>\r\n                    <!-- <td>{{grd.totMaleStdnt}}</td>\r\n                    <td>{{grd.femStdntPrsnt}}</td> -->\r\n                    <td>{{grd.totMaleStdnt}}</td>\r\n                    <td>{{grd.noFeeStdnt}}</td>\r\n                    <td><button  [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" (click)=\"editGrade(grd , i)\" class=\"iconBtn simplebtn\"><i class=\"fa fa-pencil\"></i></button>\r\n                      <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" (click)=\"deleteGrade(i, grd)\" class=\"iconBtn delBtn simplebtn\"><i class=\"fa fa-trash-o\"></i></button>\r\n                      <!-- <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a> -->\r\n                    </td>\r\n                  </tr>\r\n                  <!--<tr>-->\r\n                  <!--<td>A</td>-->\r\n                  <!--<td>2000</td>-->\r\n                  <!--<td>100</td>-->\r\n                  <!--<td>150</td>-->\r\n                  <!--<td>85</td>-->\r\n                  <!--<td>85</td>-->\r\n                  <!--<td>10</td>-->\r\n                  <!--<td><a (click)=\"editGrade({}, 1)\" class=\"iconBtn simplebtn \"><i class=\"fa fa-pencil\"></i></a>-->\r\n                  <!--<a (click)=\"deleteGrade(1)\" class=\"iconBtn delBtn\"><i class=\"fa fa-trash-o\"></i></a>-->\r\n                  <!--<a href=\"#\" class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>-->\r\n                  <!--</td>-->\r\n                  <!--</tr>-->\r\n\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"incomeTab\" role=\"tabpanel\" aria-labelledby=\"incomeTab\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">School Income</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" [disabled]=\"readonly && auth.role!='admin'\" (click)=\"addPrimaryIncome()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n                    <div class=\"modal fade\" id=\"addPrimaryIncome\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onPrimaryIncomeFormSubmit()\" #primaryIncomeForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Other Income</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select placeholder=\"Income Type\"\r\n                                      [(ngModel)]=\"primaryIncome.incomeTypeKey\" [errorStateMatcher]=\"matcher\"\r\n                                      pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of incomeType\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput  type=\"text\" pattern=\"\\d*\" min=\"0\"\r\n                                      maxlength=\"10\" id=\"primaryIncome\" name=\"primaryIncome\"\r\n                                      [(ngModel)]=\"primaryIncome.incomeAmount\" [errorStateMatcher]=\"matcher\"\r\n                                      (keypress)=\"onlyNumbers($event)\" placeholder=\"Amount\"\r\n                                      #primaryIncomeAmount=\"ngModel\" required>\r\n                                    <mat-error *ngIf=\"primaryIncomeAmount.invalid\">\r\n                                      Income is <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!primaryIncomeForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Income Type</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let primary of model.schoolAppraisal.primaryIncome\">\r\n                        <td>{{findValueFromKey(primary.incomeTypeKey, incomeTypeOrig)}}</td>\r\n                        <td>{{primary.incomeAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button  type=\"button\" (click)=\"editPIncome(primary)\" class=\"iconBtn simplebtn\">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button  type=\"button\" (click)=\"deletePIncome(primary)\" class=\"iconBtn delBtn simplebtn\">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total School Income:</b>\r\n                        </td>\r\n                        <td>\r\n                          <input type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalPrimaryIncome  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Secondary Income</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\"  (click)=\"addSecondaryIncome()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"addSecondaryIncome\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onSecondaryIncomeFormSubmit()\" #secondaryIncomeForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Secondary Income</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select  placeholder=\"Income Source\"\r\n                                      [(ngModel)]=\"secondaryIncome.incomeTypeKey\" [errorStateMatcher]=\"matcher\"\r\n                                      pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of secondaryIncomeArray\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput  type=\"text\" pattern=\"\\d*\" min=\"0\"\r\n                                      maxlength=\"10\" id=\"secondryIncomeAmount\" name=\"secondryIncomeAmount\"\r\n                                      [(ngModel)]=\"secondaryIncome.incomeAmount\" [errorStateMatcher]=\"matcher\"\r\n                                      (keypress)=\"onlyNumbers($event)\" placeholder=\"Amount\"\r\n                                      #secondryIncomeAmount=\"ngModel\" required>\r\n                                    <mat-error *ngIf=\"secondryIncomeAmount.invalid\">\r\n                                      secondary income is <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!secondaryIncomeForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Income Source</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let secondary of model.schoolAppraisal.secondaryIncome\">\r\n                        <td>{{findValueFromKey(secondary.incomeTypeKey, secondaryIncomeArrayOrig)}}</td>\r\n                        <td>{{secondary.incomeAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button  type=\"button\" (click)=\"editSIncome(secondary)\" class=\"iconBtn simplebtn\">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button  type=\"button\" (click)=\"deleteSIncome(secondary)\" class=\"iconBtn delBtn simplebtn\">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a href=\"#\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-history\"></i>\r\n                          </a> -->\r\n                        </td>\r\n                      </tr>\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Secondary Income:</b>\r\n                        </td>\r\n                        <td>\r\n                          <input type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalSecondaryIncome  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"expensesTab\" role=\"tabpanel\" aria-labelledby=\"expensesTab\">\r\n            <div class=\"profitwrap\">\r\n              <div class=\"profitbx text-right mb-2 ml-2\">\r\n                <div>\r\n                  <b>Total School Profit: {{totalGrade.schoolRevenue - +totalBusinessExpense | currency:'PKR':''}}</b>\r\n                </div>\r\n              </div>\r\n              <div class=\"profitbx text-right mb-2\">\r\n                <div>\r\n                  <b>Net Desposible Income: {{totalGrade.schoolRevenue + (+totalPrimaryIncome) + (+totalSecondaryIncome)\r\n                    - (+totalBusinessExpense) - (+totalHouseholdExpense) | currency:'PKR':''}}</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"clearfix\"></div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">School Expenses</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" [disabled]=\"readonly && auth.role!='admin'\" (click)=\"BusinessExpenses()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"BusinessExpenses\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onBusinessExpenseFormSubmit()\" #businessExpenseForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add School Expenses</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select  placeholder=\"Expense Type\"\r\n                                      [(ngModel)]=\"businessExpense.expTypKey\" [errorStateMatcher]=\"matcher\"\r\n                                      pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of schoolExpenseArray\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput  type=\"text\" pattern=\"\\d*\" min=\"0\"\r\n                                      maxlength=\"7\" id=\"businessExpAmount\" name=\"businessExpAmount\"\r\n                                      [(ngModel)]=\"businessExpense.expAmount\" [errorStateMatcher]=\"matcher\"\r\n                                      (keypress)=\"onlyNumbers($event)\" placeholder=\"Amount\" #businessExpAmount=\"ngModel\"\r\n                                      required>\r\n                                    <mat-error *ngIf=\"businessExpAmount.invalid\">\r\n                                      Expense amount is <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!businessExpenseForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Expense Type</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let bExpense of model.schoolAppraisal.businessExpense\">\r\n                        <td>{{findValueFromKey(bExpense.expTypKey, schoolExpenseArrayOrig)}}</td>\r\n                        <td>{{bExpense.expAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" (click)=\"editBExpense(bExpense)\" class=\"iconBtn simplebtn \">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button  [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" (click)=\"deleteBExpense(bExpense)\" class=\"iconBtn delBtn simplebtn\">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>-->\r\n                        </td>\r\n                      </tr>\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Amount:</b>\r\n                          <br>\r\n                        </td>\r\n                        <td>\r\n                          <input type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalBusinessExpense  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <h6 class=\"colorBlack\">Household Expenses</h6>\r\n                  </div>\r\n                  <div class=\"col-sm-6 addBtn\">\r\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" [disabled]=\"readonly && auth.role!='admin'\" (click)=\"HouseholdExpenses()\">\r\n                      <i class=\"fa fa-plus\"></i> Add</button>\r\n\r\n                    <div class=\"modal fade\" id=\"HouseholdExpenses\" role=\"dialog\">\r\n                      <div class=\"modal-dialog mymodal\">\r\n\r\n                        <!-- Modal content-->\r\n                        <form (ngSubmit)=\"onHouseholdExpenseFormSubmit()\" #householdExpenseForm=\"ngForm\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h5 class=\"modal-title\">Add Household Expenses</h5>\r\n                            </div>\r\n                            <div class=\"modal-body text-left\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-sm-2\">\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <mat-select  placeholder=\"Expense Type\"\r\n                                      [(ngModel)]=\"householdExpense.expTypKey\" [errorStateMatcher]=\"matcher\"\r\n                                      pattern=\"^[1-9]\\d*$\" name=\"residence\" required>\r\n                                      <mat-option *ngFor=\"let edu of householdExpenseArray\" [value]=\"edu.codeKey\">\r\n                                        {{edu.codeValue}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                  <mat-form-field>\r\n                                    <input matInput  type=\"text\" pattern=\"\\d*\" min=\"0\"\r\n                                      maxlength=\"7\" id=\"hhExpAmount\" name=\"hhExpAmount\"\r\n                                      [(ngModel)]=\"householdExpense.expAmount\" [errorStateMatcher]=\"matcher\"\r\n                                      (keypress)=\"onlyNumbers($event)\" placeholder=\"Amount\" #hhExpAmount=\"ngModel\"\r\n                                      required>\r\n                                    <mat-error *ngIf=\"hhExpAmount.invalid\">\r\n                                      house hold expense amount is <strong>invalid</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer text-center\">\r\n                              <button type=\"submit\" class=\"btn btn-primary btn-min\"\r\n                                [disabled]=\"!householdExpenseForm.form.valid\">Ok</button>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th>Expense Type</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let hExpense of model.schoolAppraisal.householdExpense\">\r\n                        <td>{{findValueFromKey(hExpense.expTypKey, householdExpenseArrayOrig)}}</td>\r\n                        <td>{{hExpense.expAmount | currency:'PKR':''}}</td>\r\n                        <td>\r\n                          <button  [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" (click)=\"editHExpense(hExpense)\" class=\"iconBtn simplebtn\" *ngIf=\"!hExpense.DSED\">\r\n                            <i class=\"fa fa-pencil\"></i>\r\n                          </button>\r\n                          <button [disabled]=\"readonly && auth.role!='admin'\" type=\"button\" (click)=\"deleteHExpense(hExpense)\" class=\"iconBtn delBtn simplebtn\" *ngIf=\"!hExpense.DSED\">\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                          </button>\r\n                          <!-- <a class=\"iconBtn simplebtn \"><i class=\"fa fa-history\"></i></a>-->\r\n                        </td>\r\n                      </tr>\r\n                      <tr class=\"total-info\">\r\n                        <td>\r\n                          <b>Total Amount:</b>\r\n                          <br>\r\n                        </td>\r\n                        <td>\r\n                          <input type=\"text\" readonly class=\"form-control small\"\r\n                            value=\"{{totalHouseholdExpense  | currency:'PKR':''}}\">\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"tab-pane fade\" id=\"schoolqualityTab\" role=\"tabpanel\" aria-labelledby=\"school-quality\">\r\n\r\n            <form (ngSubmit)=\"onSubmitQuestionsForm()\">\r\n              <div class=\"borderbox pt-2 mb-3\" *ngFor=\"let catQuestion of model.schoolAppraisal.SchoolQAArray; let h = index\">\r\n                <label><b>{{catQuestion.group}}</b></label>\r\n                <div class=\"qs row\" *ngFor=\"let question of catQuestion.questions; let i = index\">\r\n                  <div class=\"col-sm-9\">\r\n                    <p>{{question.questionString}}</p>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"qsbtns text-right\">\r\n                      <mat-radio-group name=\"answer{{h}}{{i}}\" [(ngModel)]=\"question.answerSeq\">\r\n                        <mat-radio-button class=\"w-50\" *ngFor=\"let disFlag of booleanQA\" [value]=\"disFlag.codeKey\">{{disFlag.codeValue}}</mat-radio-button>\r\n                      </mat-radio-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </form> \r\n          </div> -->\r\n        </div>\r\n        <a class=\"btn btn-primary\" (click)=\"continueClicked()\">Continue</a>\r\n        <button class=\"btn btn-default\" [disabled]=\"readonly && auth.role!='admin'\" type=\"submit\">Save</button>\r\n      </form>\r\n\r\n      <div class=\"modal fade\" id=\"deletePConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Other Income</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmPDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteSConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Secondary Income</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmSDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteBConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete School Expense</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmBDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal fade\" id=\"deleteHConfirmation\" role=\"dialog\">\r\n        <div class=\"modal-dialog mymodal\">\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Delete Household Expense</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"table-responsive\">\r\n                <h6>Do you want to delete?</h6>\r\n              </div>\r\n\r\n\r\n              <div class=\"modal-footer smmodal-footer text-center\">\r\n                <button type=\"button\" (click)=\"confirmHDelete()\" class=\"btn btn-primary btn-min\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.ts":
/*!************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.ts ***!
  \************************************************************************************************/
/*! exports provided: MY_FORMATS, SchoolAppraisalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolAppraisalComponent", function() { return SchoolAppraisalComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/models/address.model */ "./src/app/shared/models/address.model.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var _shared_models_schoolAppraisal_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/models/schoolAppraisal.model */ "./src/app/shared/models/schoolAppraisal.model.ts");
/* harmony import */ var _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/helpers/MyErrorStateMatcher.helper */ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_models_schoolQA_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/models/schoolQA.model */ "./src/app/shared/models/schoolQA.model.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/models/PrimaryIncome.model */ "./src/app/shared/models/PrimaryIncome.model.ts");
/* harmony import */ var _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/models/BusinessExpense.model */ "./src/app/shared/models/BusinessExpense.model.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_17__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










// import {SCHOOL, SCHOOL_QUESTION} from '../../../../shared/mocks/mock_common_codes';








var moment = moment__WEBPACK_IMPORTED_MODULE_17__;
var MY_FORMATS = {
    parse: {
        dateInput: 'YYYY',
    },
    display: {
        dateInput: 'YYYY',
        monthYearLabel: 'YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'YYYY',
    },
};
var SchoolAppraisalComponent = /** @class */ (function () {
    function SchoolAppraisalComponent(router, loanService, breadcrumbProvider, commonService, toaster, fb, spinner) {
        this.router = router;
        this.loanService = loanService;
        this.breadcrumbProvider = breadcrumbProvider;
        this.commonService = commonService;
        this.toaster = toaster;
        this.fb = fb;
        this.spinner = spinner;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.isSubmit = false;
        this.matcher = new _shared_helpers_MyErrorStateMatcher_helper__WEBPACK_IMPORTED_MODULE_6__["MyErrorStateMatcher"]();
        this.isEdit = false;
        this.isEditGrade = false;
        this.averageIncome = 0;
        this.netDeposible = 0;
        this.businessProfit = 0;
        this.totalBusinessExpense = 0;
        this.totalHouseholdExpense = 0;
        this.schoolQualityCheckDtos = [];
        this.addresses = [];
        this.address = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
        this.stRatio = 0;
        this.totalPrimaryIncome = 0;
        this.totalSecondaryIncome = 0;
        this.totalGrade = new _shared_models_schoolAppraisal_model__WEBPACK_IMPORTED_MODULE_5__["SchoolGradeDto"]();
        this.questions = [];
        this.disFlags = [{ name: 'Yes', value: 1 }, { name: 'No', value: 0 }];
        this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
        this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
        this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
        this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
        this.boolean = [{ codeKey: 1, codeValue: "YES" }, { codeKey: 0, codeValue: "NO" }];
        this.otherLoanAmountPerMonth = 0;
        this.communityArray = [];
    }
    SchoolAppraisalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.schoolGradeForm = this.fb.group({
            schGrdSeq: [],
            grdKey: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            avgFee: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            totFemStdnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            totMaleStdnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            noFeeStdnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            gradeFlag: ["a"]
        });
        this.today = new Date();
        this.yearBefore = new Date();
        this.yearBefore.setFullYear(this.yearBefore.getFullYear() - 1);
        console.log(this.yearBefore);
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        // this.loanService.breadcrumbs.forEach(
        //   breadcrumb => this.breadcrumbProvider.addCheckedItem(breadcrumb.label, breadcrumb.href, breadcrumb.isSaved)
        // );
        this.model = JSON.parse(sessionStorage.getItem('model'));
        if (this.model.schoolAppraisal == undefined || this.model.schoolAppraisal == null) {
            this.model.schoolAppraisal = new _shared_models_schoolAppraisal_model__WEBPACK_IMPORTED_MODULE_5__["SchoolAppraisal"]();
            this.model.schoolAppraisal.loanAppSeq = this.model.loanAppSeq;
            this.model.schoolAppraisal.addressDto = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
            this.model.schoolAppraisal.schoolGradeDtos = [];
            this.model.schoolAppraisal.schoolQualityCheckDtos = [];
            this.model.schoolAppraisal.totFemTchrs = 0;
            this.model.schoolAppraisal.totMaleTchrs = 0;
        }
        console.log(this.model);
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        // this.loanService.getSchoolQAs().subscribe((rawQA: SchoolQARaw[]) => {
        //   this.questions = rawQA;
        //   this.rawQuestions = rawQA;
        //   this.questions.forEach((s) => {
        //     this.schoolQualityCheckDtos.push(new SchoolQualityCheckDto({ answrSeq: 0, qstSeq: s.questionKey, schQltyChkFlag: 'a' }));
        //     s.answrSeq = 0;
        //   });
        //   this.questions.forEach(r => {
        //     r.schoolQuestions = [];
        //     this.questions.filter((r2: SchoolQARaw) => r2.questionCategoryKey === r.questionCategoryKey).forEach(
        //       filteredRs => r.schoolQuestions.push(new SchoolQuestion(filteredRs)));
        //   });
        //   this.questions = this.removeDuplicates(this.questions, 'questionCategoryKey');
        //   this.getLocations();
        //   this.loadLovs();
        //   this.createQuestionierForm();
        // }, (error) => {
        //   console.log('err', error);
        // });
        // for testing
        //     this.questions = SCHOOL_QUESTION;
        //     this.rawQuestions = SCHOOL_QUESTION;
        //     this.questions.forEach((s) => {
        //       this.schoolQualityCheckDtos.push(new SchoolQualityCheckDto({answrSeq: 0, qstSeq: s.questionKey}));
        //       s.answrSeq = 0;
        //     });
        //     this.questions.forEach(r => {
        //       r.schoolQuestions = [];
        //       this.questions.filter((r2: SchoolQARaw) => r2.questionCategoryKey === r.questionCategoryKey).forEach(
        //         filteredRs => r.schoolQuestions.push(new SchoolQuestion(filteredRs)));
        //     });
        //     this.questions = this.removeDuplicates(this.questions, 'questionCategoryKey');
        //     this.getLocations();
        //     this.loadLovs();
        //     this.createQuestionierForm();
        ///
        if (sessionStorage.getItem('editLoan') === 'true') {
            console.log(this.model.loanAppSeq);
            this.spinner.show();
            this.loanService.getSchoolApperaisal(this.model.loanAppSeq).subscribe(function (schoolAP) {
                console.log(schoolAP);
                if (schoolAP != null) {
                    _this.model.schoolAppraisal = schoolAP;
                    _this.yearEst = _this.model.schoolAppraisal.schAge;
                    _this.model.schoolAppraisal.addressDto = schoolAP.addressDto;
                    _this.model.schoolAppraisal.schoolGradeDtos = (schoolAP.schoolGradeDtos == null) ? [] : JSON.parse(JSON.stringify(schoolAP.schoolGradeDtos));
                    // this.schoolGradeArray = (schoolAP.schoolGradeDtos == null) ? [] : JSON.parse(JSON.stringify(schoolAP.schoolGradeDtos));
                    _this.model.schoolAppraisal.schoolQualityCheckDtos = (schoolAP.schoolQualityCheckDtos == null) ? [] : JSON.parse(JSON.stringify(schoolAP.schoolQualityCheckDtos));
                    _this.schoolQualityCheckDtos = (schoolAP.schoolQualityCheckDtos == null) ? [] : JSON.parse(JSON.stringify(schoolAP.schoolQualityCheckDtos));
                    if (schoolAP.schyr != 0) {
                        _this.date = moment();
                        var ctrlValue = _this.date;
                        ctrlValue.year(schoolAP.schyr);
                    }
                    _this.model.schoolAppraisal.primaryIncome = (schoolAP.primaryIncome == null) ? [] : schoolAP.primaryIncome;
                    _this.model.schoolAppraisal.secondaryIncome = (schoolAP.secondaryIncome == null) ? [] : schoolAP.secondaryIncome;
                    _this.model.schoolAppraisal.businessExpense = (schoolAP.businessExpense == null) ? [] : schoolAP.businessExpense;
                    _this.model.schoolAppraisal.householdExpense = (schoolAP.householdExpense == null) ? [] : schoolAP.householdExpense;
                    console.log('updated here');
                    console.log(_this.schoolQualityCheckDtos);
                    // this.rawQuestions.forEach((s, index) => {
                    //   s.answrSeq = schoolAP.schoolQualityCheckDtos[index].answrSeq;
                    // });
                    // this.removeItemsFromLOVUsingBizApp();
                    _this.calculateNetDeposible();
                    _this.calculateBusinessProfit();
                    _this.calculateTotalValues();
                    _this.calculateTotalGrades();
                    _this.calculateStRatio();
                    _this.createQuestionierForm();
                    _this.getLocations();
                    _this.loadLovs();
                    _this.getQuestions();
                    _this.spinner.hide();
                    console.log(JSON.stringify(_this.model.schoolAppraisal));
                }
            }, function (error) {
                console.log('err', error);
                _this.spinner.hide();
                _this.model.schoolAppraisal = new _shared_models_schoolAppraisal_model__WEBPACK_IMPORTED_MODULE_5__["SchoolAppraisal"]();
                _this.model.schoolAppraisal.loanAppSeq = _this.model.loanAppSeq;
                _this.model.schoolAppraisal.addressDto = new _shared_models_address_model__WEBPACK_IMPORTED_MODULE_1__["Address"]();
                _this.model.schoolAppraisal.schoolGradeDtos = [];
                _this.model.schoolAppraisal.schoolQualityCheckDtos = [];
                _this.model.schoolAppraisal.totFemTchrs = 0;
                _this.model.schoolAppraisal.totMaleTchrs = 0;
                _this.getLocations();
                _this.loadLovs();
                _this.getQuestions();
            });
        }
        else {
            // this.schoolGradeArray = JSON.parse(JSON.stringify(this.model.schoolAppraisal.schoolGradeDtos));
            if (this.model.schoolAppraisal.schyr != 0 && this.model.schoolAppraisal.schyr != undefined && this.model.schoolAppraisal.schyr != null) {
                this.date = moment();
                var ctrlValue = this.date;
                ctrlValue.year(this.model.schoolAppraisal.schyr);
            }
            if (this.model.schoolAppraisal.SchoolQAArray == undefined || this.model.schoolAppraisal.SchoolQAArray == null) {
                this.getQuestions();
            }
            else {
                if (this.model.schoolAppraisal.SchoolQAArray.length == 0) {
                    this.getQuestions();
                }
            }
            this.calculateNetDeposible();
            this.calculateBusinessProfit();
            this.calculateTotalValues();
            this.calculateTotalGrades();
            this.calculateStRatio();
            this.getLocations();
            this.loadLovs();
        }
        console.log(this.model);
    };
    SchoolAppraisalComponent.prototype.getNewSchoolGradeForm = function () {
        this.schoolGradeForm = this.fb.group({
            schGrdSeq: [],
            grdKey: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            avgFee: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            totFemStdnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            totMaleStdnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            noFeeStdnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required],
            gradeFlag: ["a"]
        });
    };
    SchoolAppraisalComponent.prototype.calculateTotalValues = function () {
        this.totalPrimaryIncome = 0;
        console.log(this.model.primaryIncome.length);
        for (var i = 0; i < this.model.schoolAppraisal.primaryIncome.length; i++) {
            var x = +this.model.schoolAppraisal.primaryIncome[i].incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
            console.log(this.totalPrimaryIncome);
        }
        this.totalSecondaryIncome = 0;
        for (var i = 0; i < this.model.schoolAppraisal.secondaryIncome.length; i++) {
            var x = +this.model.schoolAppraisal.secondaryIncome[i].incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
        }
        this.totalBusinessExpense = 0;
        for (var i = 0; i < this.model.schoolAppraisal.businessExpense.length; i++) {
            var x = +this.model.schoolAppraisal.businessExpense[i].expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
        }
        this.totalHouseholdExpense = 0;
        for (var i = 0; i < this.model.schoolAppraisal.householdExpense.length; i++) {
            var x = +this.model.schoolAppraisal.householdExpense[i].expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
        }
        this.incomeChange();
    };
    SchoolAppraisalComponent.prototype.onQuestionRadioSelectChange = function (index) {
        var _this = this;
        console.log(index);
        this.model.schoolAppraisal.schoolQualityCheckDtos = [];
        var v = this.questionsForm.value.questionArray[index];
        this.schoolQualityCheckDtos[index].answrSeq = v;
        this.schoolQualityCheckDtos[index].schQltyChkFlag = 'u';
        this.schoolQualityCheckDtos.forEach(function (s) {
            _this.model.schoolAppraisal.schoolQualityCheckDtos.push(new _shared_models_schoolQA_model__WEBPACK_IMPORTED_MODULE_9__["SchoolQualityCheckDto"](s));
        });
        console.log(this.model.schoolAppraisal);
    };
    SchoolAppraisalComponent.prototype.calculateSchoolAge = function () {
        console.log(this.yearEst);
        this.model.schoolAppraisal.schAge = this.calculateAge();
        console.log(this.model.schoolAppraisal.schAge);
    };
    SchoolAppraisalComponent.prototype.createQuestionierForm = function () {
        var _this = this;
        console.log('create from');
        console.log(this.rawQuestions);
        if (sessionStorage.getItem('editLoan') === 'true') {
        }
        this.controls = this.questions.map(function (c, index) { return new _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormControl"](_this.rawQuestions[index].answrSeq, _angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required); });
        this.questionsForm = this.fb.group({
            questionArray: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormArray"](this.controls)
        });
    };
    SchoolAppraisalComponent.prototype.onSubmitQuestionsForm = function () {
        var _this = this;
        this.schoolQualityCheckDtos.forEach(function (s) {
            _this.model.schoolAppraisal.schoolQualityCheckDtos.push(new _shared_models_schoolQA_model__WEBPACK_IMPORTED_MODULE_9__["SchoolQualityCheckDto"](s));
        });
    };
    SchoolAppraisalComponent.prototype.onSubmit = function () {
        var _this = this;
        this.spinner.show();
        console.log(JSON.stringify(this.model.schoolAppraisal));
        this.model.schoolAppraisal.formSeq = this.model.formSeq;
        this.model.schoolAppraisal.loanAppSeq = this.model.loanAppSeq;
        if (this.model.schoolAppraisal.schAprslSeq == undefined || this.model.schoolAppraisal.schAprslSeq == 0) {
            this.loanService.addSchoolAppraisal(this.model.schoolAppraisal).subscribe(function (res) {
                _this.spinner.hide();
                if (res != null) {
                    var school = res.SchoolAppraisalDto;
                    console.log(school);
                    _this.model.schoolAppraisal.schAprslSeq = school.schAprslSeq;
                    // this.schoolGradeArray = JSON.parse(JSON.stringify(school.schoolGradeDtos));
                    _this.model.schoolAppraisal.hasBasic = school.hasBasic;
                    _this.model.schoolAppraisal.hasAddress = school.hasAddress;
                    _this.model.schoolAppraisal.hasGrade = school.hasGrade;
                    _this.model.schoolAppraisal.hasAttend = school.hasAttend;
                    _this.model.schoolAppraisal.hasIncome = school.hasIncome;
                    _this.model.schoolAppraisal.hasExpense = school.hasExpense;
                    _this.model.schoolAppraisal.hasQltyChck = school.hasQltyChck;
                    _this.model.schoolAppraisal.formComplete = school.formComplete;
                }
                // sessionStorage.setItem("model", JSON.stringify(this.model));
                _this.toaster.success('Saved School Appraisal Successfully', 'Success');
                // this.addIncomeExpense(school.schAprslSeq);
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                            forms.isSaved = _this.model.schoolAppraisal.formComplete;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
                console.log(_this.model);
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }, function (error) {
                _this.spinner.hide();
                _this.toaster.error("Server Error");
                console.log('err', error);
            });
        }
        else {
            this.loanService.updateSchoolAppraisal(this.model.schoolAppraisal).subscribe(function (res) {
                _this.spinner.hide();
                if (res != null) {
                    var school = res.SchoolAppraisalDto;
                    console.log(school);
                    _this.model.schoolAppraisal.schAprslSeq = school.schAprslSeq;
                    _this.model.schoolAppraisal.schoolGradeDtos = school.schoolGradeDtos;
                    // this.schoolGradeArray = JSON.parse(JSON.stringify(school.schoolGradeDtos));
                    _this.model.schoolAppraisal.hasBasic = school.hasBasic;
                    _this.model.schoolAppraisal.hasAddress = school.hasAddress;
                    _this.model.schoolAppraisal.hasGrade = school.hasGrade;
                    _this.model.schoolAppraisal.hasAttend = school.hasAttend;
                    _this.model.schoolAppraisal.hasIncome = school.hasIncome;
                    _this.model.schoolAppraisal.hasExpense = school.hasExpense;
                    _this.model.schoolAppraisal.hasQltyChck = school.hasQltyChck;
                    _this.model.schoolAppraisal.formComplete = school.formComplete;
                }
                // sessionStorage.setItem("model", JSON.stringify(this.model));
                _this.toaster.success('Updated School Appraisal Successfully', 'Success');
                // this.addIncomeExpense(school.schAprslSeq);
                if (_this.model.forms) {
                    _this.model.forms.forEach(function (forms) {
                        if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                            forms.isSaved = _this.model.schoolAppraisal.formComplete;
                            _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                        }
                    });
                }
                console.log(_this.model);
                sessionStorage.setItem('model', JSON.stringify(_this.model));
            }, function (error) {
                _this.spinner.hide();
                _this.toaster.error("Server Error");
                console.log('err', error);
            });
        }
    };
    // addIncomeExpense(schAprslSeq) {
    //   this.model.schoolAppraisal.primaryIncome.forEach(obj => {
    //     obj.IncomeHdrSeq = schAprslSeq;
    //     this.incomeService(obj);
    //   });
    //   this.model.schoolAppraisal.secondaryIncome.forEach(obj => {
    //     obj.IncomeHdrSeq = schAprslSeq;
    //     this.incomeService(obj);
    //   });
    //   this.model.schoolAppraisal.businessExpense.forEach(obj => {
    //     obj.bizAprslSeq = schAprslSeq;
    //     this.expenseService(obj);
    //   });
    //   this.model.schoolAppraisal.householdExpense.forEach(obj => {
    //     obj.bizAprslSeq = schAprslSeq;
    //     this.expenseService(obj);
    //   });
    // }
    SchoolAppraisalComponent.prototype.ngDoCheck = function () {
        sessionStorage.setItem('isSavedSchool', this.isSubmit.toString());
    };
    // grade tab
    SchoolAppraisalComponent.prototype.openAddGrade = function () {
        var _this = this;
        $('#GradeDetails').modal('show');
        this.model.schoolAppraisal.schoolGradeDtos.forEach(function (res) {
            _this.removeItemFromLOV(res.grdKey, _this.grade);
        });
        this.schoolGradeForm.reset();
        this.schoolGradeForm.controls.gradeFlag.setValue("a");
        this.isEditGrade = false;
    };
    SchoolAppraisalComponent.prototype.editGrade = function (grade, index) {
        var _this = this;
        $('#GradeDetails').modal('show');
        grade.gradeFlag = "u";
        this.gradeOrig.forEach(function (orig) {
            if (orig.codeKey == grade.grdKey) {
                _this.grade.push({ codeKey: orig.codeKey, codeValue: orig.codeValue });
            }
        });
        this.schoolGradeForm.patchValue(grade);
        this.isEditGrade = true;
        this.indexGrade = index;
    };
    SchoolAppraisalComponent.prototype.deleteGrade = function (index, grd) {
        console.log(index);
        grd.gradeFlag = "d";
        var i = -1;
        this.model.schoolAppraisal.schoolGradeDtos.forEach(function (grade, ind) {
            if (grade.schGrdSeq == grd.schGrdSeq) {
                grade.gradeFlag = "d";
                i = ind;
            }
        });
        this.model.schoolAppraisal.schoolGradeDtos.splice(index, 1);
        this.calculateTotalGrades();
    };
    SchoolAppraisalComponent.prototype.onSubmitGrade = function () {
        var result = Object.assign({}, this.schoolGradeForm.value);
        if (+result.totFemStdnt < +result.femStdntPrsnt) {
            this.toaster.error("Female Students Present can not be greater than Total Female Students");
            return;
        }
        if (+result.totMaleStdnt < +result.maleStdntPrsnt) {
            this.toaster.error("Male Students Present can not be greater than Total Male Students");
            return;
        }
        if ((+result.totFemStdnt + +result.totMaleStdnt) < +result.noFeeStdnt) {
            this.toaster.error("Students Paying no fee can not be greater than Total Students");
            return;
        }
        $('#GradeDetails').modal('hide');
        if (!this.isEditGrade) {
            console.log(result);
            result.gradeFlag = "a";
            this.model.schoolAppraisal.schoolGradeDtos.push(result);
        }
        else {
            result.gradeFlag = "u";
            this.model.schoolAppraisal.schoolGradeDtos[this.indexGrade] = result;
            this.isEditGrade = false;
        }
        this.removeItemFromLOV(result.grdKey, this.grade);
        this.calculateTotalGrades();
        this.getNewSchoolGradeForm();
        console.log(this.model.schoolAppraisal);
    };
    SchoolAppraisalComponent.prototype.calculateTotalGrades = function () {
        var _this = this;
        this.totalGrade = new _shared_models_schoolAppraisal_model__WEBPACK_IMPORTED_MODULE_5__["SchoolGradeDto"]();
        if (this.model.schoolAppraisal.schoolGradeDtos != null && this.model.schoolAppraisal.schoolGradeDtos != undefined) {
            this.model.schoolAppraisal.schoolGradeDtos.forEach(function (g) {
                _this.totalGrade.avgFee = _this.totalGrade.avgFee + Number.parseInt(g.avgFee);
                _this.totalGrade.totFemStdnt = _this.totalGrade.totFemStdnt + Number.parseInt(g.totFemStdnt);
                _this.totalGrade.totMaleStdnt = _this.totalGrade.totMaleStdnt + Number.parseInt(g.totMaleStdnt);
                _this.totalGrade.noFeeStdnt = _this.totalGrade.noFeeStdnt + Number.parseInt(g.noFeeStdnt);
                _this.totalGrade.femStdntPrsnt = _this.totalGrade.femStdntPrsnt + Number.parseInt(g.femStdntPrsnt);
                _this.totalGrade.maleStdntPrsnt = _this.totalGrade.maleStdntPrsnt + Number.parseInt(g.maleStdntPrsnt);
                // this.totalGrade.classAverageFee = this.totalGrade.avgFee / this.model.schoolAppraisal.schoolGradeDtos.length;
                _this.totalGrade.girlsAverage = Math.abs((_this.totalGrade.totFemStdnt / (_this.totalGrade.totFemStdnt + _this.totalGrade.totMaleStdnt)) * 100);
                _this.totalGrade.totalFee = _this.totalGrade.classAverageFee;
                _this.totalGrade.totalStudents = _this.totalGrade.totFemStdnt + _this.totalGrade.totMaleStdnt;
                var classRevenue = Math.round(((+g.totFemStdnt + +g.totMaleStdnt) - (+g.noFeeStdnt)) * (+g.avgFee));
                _this.totalGrade.schoolRevenue += classRevenue;
                _this.totalGrade.classAverageFee = Math.floor(_this.totalGrade.schoolRevenue / _this.totalGrade.totalStudents);
                if (_this.totalGrade.classAverageFee == undefined)
                    _this.totalGrade.classAverageFee = 0;
            });
        }
    };
    SchoolAppraisalComponent.prototype.calculateStRatio = function () {
        this.calculateTotalGrades();
        if (this.model.schoolAppraisal.totMaleTchrs !== 0 && this.model.schoolAppraisal.totFemTchrs !== 0) {
            var st = this.totalGrade.totFemStdnt + this.totalGrade.totMaleStdnt;
            var t = this.model.schoolAppraisal.totMaleTchrs + this.model.schoolAppraisal.totFemTchrs;
            this.stRatio = st / this.totalGrade.totalStudents;
        }
    };
    SchoolAppraisalComponent.prototype.addOtherIncome = function () {
    };
    SchoolAppraisalComponent.prototype.addSecondryIncome = function () {
    };
    SchoolAppraisalComponent.prototype.addBusinessExp = function () {
    };
    SchoolAppraisalComponent.prototype.addHouseExp = function () {
    };
    SchoolAppraisalComponent.prototype.continueClicked = function () {
        var _this = this;
        if (this.model.forms) {
            var i_1 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_1 + 1].formUrl]);
                }
                i_1++;
            });
        }
    };
    SchoolAppraisalComponent.prototype.getQuestions = function () {
        var _this = this;
        this.loanService.getSchoolByQstnrSeq(2).subscribe(function (rawQA) {
            console.log(rawQA);
            _this.rawQuestionsArray = rawQA;
            _this.model.schoolAppraisal.SchoolQAArray = rawQA;
            _this.model.schoolAppraisal.schoolQualityCheckDtos.forEach(function (question) {
                _this.model.schoolAppraisal.SchoolQAArray.forEach(function (q) {
                    q.questions.forEach(function (res) {
                        if (res.questionKey == question.qstSeq) {
                            res.answerSeq = question.answrSeq;
                            return;
                        }
                    });
                });
            });
        }, function (error) {
            console.log('err', error);
        });
    };
    SchoolAppraisalComponent.prototype.getLocations = function () {
        var _this = this;
        this.loanService.getLocationsForPort(this.model.portSeq).subscribe(function (res) {
            console.log(res);
            _this.addresses = res;
        }, function (error) {
            console.log('err In Loan Service');
            console.log('err', error);
        });
    };
    SchoolAppraisalComponent.prototype.selectAddress = function (add) {
        this.address = add;
        Object.assign(this.model.schoolAppraisal.addressDto, add, this.model.schoolAppraisal.addressDto);
        console.log(this.model.schoolAppraisal.addressDto);
    };
    SchoolAppraisalComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_OWNERSHIP"]).subscribe(function (d) { return _this.schoolOwnerShip = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["RELATIONSHIP_TYPE"]).subscribe(function (d) { return _this.relation = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_PRINCIPAL"]).subscribe(function (d) { return _this.principal = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_BUILDING_OWNERSHIP"]).subscribe(function (d) { return _this.buildingOwnerShip = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["BOOLEAN"]).subscribe(function (d) { return _this.booleanQA = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_TYPE"]).subscribe(function (d) { return _this.schoolType = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_LEVEL"]).subscribe(function (d) { return _this.schoolLevel = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_MEDIUM"]).subscribe(function (d) { return _this.schoolMedium = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_AREA"]).subscribe(function (d) { return _this.schoolArea = d; });
        // this.commonService.getValues(REF_CD_GRP_KEYS.SCHOOL_TYPE).subscribe(d => this.schoolType = d);
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_GRADE_LEVEL"]).subscribe(function (d) {
            _this.grade = d;
            _this.gradeOrig = JSON.parse(JSON.stringify(d));
            _this.model.schoolAppraisal.schoolGradeDtos.forEach(function (res) {
                _this.removeItemFromLOV(res.grdKey, _this.grade);
            });
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_EXPENSES"]).subscribe(function (d) { return _this.schoolExpense = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["KSS_SECONDARY_INCOME"]).subscribe(function (d) {
            _this.secondaryIncomeArray = d;
            _this.secondaryIncomeArrayOrig = JSON.parse(JSON.stringify(d));
            _this.model.schoolAppraisal.secondaryIncome.forEach(function (x) {
                _this.removeItemFromLOV(x.incomeTypeKey, _this.secondaryIncomeArray);
            });
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["SCHOOL_EXPENSES"]).subscribe(function (d) {
            _this.schoolExpenseArray = d;
            _this.schoolExpenseArrayOrig = JSON.parse(JSON.stringify(d));
            _this.model.schoolAppraisal.businessExpense.forEach(function (x) {
                _this.removeItemFromLOV(x.expTypKey, _this.schoolExpenseArray);
            });
        });
        // this.commonService.getValues(REF_CD_GRP_KEYS.SCHOOL_EXPENSES).subscribe(d => this.schoolExpenseArray = d);
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["HOUSEHOLD_EXPENSES"]).subscribe(function (d) {
            _this.householdExpenseArray = d;
            _this.householdExpenseArrayOrig = JSON.parse(JSON.stringify(d));
            _this.model.schoolAppraisal.householdExpense.forEach(function (x) {
                _this.removeItemFromLOV(x.expTypKey, _this.householdExpenseArray);
            });
            // Other Loans
            _this.loanService.getMfcibLoans(_this.model.loanAppSeq).subscribe(function (res) {
                _this.mfcibArray = res;
                res.forEach(function (obj) {
                    if (obj.loanCompletionDate) {
                        if (obj.isExpense) {
                            var date = new Date();
                            var months = _this.monthDiff(date, new Date(obj.loanCompletionDate));
                            if (months == 0) {
                                _this.otherLoanAmountPerMonth = +_this.otherLoanAmountPerMonth + +obj.currentOutStandingAmount;
                            }
                            else {
                                var amount = Math.floor(obj.currentOutStandingAmount / months);
                                _this.otherLoanAmountPerMonth = +_this.otherLoanAmountPerMonth + +amount;
                            }
                        }
                        var array = obj.loanCompletionDate.split('T', 1);
                        if (array.length) {
                            obj.loanCompletionDate = array[0];
                        }
                    }
                });
                if (_this.otherLoanAmountPerMonth > 0) {
                    var key_1 = _this.findKeyFromValue("other loan installment", _this.householdExpenseArray);
                    if (key_1 >= 0) {
                        _this.model.schoolAppraisal.householdExpense.forEach(function (expense) {
                            if (expense.expTypKey == key_1) {
                                var index = _this.model.schoolAppraisal.householdExpense.indexOf(expense);
                                if (index >= 0) {
                                    _this.model.schoolAppraisal.householdExpense.splice(index, 1);
                                }
                            }
                        });
                        var otherLoan = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
                        otherLoan.expAmount = "" + _this.otherLoanAmountPerMonth;
                        otherLoan.expTypKey = key_1;
                        otherLoan.expCategoryKey = 2;
                        otherLoan.DSED = true;
                        _this.model.schoolAppraisal.householdExpense.push(otherLoan);
                        console.log(otherLoan);
                        _this.totalHouseholdExpense = _this.totalHouseholdExpense + +otherLoan.expAmount;
                        _this.removeItemFromLOV(key_1, _this.householdExpenseArray);
                    }
                }
            }, function (error) {
                console.log('err', error);
            });
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["INCOME_SOURCE_SCHOOL_OTHER"]).subscribe(function (res) {
            _this.incomeType = res;
            _this.incomeTypeOrig = JSON.parse(JSON.stringify(res));
            _this.model.schoolAppraisal.primaryIncome.forEach(function (x) {
                _this.removeItemFromLOV(x.incomeTypeKey, _this.incomeType);
            });
            console.log(res);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_13__["EXPENSE_TYPE"]).subscribe(function (res) {
            _this.expenseType = res;
            _this.expenseTypeOrig = JSON.parse(JSON.stringify(res));
            console.log(res);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getCommunityForPort(this.model.portKey).subscribe(function (res) {
            _this.communityArray = res;
        }, function (error) {
            console.log('err', error);
        });
    };
    SchoolAppraisalComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode !== 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    SchoolAppraisalComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                console.log(array[i].codeValue.toLowerCase() + "===" + value.toLowerCase());
                console.log(array[i].codeValue.toLowerCase() == value.toLowerCase());
                if (array[i].codeValue.toLowerCase() == value.toLowerCase()) {
                    return array[i].codeKey;
                }
            }
        }
        return -1;
    };
    SchoolAppraisalComponent.prototype.monthDiff = function (d1, d2) {
        var months;
        months = (d2.getFullYear() - d1.getFullYear()) * 12;
        months -= d1.getMonth() + 1;
        months += d2.getMonth() + 1;
        if (d1.getDate() < 15) {
            months += 1;
        }
        if (d2.getDate() < 15) {
            months -= 1;
        }
        return months <= 0 ? 0 : months;
    };
    SchoolAppraisalComponent.prototype.incomeChange = function () {
        this.averageIncome = Math.floor(((this.model.schoolAppraisal.maxMonthSale * this.model.schoolAppraisal.maxSaleMonth) +
            (this.model.schoolAppraisal.minMonthSale * this.model.schoolAppraisal.minSaleMonth)) / 12);
        console.log(this.averageIncome);
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    SchoolAppraisalComponent.prototype.onPrimaryIncomeFormSubmit = function () {
        this.primaryIncome.incomeCategoryKey = 1;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalPrimaryIncome = 0;
            this.model.schoolAppraisal.primaryIncome[this.itemToEdit.index] = this.primaryIncome;
            for (var i = 0; i < this.model.schoolAppraisal.primaryIncome.length; i++) {
                var x = +this.model.schoolAppraisal.primaryIncome[i].incomeAmount;
                this.totalPrimaryIncome = this.totalPrimaryIncome + x;
            }
            $('#addPrimaryIncome').modal('hide');
            this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
        }
        else {
            console.log(this.primaryIncome);
            // this.primaryIncome.incomeTypeKey = this.primaryIncome.incomeCategoryKey;
            this.model.schoolAppraisal.primaryIncome.push(this.primaryIncome);
            var x = +this.primaryIncome.incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
            $('#addPrimaryIncome').modal('hide');
            this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
        }
        this.removeItemsFromLOVUsingBizApp();
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    SchoolAppraisalComponent.prototype.addPrimaryIncome = function () {
        $('#addPrimaryIncome').modal('show');
        this.primaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
        this.isEdit = false;
    };
    SchoolAppraisalComponent.prototype.findValueFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey === key) {
                    return array[i].codeValue;
                }
            }
        }
    };
    // editPIncome(primaryIncome: PrimaryIncome) {
    //   this.primaryIncome = primaryIncome;
    //   (<any>$('#addPrimaryIncome')).modal('show');
    //   this.isEdit = true;
    // }
    // deletePIncome(pIncome) {
    //   const index = this.model.schoolAppraisal.primaryIncome.indexOf(pIncome, 0);
    //   console.log(index);
    //   if (index > -1) {
    //     this.model.schoolAppraisal.primaryIncome.splice(index, 1);
    //   }
    //   this.totalPrimaryIncome = 0;
    //   for (let i = 0; i < this.model.schoolAppraisal.primaryIncome.length; i++) {
    //     const x = +this.model.schoolAppraisal.primaryIncome[i].incomeAmount;
    //     this.totalPrimaryIncome = this.totalPrimaryIncome + x;
    //   }
    //   this.removeItemsFromLOVUsingBizApp();
    //   this.calculateNetDeposible();
    //   this.calculateBusinessProfit();
    //   (<any>$('#addPrimaryIncome')).modal('hide');
    // }
    SchoolAppraisalComponent.prototype.addSecondaryIncome = function () {
        $('#addSecondaryIncome').modal('show');
        this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
        this.isEdit = false;
    };
    // editSIncome(secondaryIncome: PrimaryIncome) {
    //   this.secondaryIncome = secondaryIncome;
    //   (<any>$('#addSecondaryIncome')).modal('show');
    //   this.isEdit = true;
    // }
    // deleteSIncome(sIncome) {
    //   const index = this.model.schoolAppraisal.secondaryIncome.indexOf(sIncome, 0);
    //   console.log(index);
    //   if (index > -1) {
    //     this.model.schoolAppraisal.secondaryIncome.splice(index, 1);
    //   }
    //   this.totalSecondaryIncome = 0;
    //   for (let i = 0; i < this.model.schoolAppraisal.secondaryIncome.length; i++) {
    //     const x = +this.model.schoolAppraisal.secondaryIncome[i].incomeAmount;
    //     this.totalSecondaryIncome = this.totalSecondaryIncome + x;
    //   }
    //   this.removeItemsFromLOVUsingBizApp();
    //   this.calculateNetDeposible();
    //   this.calculateBusinessProfit();
    //   (<any>$('#addSecondaryIncome')).modal('hide');
    // }
    SchoolAppraisalComponent.prototype.onSecondaryIncomeFormSubmit = function () {
        this.secondaryIncome.incomeCategoryKey = 2;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalSecondaryIncome = 0;
            this.model.schoolAppraisal.secondaryIncome[this.itemToEdit.index] = this.secondaryIncome;
            for (var i = 0; i < this.model.schoolAppraisal.secondaryIncome.length; i++) {
                var x = +this.model.schoolAppraisal.secondaryIncome[i].incomeAmount;
                this.totalSecondaryIncome = this.totalSecondaryIncome + x;
            }
            $('#addSecondaryIncome').modal('hide');
            this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
        }
        else {
            console.log(this.secondaryIncome);
            // this.secondaryIncome.incomeTypeKey = this.secondaryIncome.incomeCategoryKey;
            this.model.schoolAppraisal.secondaryIncome.push(this.secondaryIncome);
            var x = +this.secondaryIncome.incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
            $('#addSecondaryIncome').modal('hide');
            this.secondaryIncome = new _shared_models_PrimaryIncome_model__WEBPACK_IMPORTED_MODULE_11__["PrimaryIncome"]();
            console.log(this.model.schoolAppraisal.secondaryIncome);
        }
        this.removeItemsFromLOVUsingBizApp();
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    SchoolAppraisalComponent.prototype.calculateNetDeposible = function () {
        this.netDeposible = this.totalPrimaryIncome + this.totalSecondaryIncome +
            this.averageIncome - this.totalBusinessExpense - this.totalHouseholdExpense;
    };
    SchoolAppraisalComponent.prototype.calculateBusinessProfit = function () {
        this.businessProfit = this.totalPrimaryIncome - this.totalBusinessExpense;
    };
    SchoolAppraisalComponent.prototype.removeDuplicates = function (myArr, prop) {
        return myArr.filter(function (obj, pos, arr) {
            return arr.map(function (mapObj) { return mapObj[prop]; }).indexOf(obj[prop]) === pos;
        });
    };
    SchoolAppraisalComponent.prototype.calculateAge = function () {
        var ageDate = this.commonService.formatDateCustom(Date.now(), 'yyyy');
        var currentYear = Math.abs(Number.parseInt(ageDate));
        if (this.yearEst > currentYear) {
            return 0;
        }
        return currentYear - this.yearEst;
    };
    SchoolAppraisalComponent.prototype.incomeService = function (income) {
        var _this = this;
        this.loanService.saveIncome(income).subscribe(function (res) {
            console.log(res);
            _this.toaster.success('Income added successfully', 'Success');
        }, function (error) {
            console.log('err In ADD INCOME Service');
            console.log('err', error);
        });
    };
    SchoolAppraisalComponent.prototype.BusinessExpenses = function () {
        $('#BusinessExpenses').modal('show');
        this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
        this.isEdit = false;
    };
    // editBExpense(bExpense) {
    //   this.businessExpense = bExpense;
    //   (<any>$('#BusinessExpenses')).modal('show');
    //   this.isEdit = true;
    // }
    SchoolAppraisalComponent.prototype.HouseholdExpenses = function () {
        $('#HouseholdExpenses').modal('show');
        this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
        this.isEdit = false;
    };
    SchoolAppraisalComponent.prototype.onHouseholdExpenseFormSubmit = function () {
        this.householdExpense.expCategoryKey = 2;
        if (this.isEdit) {
            this.isEdit = false;
            this.model.schoolAppraisal.householdExpense[this.itemToEdit.index] = this.householdExpense;
            this.totalHouseholdExpense = 0;
            for (var i = 0; i < this.model.schoolAppraisal.householdExpense.length; i++) {
                var x = +this.model.schoolAppraisal.householdExpense[i].expAmount;
                this.totalHouseholdExpense = this.totalHouseholdExpense + x;
            }
            $('#HouseholdExpenses').modal('hide');
            this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
        }
        else {
            // this.householdExpense.expTypKey = this.householdExpense.expCategoryKey;
            this.model.schoolAppraisal.householdExpense.push(this.householdExpense);
            var x = +this.householdExpense.expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
            this.householdExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
            $('#HouseholdExpenses').modal('hide');
            console.log(this.model.schoolAppraisal.householdExpense);
        }
        this.removeItemsFromLOVUsingBizApp();
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    // itemToEdit;
    // editHExpense(hExpense) {
    //   this.householdExpense = JSON.parse(JSON.stringify(hExpense));
    //   this.itemToEdit = JSON.parse(JSON.stringify(hExpense));
    //   this.itemToEdit.index = this.model.schoolAppraisal.householdExpense.indexOf(hExpense);
    //   (<any>$('#HouseholdExpenses')).modal('show');
    //   this.householdExpenseArrayOrig.forEach(element => {
    //     if (element.codeKey == hExpense.expTypKey) {
    //       this.householdExpenseArray.push(element);
    //     }
    //   });
    //   this.isEdit = true;
    // }
    // hExpenseToDel;
    // deleteHExpense(hExpense) {
    //   this.hExpenseToDel = hExpense;
    //   (<any>$('#deleteHConfirmation')).modal('show');
    // }
    // confirmHDelete() {
    //   const index = this.model.schoolAppraisal.householdExpense.indexOf(this.hExpenseToDel);
    //   console.log(index);
    //   if (index > -1) {
    //     this.model.schoolAppraisal.householdExpense.splice(index, 1);
    //   }
    //   this.totalHouseholdExpense = 0;
    //   for (let i = 0; i < this.model.schoolAppraisal.householdExpense.length; i++) {
    //     const x = +this.model.schoolAppraisal.householdExpense[i].expAmount;
    //     this.totalHouseholdExpense = this.totalHouseholdExpense + x;
    //   }
    //   this.calculateNetDeposible();
    //   this.calculateBusinessProfit();
    //   this.removeItemsFromLOVUsingBizApp();
    //   (<any>$('#HouseholdExpenses')).modal('hide');
    //   // (<any>$('#deleteHConfirmation')).modal('hide');
    // }
    // deleteBExpense(bExpense) {
    //   const index = this.model.schoolAppraisal.businessExpense.indexOf(bExpense, 0);
    //   console.log(index);
    //   if (index > -1) {
    //     this.model.schoolAppraisal.businessExpense.splice(index, 1);
    //   }
    //   this.totalBusinessExpense = 0;
    //   for (let i = 0; i < this.model.schoolAppraisal.businessExpense.length; i++) {
    //     const x = +this.model.schoolAppraisal.businessExpense[i].expAmount;
    //     this.totalBusinessExpense = this.totalBusinessExpense + x;
    //   }
    //   this.removeItemsFromLOVUsingBizApp();
    //   this.calculateNetDeposible();
    //   this.calculateBusinessProfit();
    //   (<any>$('#BusinessExpenses')).modal('hide');
    // }
    SchoolAppraisalComponent.prototype.onBusinessExpenseFormSubmit = function () {
        this.businessExpense.expCategoryKey = 1;
        if (this.isEdit) {
            this.isEdit = false;
            this.totalBusinessExpense = 0;
            this.model.schoolAppraisal.businessExpense[this.itemToEdit.index] = this.businessExpense;
            for (var i = 0; i < this.model.schoolAppraisal.businessExpense.length; i++) {
                var x = +this.model.schoolAppraisal.businessExpense[i].expAmount;
                this.totalBusinessExpense = this.totalBusinessExpense + x;
            }
            $('#BusinessExpenses').modal('hide');
            this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
        }
        else {
            // this.businessExpense.expTypKey = this.businessExpense.expCategoryKey;
            this.model.schoolAppraisal.businessExpense.push(this.businessExpense);
            var x = +this.businessExpense.expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
            this.businessExpense = new _shared_models_BusinessExpense_model__WEBPACK_IMPORTED_MODULE_12__["BusinessExpense"]();
            $('#BusinessExpenses').modal('hide');
        }
        this.removeItemsFromLOVUsingBizApp();
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    SchoolAppraisalComponent.prototype.expenseService = function (expense) {
        this.loanService.saveExpense(expense).subscribe(function (res) {
            console.log(res);
        }, function (error) {
            console.log('err In Expense Service');
            console.log('err', error);
        });
    };
    SchoolAppraisalComponent.prototype.editPIncome = function (primaryIncome) {
        var _this = this;
        this.primaryIncome = JSON.parse(JSON.stringify(primaryIncome));
        this.itemToEdit = JSON.parse(JSON.stringify(primaryIncome));
        this.itemToEdit.index = this.model.schoolAppraisal.primaryIncome.indexOf(primaryIncome);
        this.incomeTypeOrig.forEach(function (element) {
            if (element.codeKey == primaryIncome.incomeTypeKey) {
                _this.incomeType.push(element);
            }
        });
        $('#addPrimaryIncome').modal('show');
        this.isEdit = true;
    };
    SchoolAppraisalComponent.prototype.deletePIncome = function (pIncome) {
        $('#deletePConfirmation').modal('show');
        this.pItemToDel = pIncome;
    };
    SchoolAppraisalComponent.prototype.confirmPDelete = function () {
        var index = this.model.schoolAppraisal.primaryIncome.indexOf(this.pItemToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.schoolAppraisal.primaryIncome.splice(index, 1);
        }
        this.totalPrimaryIncome = 0;
        for (var i = 0; i < this.model.schoolAppraisal.primaryIncome.length; i++) {
            var x = +this.model.schoolAppraisal.primaryIncome[i].incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#addPrimaryIncome').modal('hide');
        $('#deletePConfirmation').modal('hide');
    };
    SchoolAppraisalComponent.prototype.editSIncome = function (secondaryIncome) {
        var _this = this;
        this.secondaryIncomeArray = JSON.parse(JSON.stringify(this.secondaryIncomeArrayOrig));
        this.itemToEdit = JSON.parse(JSON.stringify(secondaryIncome));
        this.secondaryIncome = JSON.parse(JSON.stringify(secondaryIncome));
        this.itemToEdit.index = this.model.schoolAppraisal.secondaryIncome.indexOf(secondaryIncome);
        $('#addSecondaryIncome').modal('show');
        this.secondaryIncomeArrayOrig.forEach(function (element) {
            if (element.codeKey == secondaryIncome.incomeTypeKey) {
                _this.secondaryIncomeArray.push(element);
            }
        });
        this.isEdit = true;
    };
    SchoolAppraisalComponent.prototype.deleteSIncome = function (sIncome) {
        this.sIncomeToDel = sIncome;
        $('#deleteSConfirmation').modal('show');
    };
    SchoolAppraisalComponent.prototype.confirmSDelete = function () {
        var index = this.model.schoolAppraisal.secondaryIncome.indexOf(this.sIncomeToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.schoolAppraisal.secondaryIncome.splice(index, 1);
        }
        this.totalSecondaryIncome = 0;
        for (var i = 0; i < this.model.schoolAppraisal.secondaryIncome.length; i++) {
            var x = +this.model.schoolAppraisal.secondaryIncome[i].incomeAmount;
            this.totalSecondaryIncome = this.totalSecondaryIncome + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#addSecondaryIncome').modal('hide');
        $('#deleteSConfirmation').modal('hide');
    };
    SchoolAppraisalComponent.prototype.editBExpense = function (bExpense) {
        var _this = this;
        this.businessExpense = JSON.parse(JSON.stringify(bExpense));
        this.itemToEdit = JSON.parse(JSON.stringify(bExpense));
        this.itemToEdit.index = this.model.schoolAppraisal.businessExpense.indexOf(bExpense);
        $('#BusinessExpenses').modal('show');
        this.schoolExpenseArrayOrig.forEach(function (element) {
            if (element.codeKey == bExpense.expTypKey) {
                _this.schoolExpenseArray.push(element);
            }
        });
        this.isEdit = true;
    };
    SchoolAppraisalComponent.prototype.deleteBExpense = function (bExpense) {
        this.bExpenseToDel = bExpense;
        $('#deleteBConfirmation').modal('show');
    };
    SchoolAppraisalComponent.prototype.confirmBDelete = function () {
        var index = this.model.schoolAppraisal.businessExpense.indexOf(this.bExpenseToDel, 0);
        console.log(index);
        if (index > -1) {
            this.model.schoolAppraisal.businessExpense.splice(index, 1);
        }
        this.totalBusinessExpense = 0;
        for (var i = 0; i < this.model.schoolAppraisal.businessExpense.length; i++) {
            var x = +this.model.schoolAppraisal.businessExpense[i].expAmount;
            this.totalBusinessExpense = this.totalBusinessExpense + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#BusinessExpenses').modal('hide');
        $('#deleteBConfirmation').modal('hide');
    };
    SchoolAppraisalComponent.prototype.editHExpense = function (hExpense) {
        var _this = this;
        this.householdExpense = JSON.parse(JSON.stringify(hExpense));
        this.itemToEdit = JSON.parse(JSON.stringify(hExpense));
        this.itemToEdit.index = this.model.schoolAppraisal.householdExpense.indexOf(hExpense);
        $('#HouseholdExpenses').modal('show');
        this.householdExpenseArrayOrig.forEach(function (element) {
            if (element.codeKey == hExpense.expTypKey) {
                _this.householdExpenseArray.push(element);
            }
        });
        this.isEdit = true;
    };
    SchoolAppraisalComponent.prototype.deleteHExpense = function (hExpense) {
        this.hExpenseToDel = hExpense;
        $('#deleteHConfirmation').modal('show');
    };
    SchoolAppraisalComponent.prototype.confirmHDelete = function () {
        var index = this.model.schoolAppraisal.householdExpense.indexOf(this.hExpenseToDel);
        console.log(index);
        if (index > -1) {
            this.model.schoolAppraisal.householdExpense.splice(index, 1);
        }
        this.totalHouseholdExpense = 0;
        for (var i = 0; i < this.model.schoolAppraisal.householdExpense.length; i++) {
            var x = +this.model.schoolAppraisal.householdExpense[i].expAmount;
            this.totalHouseholdExpense = this.totalHouseholdExpense + x;
        }
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
        this.removeItemsFromLOVUsingBizApp();
        $('#HouseholdExpenses').modal('hide');
        $('#deleteHConfirmation').modal('hide');
    };
    SchoolAppraisalComponent.prototype.chosenYearHandler = function (normalizedYear, datepicker) {
        this.date = moment();
        var ctrlValue = this.date;
        ctrlValue.year(normalizedYear.year());
        this.date = ctrlValue;
        this.model.schoolAppraisal.schyr = normalizedYear.year();
        console.log(normalizedYear.year());
        datepicker.close();
    };
    SchoolAppraisalComponent.prototype.chosenMonthHandler = function (normlizedMonth, datepicker) {
        var ctrlValue = this.date.value;
        ctrlValue.month(normlizedMonth.month());
        this.date.setValue(ctrlValue);
        datepicker.close();
    };
    SchoolAppraisalComponent.prototype.removeItemsFromLOVUsingBizApp = function () {
        var _this = this;
        this.incomeType = JSON.parse(JSON.stringify(this.incomeTypeOrig));
        this.secondaryIncomeArray = JSON.parse(JSON.stringify(this.secondaryIncomeArrayOrig));
        this.schoolExpenseArray = JSON.parse(JSON.stringify(this.schoolExpenseArrayOrig));
        this.householdExpenseArray = JSON.parse(JSON.stringify(this.householdExpenseArrayOrig));
        this.model.schoolAppraisal.primaryIncome.forEach(function (x) {
            _this.removeItemFromLOV(x.incomeTypeKey, _this.incomeType);
        });
        this.model.schoolAppraisal.secondaryIncome.forEach(function (x) {
            _this.removeItemFromLOV(x.incomeTypeKey, _this.secondaryIncomeArray);
        });
        this.model.schoolAppraisal.businessExpense.forEach(function (x) {
            _this.removeItemFromLOV(x.expTypKey, _this.schoolExpenseArray);
        });
        this.model.schoolAppraisal.householdExpense.forEach(function (x) {
            _this.removeItemFromLOV(x.expTypKey, _this.householdExpenseArray);
        });
    };
    SchoolAppraisalComponent.prototype.removeItemFromLOV = function (key, lov) {
        var index = -1;
        for (var i = 0; i < lov.length; i++) {
            if (key == lov[i].codeKey) {
                index = i;
                break;
            }
        }
        if (index >= 0) {
            lov.splice(index, 1);
        }
    };
    SchoolAppraisalComponent.prototype.getTotal = function () {
        var x = +this.model.schoolAppraisal.totMaleTchrs + +this.model.schoolAppraisal.totFemTchrs;
        if (x == 0)
            return 0;
        return this.totalGrade.totalStudents / x;
    };
    SchoolAppraisalComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-school-appraisal',
            template: __webpack_require__(/*! ./school-appraisal.component.html */ "./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.html"),
            styles: [__webpack_require__(/*! ./school-appraisal.component.css */ "./src/app/pages/loan-origination/loan-app/school-appraisal/school-appraisal.component.css")],
            providers: [
                // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your
                // application's root module. We provide it at the component level here, due to limitations of
                // our example generation script.
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_14__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_15__["MomentDateAdapter"], deps: [_angular_material__WEBPACK_IMPORTED_MODULE_14__["MAT_DATE_LOCALE"]] },
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_14__["MAT_DATE_FORMATS"], useValue: MY_FORMATS },
            ],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_3__["LoanService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_4__["BreadcrumbProvider"],
            _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_10__["ToastrService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormBuilder"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_16__["NgxSpinnerService"]])
    ], SchoolAppraisalComponent);
    return SchoolAppraisalComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/school-information/school-information.component.css":
/*!*****************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/school-information/school-information.component.css ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dot {\r\n    margin-right: 5px;\r\n    height: 8px;\r\n    width: 8px;\r\n    \r\n    border-radius: 50%;\r\n    display: inline-block;\r\n  }\r\n\r\n  .green{\r\n    background-color: #0ed30e;\r\n  }\r\n\r\n  .orange{\r\n    background-color:#f89a3b;\r\n  }"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/school-information/school-information.component.html":
/*!******************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/school-information/school-information.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n\r\n    <div class=\"content\">\r\n      <h6 class=\"mt-3\">{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n\r\n\r\n      <ul class=\"nav nav-tabs borrowerTabs\" id=\"borrowerTabs\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" id=\"business-assets-tab\" data-toggle=\"tab\" href=\"#assetsTab\" role=\"tab\"\r\n            aria-controls=\"home\" aria-selected=\"true\"><span *ngIf=\"model.schoolInformation.hasAssets\" class=\"dot green\"></span><span\r\n              *ngIf=\"!model.schoolInformation.hasAssets\" class=\"dot orange\"></span>School Infrastructure</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"school-quality-checklist-tab\" data-toggle=\"tab\" href=\"#qualityTab\" role=\"tab\"\r\n            aria-controls=\"qualityTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolInformation.hasQltyChck\" class=\"dot green\"></span><span *ngIf=\"!model.schoolInformation.hasQltyChck\"\r\n              class=\"dot orange\"></span>School Quality Questionnaire</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"document-checklist-tab\" data-toggle=\"tab\" href=\"#documentTab\" role=\"tab\"\r\n            aria-controls=\"documentTab\" aria-selected=\"false\"><span *ngIf=\"model.schoolInformation.hasDocChck\" class=\"dot green\"></span><span\r\n              *ngIf=\"!model.schoolInformation.hasDocChck\" class=\"dot orange\"></span>Documents Verification Checklist</a>\r\n        </li>\r\n      </ul>\r\n      <form (ngSubmit)=\"onSubmit()\" #coBorrowerForm=\"ngForm\">\r\n\r\n        <div class=\"tab-content borrowerTabsContent mb-md-5\" id=\"borrowerTabsContent\">\r\n\r\n\r\n          <div class=\"tab-pane fade show active\" id=\"assetsTab\" role=\"tabpanel\" aria-labelledby=\"business-assets-tab\">\r\n\r\n            <h6 class=\"colorBlack mt-2 mb-2\">School Infrastructure</h6>\r\n            <div>\r\n              <div class=\"cRow\">\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required matInput [disabled]=\"readonly && auth.role!='admin'\" id=\"totRmsId\"\r\n                      #totRms=\"ngModel\" name=\"totRms\" [(ngModel)]=\"model.schoolInformation.totRms\" placeholder=\"Total Classrooms\">\r\n                    <mat-error *ngIf=\"totRms.invalid\">\r\n                        Total Classrooms is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required id=\"totOfcsId\" name=\"totOfcs\"\r\n                      #totOfcs=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totOfcs\" placeholder=\"Total Male Toilets\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totOfcs.invalid\">\r\n                      Total Male Toilets is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyNumbers($event)\" id=\"totFlrsId\" required maxlength=\"3\" name=\"totFlrs\"\r\n                        #totFlrs=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totFlrs\" placeholder=\"Total Female Toilets\"\r\n                        matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                      <mat-error *ngIf=\"totFlrs.invalid\">\r\n                          Total Female Toilets is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required id=\"totToiletsId\" name=\"totToilets\"\r\n                      #totToilets=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totToilets\" placeholder=\"Total Mixed Toilets\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totToilets.invalid\">\r\n                        Total Mixed Toilets is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                \r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required id=\"totCmptrsId\" name=\"totCmptrs\"\r\n                      #totCmptrs=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totCmptrs\" placeholder=\"Total Computers in Computer Lab(s)\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totCmptrs.invalid\">\r\n                      Total Computers is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required id=\"totChrsId\" name=\"totChrs\"\r\n                      #totChrs=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totChrs\" placeholder=\"Total Chairs/Benches\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totChrs.invalid\">\r\n                      Total Chairs/Benches is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required id=\"totDsksId\" name=\"totDsks\"\r\n                      #totDsks=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totDsks\" placeholder=\"Total Desks\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totDsks.invalid\">\r\n                      Total Desks is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required id=\"totLabsId\" name=\"totLabs\"\r\n                      #totLabs=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totLabs\" placeholder=\"Total Science Labs\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totLabs.invalid\">\r\n                      Total Science Labs is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                    <mat-form-field>\r\n                      <input type=\"text\" (keypress)=\"onlyNumbers($event)\" id=\"othAstsId\" required name=\"othAsts\" #othAsts=\"ngModel\" maxlength=\"3\" [(ngModel)]=\"model.schoolInformation.othAsts\"\r\n                        placeholder=\"Total Computer Labs\" matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                      <mat-error *ngIf=\"othAsts.invalid\">\r\n                          Total Computer Labs is\r\n                        <strong>invalid</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" maxlength=\"3\" required id=\"totWclrsId\" name=\"totWclrs\"\r\n                      #totWclrs=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totWclrs\" placeholder=\"Total Watercoolers\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totWclrs.invalid\">\r\n                      Total Watercoolers is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" id=\"totFansId\" required maxlength=\"3\" name=\"totFans\"\r\n                      #totFans=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totFans\" placeholder=\"Total Fans\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totFans.invalid\">\r\n                      Total Fans is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cCol1\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" (keypress)=\"onlyNumbers($event)\" id=\"totGnrtrsId\" required maxlength=\"3\" name=\"totGnrtrs\"\r\n                      #totGnrtrs=\"ngModel\" [(ngModel)]=\"model.schoolInformation.totGnrtrs\" placeholder=\"Total Generators/UPS\"\r\n                      matInput [disabled]=\"readonly && auth.role!='admin'\">\r\n                    <mat-error *ngIf=\"totGnrtrs.invalid\">\r\n                      Total Generators/UPS is\r\n                      <strong>invalid</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                \r\n\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"qualityTab\" role=\"tabpanel\" aria-labelledby=\"school-quality-checklist-tab\">\r\n\r\n            <form>\r\n              <div class=\"borderbox pt-2 mb-3\" *ngFor=\"let catQuestion of model.schoolInformation.SchoolQAArray; let h = index\">\r\n                <label><b>{{catQuestion.group}}</b></label>\r\n                <div class=\"qs row\" *ngFor=\"let question of catQuestion.questions; let i = index\">\r\n                  <div class=\"col-sm-9\">\r\n                    <p>{{question.questionString}}</p>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"qsbtns text-right\">\r\n                      <mat-radio-group [disabled]=\"readonly && auth.role!='admin'\" name=\"answer{{h}}{{i}}\" [(ngModel)]=\"question.answerSeq\">\r\n                        <mat-radio-button class=\"w-50\" *ngFor=\"let disFlag of booleanQA\" [value]=\"disFlag.codeRefCd\">{{disFlag.codeValue}}</mat-radio-button>\r\n                      </mat-radio-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"tab-pane fade\" id=\"documentTab\" role=\"tabpanel\" aria-labelledby=\"document-checklist-tab\">\r\n            <form>\r\n              <div class=\"borderbox pt-2 mb-3\" *ngFor=\"let catQuestion of model.schoolInformation.documentChecklist; let h = index\">\r\n                <label><b>{{catQuestion.group}}</b></label>\r\n                <div class=\"qs row\" *ngFor=\"let dquestion of catQuestion.questions; let i = index\">\r\n                  <div class=\"col-sm-9\">\r\n                    <p>{{dquestion.questionString}}</p>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n\r\n                    <!-- <div class=\"qsbtns text-right\">\r\n                      <mat-radio-group name=\"answer{{h}}{{i}}\" [(ngModel)]=\"dquestion.answerSeq\">\r\n                        <mat-radio-button class=\"w-50\" *ngFor=\"let disFlag of booleanQA\" [value]=\"disFlag.codeKey\">{{disFlag.codeValue}}</mat-radio-button>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n                    <div class=\"qsbtns text-right\">\r\n                        <mat-radio-group [disabled]=\"readonly && auth.role!='admin'\" name=\"danswer{{h}}{{i}}\" [(ngModel)]=\"dquestion.answerSeq\">\r\n                            <mat-radio-button class=\"w-50\" *ngFor=\"let disFlag of booleanQA\" [value]=\"disFlag.codeRefCd\">{{disFlag.codeValue}}</mat-radio-button>\r\n                          </mat-radio-group>\r\n                      <!-- <div class=\"cCol1\">\r\n                        <mat-select placeholder=\"Select: *\" [(ngModel)]=\"dquestion.answerSeq\" \r\n                          pattern=\"^[1-9]\\d*$\" name=\"answer{{h}}{{i}}\">\r\n                          <mat-option *ngFor=\"let disFlag of booleanQA\" [value]=\"disFlag.codeKey\">\r\n                            {{disFlag.codeValue}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </div> -->\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <button (click)=\"continueClicked()\" type=\"button\" class=\"btn btn-primary\">Continue</button>\r\n        <button class=\"btn btn-default\" [disabled]=\"readonly && auth.role!='admin'\" type=\"submit\">Save</button>\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/school-information/school-information.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/school-information/school-information.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: SchoolInformationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolInformationComponent", function() { return SchoolInformationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_models_SchoolInformation_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/models/SchoolInformation.model */ "./src/app/shared/models/SchoolInformation.model.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var SchoolInformationComponent = /** @class */ (function () {
    function SchoolInformationComponent(router, loanService, breadcrumbProvider, commonService, toaster, spinner) {
        this.router = router;
        this.loanService = loanService;
        this.breadcrumbProvider = breadcrumbProvider;
        this.commonService = commonService;
        this.toaster = toaster;
        this.spinner = spinner;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
    }
    SchoolInformationComponent.prototype.ngOnInit = function () {
        var _this = this;
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem('basicCrumbs'));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved);
        });
        this.model = JSON.parse(sessionStorage.getItem('model'));
        if (this.model.schoolInformation == undefined || this.model.schoolInformation == null) {
            this.model.schoolInformation = new _shared_models_SchoolInformation_model__WEBPACK_IMPORTED_MODULE_6__["SchoolInformation"]();
            this.model.schoolInformation.loanAppSeq = this.model.loanAppSeq;
            this.model.schoolInformation.SchoolQAArray = [];
            this.model.schoolInformation.documentChecklist = [];
            this.model.schoolInformation.mwAnswers = [];
            this.model.schoolInformation.schoolQualityCheckDtos = [];
        }
        console.log(this.model);
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (sessionStorage.getItem('editLoan') === 'true') {
            console.log(this.model.loanSeq);
            this.spinner.show();
            this.loanService.getSchoolInformation(this.model.loanAppSeq).subscribe(function (schoolAP) {
                _this.model.schoolInformation = schoolAP;
                _this.getQuestions(2);
                _this.getDocQuestions(3);
                _this.spinner.hide();
            }, function (error) {
                console.log(error);
                _this.spinner.hide();
                _this.getQuestions(2);
                _this.getDocQuestions(3);
            });
        }
        else {
            if (this.model.schoolInformation.SchoolQAArray.length <= 0) {
                this.getQuestions(2);
            }
            else {
                var i_1 = -1;
                this.model.schoolInformation.SchoolQAArray.forEach(function (res) {
                    res.questions.forEach(function (q) {
                        if (q.answerSeq <= 0) {
                            i_1++;
                        }
                    });
                });
                if (i_1 == -1) {
                    this.hasQlty = true;
                }
            }
            if (this.model.schoolInformation.documentChecklist.length <= 0) {
                this.getDocQuestions(3);
            }
            else {
                var i_2 = -1;
                this.model.schoolInformation.documentChecklist.forEach(function (res) {
                    res.questions.forEach(function (q) {
                        if (q.answerSeq <= 0) {
                            i_2++;
                        }
                    });
                });
                if (i_2 == -1) {
                    this.hasDocs = true;
                }
            }
        }
        this.loadLovs();
    };
    SchoolInformationComponent.prototype.continueClicked = function () {
        var _this = this;
        if (this.model.forms) {
            var i_3 = 0;
            this.model.forms.forEach(function (forms) {
                if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                    _this.router.navigate(["/loan-origination/app/" + _this.model.forms[i_3 + 1].formUrl]);
                }
                i_3++;
            });
        }
    };
    SchoolInformationComponent.prototype.getQuestions = function (seq) {
        var _this = this;
        this.loanService.getSchoolByQstnrSeq(seq).subscribe(function (rawQA) {
            console.log(rawQA);
            _this.rawQuestionsArray = rawQA;
            _this.model.schoolInformation.SchoolQAArray = rawQA;
            _this.model.schoolInformation.schoolQualityCheckDtos.forEach(function (question) {
                _this.model.schoolInformation.SchoolQAArray.forEach(function (q) {
                    q.questions.forEach(function (res) {
                        if (res.questionKey == question.qstSeq) {
                            res.answerSeq = question.answrSeq.toString();
                            return;
                        }
                    });
                });
            });
            var i = -1;
            _this.model.schoolInformation.SchoolQAArray.forEach(function (res) {
                res.questions.forEach(function (q) {
                    if (q.answerSeq <= 0) {
                        i++;
                    }
                });
            });
            if (i == -1) {
                _this.hasQlty = true;
            }
        }, function (error) {
            console.log('err', error);
        });
    };
    SchoolInformationComponent.prototype.getDocQuestions = function (seq) {
        var _this = this;
        this.loanService.getSchoolByQstnrSeq(seq).subscribe(function (rawQA) {
            console.log(rawQA);
            _this.rawQuestionsArray = rawQA;
            _this.model.schoolInformation.documentChecklist = rawQA;
            _this.model.schoolInformation.schoolQualityCheckDtos.forEach(function (question) {
                _this.model.schoolInformation.documentChecklist.forEach(function (q) {
                    q.questions.forEach(function (res) {
                        if (res.questionKey == question.qstSeq) {
                            res.answerSeq = question.answrSeq.toString();
                            return;
                        }
                    });
                });
            });
            var i = -1;
            _this.model.schoolInformation.documentChecklist.forEach(function (res) {
                res.questions.forEach(function (q) {
                    if (q.answerSeq <= 0) {
                        i++;
                    }
                });
            });
            if (i == -1) {
                _this.hasDocs = true;
            }
        }, function (error) {
            console.log('err', error);
        });
    };
    SchoolInformationComponent.prototype.loadLovs = function () {
        var _this = this;
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_8__["DEFAULT_BOOLEAN"]).subscribe(function (d) { return _this.booleanQA = d; });
    };
    SchoolInformationComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode !== 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    SchoolInformationComponent.prototype.findKeyFromValue = function (value, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                console.log(array[i].codeValue.toLowerCase() + "===" + value.toLowerCase());
                console.log(array[i].codeValue.toLowerCase() == value.toLowerCase());
                if (array[i].codeValue.toLowerCase() == value.toLowerCase()) {
                    return array[i].codeRefCd;
                }
            }
        }
        return -1;
    };
    SchoolInformationComponent.prototype.onSubmit = function () {
        var _this = this;
        this.spinner.show();
        this.model.schoolInformation.formSeq = this.model.formSeq;
        this.model.schoolInformation.loanAppSeq = this.model.loanAppSeq;
        this.loanService.addSchoolInformation(this.model.schoolInformation).subscribe(function (res) {
            _this.spinner.hide();
            _this.model.schoolInformation = res.schoolInformationDto;
            _this.hasDocs = _this.model.schoolInformation.hasDocChck;
            _this.hasQlty = _this.model.schoolInformation.hasQltyChck;
            _this.toaster.success('Saved School Information Successfully', 'Success');
            if (_this.model.forms) {
                _this.model.forms.forEach(function (forms) {
                    if ("/loan-origination/app/" + forms.formUrl == _this.router.url) {
                        forms.isSaved = _this.model.schoolInformation.formComplete;
                        _this.breadcrumbProvider.addCheckedItemDis(forms.formNm, '/loan-origination/app/' + forms.formUrl, forms.isSaved, false);
                    }
                });
            }
            sessionStorage.setItem('model', JSON.stringify(_this.model));
            _this.spinner.show();
            _this.loanService.getSchoolInformation(_this.model.loanAppSeq).subscribe(function (schoolAP) {
                _this.model.schoolInformation = schoolAP;
                _this.getQuestions(2);
                _this.getDocQuestions(3);
                _this.spinner.hide();
            }, function (error) {
                console.log(error);
                _this.spinner.hide();
                _this.getQuestions(2);
                _this.getDocQuestions(3);
            });
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error("Server Error");
            console.log('err', error);
        });
    };
    SchoolInformationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-school-information',
            template: __webpack_require__(/*! ./school-information.component.html */ "./src/app/pages/loan-origination/loan-app/school-information/school-information.component.html"),
            styles: [__webpack_require__(/*! ./school-information.component.css */ "./src/app/pages/loan-origination/loan-app/school-information/school-information.component.css")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_4__["LoanService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_3__["BreadcrumbProvider"],
            _shared_services_common_service__WEBPACK_IMPORTED_MODULE_2__["CommonService"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_1__["ToastrService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_7__["NgxSpinnerService"]])
    ], SchoolInformationComponent);
    return SchoolInformationComponent;
}());



/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.css":
/*!*****************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.css ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "tr {\r\n    vertical-align: top;\r\n}\r\n\r\n\r\n.container {\r\n    border: 2px solid #dedede;\r\n    background-color: #f1f1f1;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 10px 0;\r\n  }\r\n\r\n\r\n/* Darker chat container */\r\n\r\n\r\n.darker {\r\n    border-color: #ccc;\r\n    background-color: #ddd;\r\n  }\r\n\r\n\r\n/* Clear floats */\r\n\r\n\r\n.container::after {\r\n    content: \"\";\r\n    clear: both;\r\n    display: table;\r\n  }\r\n\r\n\r\n/* Style images */\r\n\r\n\r\n.container img {\r\n    float: left;\r\n    max-width: 60px;\r\n    width: 100%;\r\n    margin-right: 20px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n\r\n/* Style the right image */\r\n\r\n\r\n.container img.right {\r\n    float: right;\r\n    margin-left: 20px;\r\n    margin-right:0;\r\n  }\r\n\r\n\r\n/* Style time text */\r\n\r\n\r\n.time-right {\r\n    float: right;\r\n    color: #aaa;\r\n  }\r\n\r\n\r\n/* Style time text */\r\n\r\n\r\n.time-left {\r\n    float: left;\r\n    color: #999;\r\n  }\r\n\r\n\r\n.tr {\r\n    text-align: right;\r\n  }\r\n\r\n\r\n.fr {\r\n      float: right;\r\n  }\r\n\r\n\r\n.fl {\r\n      float: left;\r\n  }\r\n\r\n\r\n/* Style the Image Used to Trigger the Modal */\r\n\r\n\r\n#myImg {\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n}\r\n\r\n\r\n#myImg:hover {opacity: 0.7;}\r\n\r\n\r\n/* The Modal (background) */\r\n\r\n\r\n.modal-e {\r\n  display: none; /* Hidden by default */\r\n  position: fixed; /* Stay in place */\r\n  z-index: 10; /* Sit on top */\r\n  padding-top: 100px; /* Location of the box */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%; /* Full width */\r\n  height: 100%; /* Full height */\r\n  overflow: auto; /* Enable scroll if needed */\r\n  background-color: rgb(0,0,0); /* Fallback color */\r\n  background-color: rgba(0,0,0,0.9); /* Black w/ opacity */\r\n}\r\n\r\n\r\n/* Modal Content (Image) */\r\n\r\n\r\n.modal-content-e {\r\n  margin: auto;\r\n  display: block;\r\n  width: 80%;\r\n  max-width: 700px;\r\n}\r\n\r\n\r\n/* Caption of Modal Image (Image Text) - Same Width as the Image */\r\n\r\n\r\n#caption {\r\n  margin: auto;\r\n  display: block;\r\n  width: 80%;\r\n  max-width: 700px;\r\n  text-align: center;\r\n  color: #ccc;\r\n  padding: 10px 0;\r\n  height: 150px;\r\n}\r\n\r\n\r\n/* Add Animation - Zoom in the Modal */\r\n\r\n\r\n.modal-content-e, #caption { \r\n  -webkit-animation-name: zoom; \r\n          animation-name: zoom;\r\n  -webkit-animation-duration: 0.6s;\r\n          animation-duration: 0.6s;\r\n}\r\n\r\n\r\n@-webkit-keyframes zoom {\r\n  from {-webkit-transform:scale(0);transform:scale(0)} \r\n  to {-webkit-transform:scale(1);transform:scale(1)}\r\n}\r\n\r\n\r\n@keyframes zoom {\r\n  from {-webkit-transform:scale(0);transform:scale(0)} \r\n  to {-webkit-transform:scale(1);transform:scale(1)}\r\n}\r\n\r\n\r\n/* The Close Button */\r\n\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 35px;\r\n  color: #f1f1f1;\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n  transition: 0.3s;\r\n}\r\n\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: #bbb;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n/* 100% Image Width on Smaller Screens */\r\n\r\n\r\n@media only screen and (max-width: 700px){\r\n  .modal-content-e {\r\n    width: 100%;\r\n  }\r\n}"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.html":
/*!******************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<main class=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <app-breadcrumb></app-breadcrumb>\r\n    <div class=\"modal fade\" id=\"scheduleModal\" role=\"dialog\">\r\n      <div class=\"modal-dialog bigger mymodal\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Payment Schedule </h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table last-left\">\r\n                <thead class=\"thead-light last-left\">\r\n                  <tr>\r\n                    <th width=\"20%\">Installment No.</th>\r\n                    <th width=\"20%\" style=\"text-align: right;\">Principal Amount</th>\r\n                    <th width=\"30%\" style=\"text-align: right;\">Total Charge</th>\r\n                    <th width=\"30%\" style=\"text-align: right;\">Installment Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"evenodd\">\r\n                  <tr *ngFor=\"let schedule of paymentSchedule\">\r\n                    <td>{{schedule.detail.instNum}} </td>\r\n                    <td style=\"text-align: right;\">{{schedule.detail.ppalAmtDue | currency:'PKR':''}}</td>\r\n                    <td style=\"text-align: right;\">{{schedule.detail.totChrgDue | currency:'PKR':''}}</td>\r\n                    <td style=\"text-align: right;\">{{schedule.detail.ppalAmtDue + schedule.detail.totChrgDue + calculateTotalCharge(schedule.chargers) |\r\n                      currency:'PKR':''}}</td>\r\n                  </tr>\r\n\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"content\">\r\n\r\n      <div class=\"row\">\r\n        <!-- <div class=\"col-sm-6\">\r\n              <h6>{{model.clientSeq}} - {{model.firstName}} {{model.lastName}}</h6>\r\n            </div> -->\r\n        <div class=\"col-sm-9 addBtn\">\r\n          <button type=\"button\" (click)=\"onPaymentScheduleClick()\" class=\"btn btn-primary btn-sm\">\r\n            <i class=\"fa fa-plus\"></i> Payment Schedule</button>\r\n          <!-- <a  class=\"btn btn-primary btn-sm\" disabled> Fetch MFCIB</a> -->\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"pt-1\">\r\n        <label>\r\n          <b>Client Information:</b>\r\n        </label>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-9 mb-3\">\r\n          <div class=\"borderbox pb-0\">\r\n            <ul class=\"infolist mt-2 mb-2\">\r\n              <li>User:\r\n                <span>{{auth.user.username | uppercase}}</span>\r\n              </li>\r\n              <li>Region:\r\n                <span>{{locationInfo.regName | uppercase}}</span>\r\n              </li>\r\n              <li>Area:\r\n                <span>{{locationInfo.areaName | uppercase}}</span>\r\n              </li>\r\n              <li>Branch:\r\n                <span>{{locationInfo.branchName | uppercase}}</span>\r\n              </li>\r\n              <li *ngIf=\"auth.role =='bm'\">BDO:\r\n                <span>{{locationInfo.portName | uppercase}}</span>\r\n              </li>\r\n              <!-- <li>Application ID:\r\n                <span> {{model.loanAppSeq}}</span>\r\n              </li> -->\r\n              <li>Credit Application Date:\r\n                <span>{{model.startDate | date:'dd-MM-yyyy'}}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>Client Personal Information:</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-140\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td width=\"60%\">Client ID:</td>\r\n                    <td>{{model.clientSeq}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Client CNIC:</td>\r\n                    <td>{{returnCNICPattern(model.cnicNum)}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Client Name:</td>\r\n                    <td>{{model.firstName}} {{model.lastName}}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td width=\"60%\">Marital Status:</td>\r\n                    <td>{{findValueFromKey(model.maritalStatusKey, maritalStatus)}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Occupation:</td>\r\n                    <td>{{findValueFromKey(model.occupationKey, occupation)}}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>Household Information:</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-140\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td width=\"60%\">Residence Status:</td>\r\n                    <td>{{findValueFromKey(model.residenceTypeKey, residenceArray)}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Residence Tenure:</td>\r\n                    <td>{{model.yearsOfResidence}} Year {{model.mnthsOfResidence}} Month</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Total Family Members:</td>\r\n                    <td>{{model.houseHoldMember}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Total No. of Children:</td>\r\n                    <td>{{model.numOfChidren}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Total No. of Earners:</td>\r\n                    <td>{{model.earningMembers}}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"col-sm-4\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>Branch Data:</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-140\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td width=\"40%\">Branch Code:</td>\r\n                    <td>{{locationInfo.branchCode}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"40%\">Branch Name:</td>\r\n                    <td>{{locationInfo.branchName}}\r\n\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"40%\">BDO Name:</td>\r\n                    <td>{{locationInfo.portName}}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\" *ngIf=\"hasBusinessApp\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>Business Appraisal Summary (Monthly):</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-300\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td width=\"60%\">Business Income:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{averageIncome | currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Business Expenses:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalBusinessExpense | currency:'PKR':''}}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td width=\"60%\">Business Profit:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{averageIncome - totalBusinessExpense |\r\n                      currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Husb./Father/Self Income:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalPrimaryIncome | currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\" class=\"colorBlue\">\r\n                      <b>Total Primary Income:</b>\r\n                    </td>\r\n                    <td class=\"colorBlue\" style=\"text-align:right; padding-right: 20px;\">\r\n                      <b>{{averageIncome - totalBusinessExpense + totalPrimaryIncome | currency:'PKR':''}}</b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Secondary Income:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalSecondaryIncome | currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\" class=\"colorBlue\">\r\n                      <b>Total Income:</b>\r\n                    </td>\r\n                    <td class=\"colorBlue\" style=\"text-align:right; padding-right: 20px;\">\r\n                      <b>{{averageIncome - totalBusinessExpense + totalPrimaryIncome + totalSecondaryIncome |\r\n                        currency:'PKR':''}}</b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Household Expenses: </td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalHouseholdExpense | currency:'PKR':''}}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\" class=\"colorBlue\">\r\n                      <b>Net Disposable Income:</b>\r\n                    </td>\r\n                    <td class=\"colorBlue\" style=\"text-align:right; padding-right: 20px;\">\r\n                      <b>{{averageIncome - totalBusinessExpense + totalPrimaryIncome + totalSecondaryIncome -\r\n                        totalHouseholdExpense | currency:'PKR':''}}</b>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-4\" *ngIf=\"hasSchoolApp\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>School Appraisal Summary (Monthly):</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-300\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td width=\"60%\">School Income:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalGrade.schoolRevenue | currency:'PKR':''}}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">School Expenses:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalGrade.totalBusinessExpense |\r\n                      currency:'PKR':''}}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td width=\"60%\">School Profit:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalGrade.schoolRevenue -\r\n                      totalGrade.totalBusinessExpense | currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Husb./Father/Self Income:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalGrade.totalPrimaryIncome |\r\n                      currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\" class=\"colorBlue\">\r\n                      <b>Total School Income:</b>\r\n                    </td>\r\n                    <td class=\"colorBlue\" style=\"text-align:right; padding-right: 20px;\">\r\n                      <b>{{totalGrade.schoolRevenue - totalGrade.totalBusinessExpense + totalGrade.totalPrimaryIncome |\r\n                        currency:'PKR':''}}</b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Secondary Income:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalGrade.totalSecondaryIncome |\r\n                      currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\" class=\"colorBlue\">\r\n                      <b>Total Income:</b>\r\n                    </td>\r\n                    <td class=\"colorBlue\" style=\"text-align:right; padding-right: 20px;\">\r\n                      <b>{{totalGrade.schoolRevenue - totalGrade.totalBusinessExpense + totalGrade.totalPrimaryIncome +\r\n                        totalGrade.totalSecondaryIncome |\r\n                        currency:'PKR':''}}</b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Household Expenses: </td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{totalGrade.totalHouseholdExpense |\r\n                      currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\" class=\"colorBlue\">\r\n                      <b>Net Disposable Income:</b>\r\n                    </td>\r\n                    <td class=\"colorBlue\" style=\"text-align:right; padding-right: 20px;\">\r\n                      <b>{{totalGrade.schoolRevenue - totalGrade.totalBusinessExpense + totalGrade.totalPrimaryIncome +\r\n                        totalGrade.totalSecondaryIncome -\r\n                        totalGrade.totalHouseholdExpense | currency:'PKR':''}}</b>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>Credit Information</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-300\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td width=\"60%\">Credit Product:</td>\r\n                    <td>{{product.productName}} </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Credit Cycle:</td>\r\n                    <td>{{model.loanCyclNum}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Previous Credit Amount:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{model.previousAmount | currency:'PKR':''}}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td width=\"60%\">Credit Amount Requested:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{model.reqAmount | currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Credit Amount Recommended:</td>\r\n                    <td style=\"text-align:right; padding-right: 20px;\">{{model.recAmount | currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr *ngIf=\"auth.role =='bm'\">\r\n                    <td width=\"60%\">Credit Amount Approved:</td>\r\n                    <td>{{model.approvedAmount | currency:'PKR':''}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\">Service Charges:</td>\r\n                    <td>{{product.chargesStr}}</td>\r\n                  </tr>\r\n                  <!-- <tr>\r\n                    <td width=\"55%\">Total Amount Payable:</td>\r\n                    <td>{{model.totalRecieveable}}</td>\r\n                  </tr> -->\r\n                  <tr>\r\n                    <td width=\"60%\">No. of Installments:</td>\r\n                    <td>{{product.installments}}</td>\r\n                  </tr>\r\n\r\n                  <tr *ngIf=\"auth.role == 'bm'\">\r\n                    <td width=\"60%\">Screening Type:</td>\r\n                    <td *ngIf=\"!model.tblScrn\">Table Screening</td>\r\n                    <td *ngIf=\"model.tblScrn\">Field Screening</td>\r\n                  </tr>\r\n                  <!-- <tr>\r\n                    <td width=\"55%\">Installment Amount:</td>\r\n                    <td>{{product.installmentAmount}}</td>\r\n                  </tr> -->\r\n                  <!-- <tr>\r\n                    <td width=\"55%\">Credit Disbursement Date:</td>\r\n                    <td>5-Jun-18</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"55%\">Credit Completion Date:</td>\r\n                    <td>05-Jun-18</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"55%\">KSZB Plan:</td>\r\n                    <td>Plan-B</td>\r\n                  </tr> -->\r\n\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-4\" *ngIf=\"hasBusinessApp\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>Business Information:</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-300\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td>Sector:</td>\r\n                    <td width=\"60%\">{{findValueFromKeySector(model.businessAppraisal.sectorKey, sector)}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Business Tenure:\r\n                    </td>\r\n                    <td width=\"60%\"> {{model.businessAppraisal.yearsInBusiness}} Year\r\n                      {{model.businessAppraisal.monthsInBusiness}}\r\n                      Months</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Business Address:\r\n                    </td>\r\n                    <td width=\"60%\">House No. {{model.businessAppraisal.houseNum}},\r\n                      {{model.businessAppraisal.sreet_area}}, {{model.businessAppraisal.village}},\r\n                      {{model.businessAppraisal.otherDetails}}.</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td height=\"20\"></td>\r\n                    <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Persons Running the Business:\r\n                    </td>\r\n                    <td width=\"60%\">{{findValueFromKey(model.businessAppraisal.personRunningBusinessKey,\r\n                      businessRunner)}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Business Owner:\r\n                    </td>\r\n                    <td width=\"60%\">{{findValueFromKey(model.businessAppraisal.businessOwnerShip, businessOwnership)}}\r\n                    </td>\r\n                  </tr>\r\n\r\n\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-4\" *ngIf=\"hasSchoolApp\">\r\n              <div class=\"pt-1\">\r\n                <label>\r\n                  <b>School Information:</b>\r\n                </label>\r\n              </div>\r\n              <div class=\"borderbox p-2 mnh-300\">\r\n                <table class=\"simpletale\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                  <tr>\r\n                    <td>Sector: </td>\r\n                    <td width=\"60%\">SCHOOL</td>\r\n                  </tr>\r\n                  <!-- <tr>\r\n                      <td width=\"50%\">Business Tenure:\r\n                      </td>\r\n                      <td> {{model.businessAppraisal.yearsInBusiness}} Year {{model.businessAppraisal.monthsInBusiness}} Months</td>\r\n                    </tr> -->\r\n                  <tr>\r\n                    <td>School Address:\r\n                    </td>\r\n                    <td width=\"60%\">House No. {{model.schoolAppraisal.addressDto.houseNum}}, Street No.\r\n                      {{model.schoolAppraisal.addressDto.sreet_area}}, {{model.schoolAppraisal.addressDto.village}},\r\n                      {{model.schoolAppraisal.addressDto.otherDetails}}.\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"60%\" height=\"20\"></td>\r\n                    <td></td>\r\n                  </tr>\r\n\r\n                  <!-- <tr>\r\n                    <td width=\"50%\">School Owner:\r\n                    </td>\r\n                    <td>{{findValueFromKey(model.schoolAppraisal.schOwnTypKey, schoolOwnerShip)}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td width=\"70%\">School Type:\r\n                      </td>\r\n                      <td>{{findValueFromKey(model.schoolAppraisal.schTypKey, schoolType)}}</td>\r\n                    </tr>\r\n                  <tr>\r\n                    <td width=\"70%\">Principal:\r\n                    </td>\r\n                    <td>{{findValueFromKey(model.schoolAppraisal.schPpalKey, principal)}}</td>\r\n                  </tr> -->\r\n\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-3\">\r\n            <div class=\"borderbox pb-0\" *ngIf=\"hasBusinessApp\">\r\n              <ul class=\"infolist mt-2 mb-2\">\r\n                <!-- <li>\r\n                  <span>\r\n                    <b>Total Receivable Amount: {{product.totalRecieveable}}</b>\r\n                  </span>\r\n                </li> -->\r\n                <li>\r\n                  <span>\r\n                    <b>Net Disposable Income: {{averageIncome - totalBusinessExpense + totalPrimaryIncome +\r\n                      totalSecondaryIncome - totalHouseholdExpense | currency:'PKR':''}}</b>\r\n                  </span>\r\n                </li>\r\n                <!-- <li>\r\n                  <span>\r\n                    <b>Estimated Monthly Payment: {{product.installmentAmount}}</b>\r\n                  </span>\r\n                </li> -->\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-1\">\r\n            <label>\r\n              <b>Comments:</b>\r\n            </label>\r\n\r\n            <!-- <div *ngFor=\"let comment of commentsArray\">\r\n              <div>\r\n                <div *ngIf=\"comment.role == 'bdo'\" class=\"container fl\">\r\n                  <h6>{{comment.username}}</h6>\r\n                  <p>{{comment.comment}}</p>\r\n                  <span class=\"time-right\">{{comment.date | date:'dd-MM-yyyy'}}</span>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div *ngIf=\"comment.role == 'bm'\" class=\"container darker fr\">\r\n                  <h6>{{comment.username}}</h6>\r\n                  <p>{{comment.comment}}</p>\r\n                  <span class=\"time-right\">{{comment.date | date:'dd-MM-yyyy'}}</span>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            <textarea [(ngModel)]=\"comment\" class=\"form-control\"></textarea>\r\n          </div>\r\n\r\n\r\n          <div class=\"mt-4\" *ngIf=\"auth.role != 'bm'\">\r\n            <button appNoDblClick class=\"btn btn-primary\" [disabled]=\"readonly\" type=\"button\"\r\n              (click)=\"submitApplication()\">Submit\r\n              Application</button>\r\n            <button appNoDblClick type=\"button\" [disabled]=\"readonly\" (click)=\"cancelApplication()\"\r\n              class=\"btn btn-primary\">Cancel\r\n              Application</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-3 text-center\">\r\n          <div class=\"picswrap\" *ngIf=\"clientPic!=null\">\r\n            <div class=\"borderpic\">\r\n              <img [src]=\"sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,'+clientPic)\"\r\n                (click)=\"loadModal(clientPic, 'Client\\'s Picture')\" width=\"160\" height=\"160\" alt=\"\">\r\n            </div>\r\n            <h6 class=\"mt-2\">Client Picture</h6>\r\n          </div>\r\n          <div class=\"picswrap\" *ngIf=\"nomPic!=null\">\r\n            <div class=\"borderpic\">\r\n              <img [src]=\"sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,'+nomPic)\"\r\n                (click)=\"loadModal(nomPic, 'Nominee\\'s Picture')\" width=\"160\" height=\"160\" alt=\"\">\r\n            </div>\r\n            <h6 class=\"mt-2\">Nominee Picture </h6>\r\n          </div>\r\n        </div>\r\n        <!-- PROCESS APPLICATION -->\r\n\r\n        <div class=\"col-sm-12 mt-4\" *ngIf=\"auth.role == 'bm'\">\r\n          <button class=\"btn btn-primary\" appNoDblClick [disabled]=\"readonly\"\r\n            (click)=\"approveApplication()\">Approve</button>\r\n          <button class=\"btn btn-primary\" appNoDblClick [disabled]=\"readonly\" (click)=\"sendBackApplication()\">Send\r\n            Back</button>\r\n          <button class=\"btn btn-primary\" appNoDblClick [disabled]=\"readonly\"\r\n            (click)=\"openRejectModal()\">Reject</button>\r\n\r\n          <div class=\"modal fade\" id=\"LoanApplication\" role=\"dialog\">\r\n            <div class=\"modal-dialog mymodal smallpop\">\r\n              <form (ngSubmit)=\"approveApplication()\" #aprroveForm=\"ngForm\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Approve Credit Application</h5>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <div class=\"Row  mt-3\">\r\n                      <div class=\"col-sm-8 offset-sm-2 text-center\">\r\n                        <!-- <label>Enter Approved Amount:</label> -->\r\n                        <mat-form-field>\r\n                          <input type=\"text\" class=\"form-control\" (keypress)=\"onlyNumbers($event)\" maxlength=\"6\"\r\n                            matInput [readonly]=\"readonly\" required [(ngModel)]=\"model.approvedAmount\"\r\n                            name=\"approvedAmount\" #approvedAmount=\"ngModel\" placeholder=\"Approved Amount:\">\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer text-center\">\r\n                    <button appNoDblClick class=\"btn btn-primary btn-min\" type=\"submit\"\r\n                      [disabled]=\"!aprroveForm.form.valid\">Approve</button>\r\n                    <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal fade\" id=\"SendBack\" role=\"dialog\">\r\n            <div class=\"modal-dialog mymodal smallpop\">\r\n              <form (ngSubmit)=\"sendBackApplication()\" #sendBack=\"ngForm\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Send Back</h5>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <div class=\"Row  mt-3\">\r\n                      <div class=\"col-sm-12 text-center\">\r\n                        <label>Please comment on what should be reviewed:</label>\r\n                        <textarea class=\"form-control md-control\" [(ngModel)]=\"model.comment\" name=\"comment\"\r\n                          #comment=\"ngModel\"></textarea>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer text-center pt-0\">\r\n                    <button appNoDblClick type=\"button\" class=\"btn btn-primary btn-min\" type=\"submit\"\r\n                      [disabled]=\"!sendBack.form.valid\">Send</button>\r\n                    <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal fade\" id=\"RejectLoanApplication\" role=\"dialog\">\r\n            <div class=\"modal-dialog mymodal smallpop\">\r\n              <form (ngSubmit)=\"rejectApplication()\" #reject=\"ngForm\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Reject Applaication</h5>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <div class=\"Row  mt-3\">\r\n                      <div class=\"col-sm-12 text-center\">\r\n                        <label>Please select a reason for rejection:</label>\r\n                        <!-- <textarea class=\"form-control md-control\" [(ngModel)]=\"model.comment\" name=\"comment\" #comment=\"ngModel\"></textarea> -->\r\n                        <!-- <div class=\"cCol2\"> -->\r\n                        <div>\r\n                          <mat-form-field>\r\n                            <mat-select [disabled]=\"readonly\" placeholder=\"Rejection Reason:\"\r\n                              [(ngModel)]=\"model.rejectionReasonCd\" [errorStateMatcher]=\"matcher\" pattern=\"^[1-9]\\d*$\"\r\n                              name=\"rejectionCode\" required>\r\n                              <mat-option *ngFor=\"let edu of rejectionReasons\" [value]=\"edu.codeKey\">\r\n                                {{edu.codeValue}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <!-- </div> -->\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer text-center pt-0\">\r\n                    <button type=\"button\" class=\"btn btn-primary btn-min\"\r\n                      [disabled]=\"(model.rejectionReasonCd == null) || (model.rejectionReasonCd == 'undefined') || (model.rejectionReasonCd == 0) \"\r\n                      (click)=\"rejectApplication()\">Reject</button>\r\n                    <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal fade\" id=\"deleteConfirmation\" role=\"dialog\">\r\n          <div class=\"modal-dialog mymodal\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Cancel Credit</h5>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"table-responsive\">\r\n                  <h6>Do you want to cancel application?</h6>\r\n                  <hr>\r\n                  <p><b>Note: </b> Application relevant data will be deleted.</p>\r\n                  <hr>\r\n\r\n                </div>\r\n\r\n                <div class=\"modal-footer smmodal-footer text-center\">\r\n                  <button appNoDblClick type=\"button\" (click)=\"confirmDelete()\"\r\n                    class=\"btn btn-primary btn-min\">Yes</button>\r\n                  <button type=\"button\" class=\"btn btn-primary btn-min\" data-dismiss=\"modal\">No</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"modal fade\" id=\"AMLNameDialog\" role=\"dialog\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n          <div class=\"modal-dialog mymodal\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\"> AML Name Match Found</h5>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"table-responsive\">\r\n                  <h6></h6>\r\n                  <hr>\r\n                  <p><b>Note: </b> {{amlNameMtch}}</p>\r\n                  <hr>\r\n\r\n                </div>\r\n\r\n                <div class=\"modal-footer smmodal-footer text-center\">\r\n                  <button appNoDblClick type=\"button\" (click)=\"closeAMlDialog()\"\r\n                    class=\"btn btn-primary btn-min\">Ok</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <!-- END PROCESS APPLICATION -->\r\n        <!-- The Modal -->\r\n        <div id=\"myModal\" class=\"modal-e\">\r\n\r\n          <!-- The Close Button -->\r\n          <span (click)=\"closeModal()\" class=\"close\">&times;</span>\r\n\r\n          <!-- Modal Content (The Image) -->\r\n          <img class=\"modal-content-e\" [src]=\"modelSrc\">\r\n\r\n          <!-- Modal Caption (Image Text) -->\r\n          <div id=\"caption\">{{modalCaption}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>"

/***/ }),

/***/ "./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: SubmitApplicationComponent, LocationInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubmitApplicationComponent", function() { return SubmitApplicationComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationInfo", function() { return LocationInfo; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/loan.service */ "./src/app/shared/services/loan.service.ts");
/* harmony import */ var _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/providers/breadcrumb */ "./src/app/shared/providers/breadcrumb.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/ngx-spinner.umd.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ngx_spinner__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _shared_models_LoanProduct_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/models/LoanProduct.model */ "./src/app/shared/models/LoanProduct.model.ts");
/* harmony import */ var _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common.service */ "./src/app/shared/services/common.service.ts");
/* harmony import */ var _shared_models_LoanApplicant_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/models/LoanApplicant.model */ "./src/app/shared/models/LoanApplicant.model.ts");
/* harmony import */ var _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/models/BusinessAppraisal.model */ "./src/app/shared/models/BusinessAppraisal.model.ts");
/* harmony import */ var _shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/models/REF_CODE_GRP_KEYS.mocks */ "./src/app/shared/models/REF_CODE_GRP_KEYS.mocks.ts");
/* harmony import */ var _shared_models_schoolAppraisal_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/models/schoolAppraisal.model */ "./src/app/shared/models/schoolAppraisal.model.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var SubmitApplicationComponent = /** @class */ (function () {
    function SubmitApplicationComponent(router, loanService, breadcrumbProvider, spinner, commonService, toaster, sanitizer) {
        this.router = router;
        this.loanService = loanService;
        this.breadcrumbProvider = breadcrumbProvider;
        this.spinner = spinner;
        this.commonService = commonService;
        this.toaster = toaster;
        this.sanitizer = sanitizer;
        this.readonly = (sessionStorage.getItem('readonly') == 'true') ? true : false;
        this.formSaved = false;
        this.products = [];
        this.application = new _shared_models_LoanApplicant_model__WEBPACK_IMPORTED_MODULE_8__["LoanApplicant"]();
        this.product = new _shared_models_LoanProduct_model__WEBPACK_IMPORTED_MODULE_6__["LoanProduct"]();
        this.locationInfo = new LocationInfo();
        this.commentsArray = [];
        this.hasBusinessApp = false;
        this.hasSchoolApp = false;
        this.totalHouseholdExpense = 0;
        this.totalBusinessExpense = 0;
        this.totalSecondaryIncome = 0;
        this.totalPrimaryIncome = 0;
        this.averageIncome = 0;
        this.netDeposible = 0;
        this.businessProfit = 0;
        this.residenceArray = [];
        this.docs = [];
        this.clientPic = null;
        this.nomPic = null;
        this.comment = "";
        this.amlNameMtch = "";
        this.paymentSchedule = [];
    }
    SubmitApplicationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.auth = JSON.parse(sessionStorage.getItem("auth"));
        var basicCrumbs = [];
        basicCrumbs = JSON.parse(sessionStorage.getItem("basicCrumbs"));
        basicCrumbs.forEach(function (element) {
            _this.breadcrumbProvider.addCheckedItem(element.formNm, "/loan-origination/app/" + element.formUrl, element.isSaved);
        });
        this.model = JSON.parse(sessionStorage.getItem('model'));
        this.model.nominee.loanAppSeq = this.model.loanAppSeq;
        this.model.nominee.formSeq = this.model.formSeq;
        this.model.nominee.clientSeq = this.model.clientSeq;
        if (this.model.isNomDetailAvailable)
            this.model.nominee.typFlg = 1;
        else
            this.model.nominee.typFlg = 2;
        console.log(this.model.loanAppSeq);
        console.log(this.model);
        console.log(this.model.nominee);
        this.loanService.getClntRel(this.model.nominee).subscribe(function (res) {
            console.log(res);
            _this.clientNomineeData = res;
            console.log(_this.clientNomineeData.relationKey);
            console.log(_this.clientNomineeData.relationKey);
        });
        this.loanService.getInsuranceMembers(this.model.loanAppSeq).subscribe(function (res) {
            console.log(res);
            _this.clientInsuranceData = res;
        });
        this.isNomDetailAvailable = this.model.isNomDetailAvailable;
        this.loanAppSeq = this.model.loanAppSeq;
        if (this.model.forms) {
            var hasboth_1 = false;
            this.model.forms.forEach(function (element) {
                if (element.formUrl == 'nominee') {
                    _this.model.forms.forEach(function (form) {
                        if (form.formUrl == 'next-of-kin') {
                            hasboth_1 = true;
                            form.hasNextOfKin = true;
                            element.hasNextOfKin = true;
                            hasboth_1 = true;
                        }
                    });
                }
            });
            this.model.forms.forEach(function (element, index) {
                if ((element.formUrl === 'co-borrower' && _this.model.selfPDC) || (element.formUrl === 'co-borrower' && _this.model.isSAN)) {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                }
                else if (element.formUrl == "mfcib" || element.formUrl == "documents") {
                    element.isSaved = true;
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                else if (element.formUrl == 'next-of-kin') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == true || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else if (element.formUrl == 'nominee') {
                    if (hasboth_1) {
                        _this.model.hasNextOfKin = true;
                        if (_this.model.isNomDetailAvailable == false || _this.model.isNomDetailAvailable == undefined) {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, true);
                        }
                        else {
                            _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                        }
                    }
                    else {
                        _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                    }
                }
                else {
                    _this.breadcrumbProvider.addCheckedItemDis(element.formNm, '/loan-origination/app/' + element.formUrl, element.isSaved, false);
                }
                if ('/loan-origination/app/' + element.formUrl === _this.router.url) {
                    _this.model.formSeq = element.formSeq;
                }
            });
        }
        if (this.model.businessAppraisal == undefined)
            this.model.businessAppraisal = new _shared_models_BusinessAppraisal_model__WEBPACK_IMPORTED_MODULE_9__["BusinessAppraisal"](this.model.loanAppSeq, this.model.formSeq);
        this.loanService.getLoanAppForSubmit(this.model.loanAppSeq).subscribe(function (res) {
            _this.spinner.hide();
            _this.application = res;
            if (res.clntInfo != null)
                _this.model = Object.assign(_this.model, res.clntInfo, _this.model);
            if (res.BusinessApraisal != null) {
                Object.assign(_this.model.businessAppraisal, res.BusinessApraisal, _this.model.businessAppraisal);
                _this.hasBusinessApp = true;
            }
            if (res.loanApp != null)
                _this.model = Object.assign(_this.model, res.loanApp, _this.model);
            if (res.loanApp != null && res.loanApp.comment != null && res.loanApp.comment != "") {
                try {
                    _this.commentsArray = JSON.parse(res.loanApp.comment);
                }
                catch (err) {
                    console.log(err);
                }
            }
            if (res.BusinessIncome != null)
                Object.assign(_this.model.businessAppraisal, res.BusinessIncome, _this.model.businessAppraisal);
            _this.locationInfo = new LocationInfo();
            if (res.locationInfo != null)
                Object.assign(_this.locationInfo, res.locationInfo, _this.locationInfo);
            _this.calculateTotalValues();
            _this.loadLovs();
            console.log(_this.commentsArray);
            if (_this.model.businessAppraisal.isbizAddrSAC) {
                _this.model.businessAppraisal.houseNum = _this.model.houseNum;
                _this.model.businessAppraisal.sreet_area = _this.model.sreet_area;
                _this.model.businessAppraisal.village = _this.model.village;
                _this.model.businessAppraisal.otherDetails = _this.model.otherDetails;
            }
        }, function (error) {
            _this.spinner.hide();
            // this.toaster.error("Unable to Get Data");
            console.log("error", error);
        });
        this.loanService.getProducts(this.model).subscribe(function (res) {
            _this.spinner.hide();
            _this.products = res;
            _this.products.forEach(function (element) {
                if (element.productSeq == _this.model.loanProd) {
                    _this.product = element;
                }
            });
            _this.onProductSelect(_this.model.loanProd);
        }, function (error) {
            _this.spinner.hide();
            console.log(error);
        });
        this.loanService.getSchoolApperaisal(this.model.loanAppSeq).subscribe(function (schoolAP) {
            if (schoolAP != undefined && schoolAP.schAprslSeq != 0) {
                _this.model.schoolAppraisal = schoolAP;
                _this.hasSchoolApp = true;
            }
            if (_this.model.schoolAppraisal != undefined) {
                _this.hasSchoolApp = true;
                _this.calculateTotalGrades();
            }
        }, function (error) {
            console.log(error);
        });
        this.loadLovs();
    };
    SubmitApplicationComponent.prototype.calculateTotalMonth = function () { this.totalmnths = Math.floor((this.model.businessAppraisal.yearsInBusiness * 12) + this.model.businessAppraisal.monthsInBusiness); };
    SubmitApplicationComponent.prototype.calculateTotalValues = function () {
        this.calculateTotalMonth();
        this.totalPrimaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.primaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.primaryIncome[i].incomeAmount;
            this.totalPrimaryIncome = this.totalPrimaryIncome + x;
        }
        this.totalSecondaryIncome = 0;
        for (var i = 0; i < this.model.businessAppraisal.secondaryIncome.length; i++) {
            var x = +this.model.businessAppraisal.secondaryIncome[i].incomeAmount;
            this.totalSecondaryIncome = +this.totalSecondaryIncome + x;
        }
        this.totalBusinessExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.businessExpense.length; i++) {
            var x = +this.model.businessAppraisal.businessExpense[i].expAmount;
            this.totalBusinessExpense = +this.totalBusinessExpense + x;
        }
        this.totalHouseholdExpense = 0;
        for (var i = 0; i < this.model.businessAppraisal.householdExpense.length; i++) {
            var x = +this.model.businessAppraisal.householdExpense[i].expAmount;
            this.totalHouseholdExpense = +this.totalHouseholdExpense + x;
        }
        this.incomeChange();
    };
    SubmitApplicationComponent.prototype.incomeChange = function () {
        this.averageIncome = Math.floor(((this.model.businessAppraisal.maxMonthSale * this.model.businessAppraisal.maxSaleMonth) + (this.model.businessAppraisal.minMonthSale * this.model.businessAppraisal.minSaleMonth)) / (this.model.businessAppraisal.minSaleMonth + this.model.businessAppraisal.maxSaleMonth));
        this.calculateNetDeposible();
        this.calculateBusinessProfit();
    };
    SubmitApplicationComponent.prototype.calculateNetDeposible = function () {
        this.netDeposible = this.totalPrimaryIncome + this.totalSecondaryIncome + this.averageIncome - this.totalBusinessExpense - this.totalHouseholdExpense;
    };
    SubmitApplicationComponent.prototype.calculateBusinessProfit = function () {
        this.businessProfit = this.totalPrimaryIncome - this.totalBusinessExpense;
    };
    SubmitApplicationComponent.prototype.onProductSelect = function (val) {
        for (var i = 0; i < this.products.length; i++) {
            if (this.products[i].productSeq == val) {
                this.product = this.products[i];
                break;
            }
        }
        this.onRecommendAmountChange();
    };
    SubmitApplicationComponent.prototype.onRecommendAmountChange = function () {
        var _this = this;
        this.product.charges.forEach(function (charge) {
            if (charge.type == 1) {
                _this.product.totalRecieveable = Math.floor((+_this.model.recAmount) + (+charge.charge * +_this.model.recAmount) / 100);
                _this.product.chargesStr = "" + ((+charge.charge * +_this.model.recAmount) / 100);
            }
            else {
                _this.product.totalRecieveable = Math.floor(+_this.model.recAmount + +charge.charge);
                _this.product.chargesStr = charge.charge;
            }
        });
    };
    SubmitApplicationComponent.prototype.onPersonelChange = function () {
        var p = this.findValueFromKey(this.model.businessAppraisal.personRunningBusinessKey, this.businessRunner);
        if (p == 'SELF') {
            this.cpPercentage = '100%';
        }
        else {
            this.cpPercentage = '50%';
        }
    };
    SubmitApplicationComponent.prototype.convertToDateString = function (str) {
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var date = new Date(str);
        var datestr = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();
        return datestr;
    };
    SubmitApplicationComponent.prototype.loadLovs = function () {
        var _this = this;
        // this.commonService.getValues('EDUCATION').subscribe((res) => {
        //   this.education = res;
        // }, (error) => {
        //   console.log('err', error);
        // });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["SCHOOL_TYPE"]).subscribe(function (d) { return _this.schoolType = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["SCHOOL_OWNERSHIP"]).subscribe(function (d) { return _this.schoolOwnerShip = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["SCHOOL_PRINCIPAL"]).subscribe(function (d) { return _this.principal = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["REJECTION_REASON_CODE"]).subscribe(function (d) { return _this.rejectionReasons = d; });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["OCCUPATION"]).subscribe(function (res) {
            _this.occupation = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["GENDER"]).subscribe(function (res) {
            _this.gender = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["MARITAL_STATUS"]).subscribe(function (res) {
            _this.maritalStatus = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["BUSINESS_RUNNER"]).subscribe(function (res) {
            _this.businessRunner = res;
            _this.onPersonelChange();
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["BUSINESS_OWNERSHIP"]).subscribe(function (res) {
            _this.businessOwnership = res;
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getValues(_shared_models_REF_CODE_GRP_KEYS_mocks__WEBPACK_IMPORTED_MODULE_10__["RESIDENCE"]).subscribe(function (res) {
            _this.residenceArray = res;
            console.log(res);
        }, function (error) {
            console.log('err', error);
        });
        this.commonService.getSectors(this.model.loanProd).subscribe(function (res) {
            _this.sector = res;
        }, function (error) {
            console.log('err', error);
        });
        this.loanService.getAllDocumentsForLoanApp(this.model.loanAppSeq).subscribe(function (res) {
            console.log(res);
            _this.docs = res;
            _this.docs.forEach(function (d) {
                if (d.docSeq == 1)
                    _this.clientPic = d.docImg;
                if (d.docSeq == 4)
                    _this.nomPic = d.docImg;
            });
        });
    };
    SubmitApplicationComponent.prototype.returnCNICPattern = function (cnic) {
        var string = '';
        var str = cnic + "";
        var charArray = str.split("");
        charArray.forEach(function (item, index) {
            if (index == 5 || index == 12)
                string = string + '-';
            string = string + item;
        });
        return string;
    };
    SubmitApplicationComponent.prototype.findValueFromKey = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].codeKey == key) {
                    return array[i].codeValue;
                }
            }
        }
    };
    SubmitApplicationComponent.prototype.findValueFromKeySector = function (key, array) {
        if (array) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].bizSectSeq == key) {
                    return array[i].bizSectNm;
                }
            }
        }
    };
    SubmitApplicationComponent.prototype.calculateTotalGrades = function () {
        var _this = this;
        this.totalGrade = new _shared_models_schoolAppraisal_model__WEBPACK_IMPORTED_MODULE_11__["SchoolGradeDto"]();
        if (this.model.schoolAppraisal.schoolGradeDtos != null && this.model.schoolAppraisal.schoolGradeDtos != undefined) {
            this.model.schoolAppraisal.schoolGradeDtos.forEach(function (g) {
                _this.totalGrade.avgFee = _this.totalGrade.avgFee + Number.parseInt(g.avgFee);
                _this.totalGrade.totFemStdnt = _this.totalGrade.totFemStdnt + Number.parseInt(g.totFemStdnt);
                _this.totalGrade.totMaleStdnt = _this.totalGrade.totMaleStdnt + Number.parseInt(g.totMaleStdnt);
                _this.totalGrade.noFeeStdnt = _this.totalGrade.noFeeStdnt + Number.parseInt(g.noFeeStdnt);
                _this.totalGrade.femStdntPrsnt = _this.totalGrade.femStdntPrsnt + Number.parseInt(g.femStdntPrsnt);
                _this.totalGrade.maleStdntPrsnt = _this.totalGrade.maleStdntPrsnt + Number.parseInt(g.maleStdntPrsnt);
                // this.totalGrade.classAverageFee = this.totalGrade.avgFee / this.model.schoolAppraisal.schoolGradeDtos.length;
                _this.totalGrade.girlsAverage = (_this.totalGrade.totFemStdnt / (_this.totalGrade.totFemStdnt + _this.totalGrade.totMaleStdnt)) * 100;
                _this.totalGrade.totalFee = _this.totalGrade.classAverageFee;
                _this.totalGrade.totalStudents = _this.totalGrade.totFemStdnt + _this.totalGrade.totMaleStdnt;
                var classRevenue = Math.round(((+g.totFemStdnt + +g.totMaleStdnt) - (+g.noFeeStdnt)) * (+g.avgFee));
                _this.totalGrade.schoolRevenue += classRevenue;
                _this.totalGrade.classAverageFee = Math.round(_this.totalGrade.schoolRevenue / _this.totalGrade.totalStudents);
            });
        }
        if (this.model.schoolAppraisal.businessExpense != undefined && this.model.schoolAppraisal.businessExpense != null) {
            this.totalGrade.totalBusinessExpense = 0;
            this.model.schoolAppraisal.businessExpense.forEach(function (ex) {
                _this.totalGrade.totalBusinessExpense = _this.totalGrade.totalBusinessExpense + +ex.expAmount;
            });
        }
        if (this.model.schoolAppraisal.primaryIncome != undefined && this.model.schoolAppraisal.primaryIncome != null) {
            this.totalGrade.totalPrimaryIncome = 0;
            this.model.schoolAppraisal.primaryIncome.forEach(function (inc) {
                _this.totalGrade.totalPrimaryIncome = _this.totalGrade.totalPrimaryIncome + +inc.incomeAmount;
            });
        }
        if (this.model.schoolAppraisal.secondaryIncome != undefined && this.model.schoolAppraisal.secondaryIncome != null) {
            this.totalGrade.totalSecondaryIncome = 0;
            this.model.schoolAppraisal.secondaryIncome.forEach(function (inc) {
                _this.totalGrade.totalSecondaryIncome = _this.totalGrade.totalSecondaryIncome + +inc.incomeAmount;
            });
        }
        if (this.model.schoolAppraisal.householdExpense != undefined && this.model.schoolAppraisal.householdExpense != null) {
            this.totalGrade.totalHouseholdExpense = 0;
            this.model.schoolAppraisal.householdExpense.forEach(function (ex) {
                _this.totalGrade.totalHouseholdExpense = _this.totalGrade.totalHouseholdExpense + +ex.expAmount;
            });
        }
    };
    SubmitApplicationComponent.prototype.addCommentsToModel = function () {
        // let array;
        // if (this.comment.length > 0) {
        //   let obj: any = {
        //     username: this.auth.user.username,
        //     date: new Date(),
        //     comment: this.comment,
        //     role: this.auth.role
        //   }
        //   this.commentsArray.push(obj);
        //   if (this.model.comment == null || this.model.comment == undefined) {
        //     array = [];
        //     array.push(obj);
        //   } else {
        //     if (this.model.comment.length > 0) {
        //       console.log(this.model.comment.length)
        //       array = JSON.parse(this.model.comment);
        //       console.log(array)
        //       array.push(obj);
        //     } else {
        //       array = [];
        //       array.push(obj);
        //     }
        //   }
        //   this.model.comment = JSON.stringify(array);
        //   this.comment = "";
        // }
        this.model.comment = this.comment;
    };
    SubmitApplicationComponent.prototype.submitApplication = function () {
        var _this = this;
        this.model.loanAppSeq = this.loanAppSeq;
        console.log(this.clientNomineeData);
        // if (this.clientNomineeData.relationKey == 545 && ) {
        // }
        // this.clientInsuranceData.forEach(ele => {
        //   if (ele.relKey == 434 && this.clientNomineeData.relationKey == 545) {
        //     this.toaster.info('Duplicate Husbands cannot be added, Please remove one record', "Information");
        //     return;
        //   }
        // })
        for (var a = 0; a < this.clientInsuranceData.length; a++) {
            if (this.clientInsuranceData[a].relKey == 434 && this.clientNomineeData.relationKey == 545 && this.model.loanProd == 4) {
                this.toaster.info('Duplicate Husbands cannot be added, Please remove one record', "Information");
                return;
            }
        }
        var keepGoing = true;
        if (this.model.forms) {
            this.model.forms.forEach(function (element) {
                if (keepGoing) {
                    if (!element.isSaved) {
                        if (element.formNm != "Documents" && element.formNm != "Submit Application") {
                            if (_this.isNomDetailAvailable && element.formUrl == "next-of-kin") {
                            }
                            else if (!_this.isNomDetailAvailable && element.formUrl == "nominee") {
                            }
                            else {
                                _this.toaster.error("Please Submit " + element.formNm + " first.", "Error");
                                keepGoing = false;
                                return;
                            }
                        }
                    }
                }
            });
        }
        if (!keepGoing)
            return;
        this.spinner.show();
        this.addCommentsToModel();
        console.log(this.model.comment);
        this.spinner.hide();
        this.loanService.submitApp(this.model).subscribe(function (res) {
            _this.spinner.hide();
            if (res.status == 0) {
                _this.toaster.success("Application Submitted");
                _this.router.navigate(['loan-origination/landing']);
            }
            else if (res.status == 1) {
                _this.toaster.error(res.message, "Rule Failed");
            }
            else if (res.status == 2) {
                _this.toaster.error(res.message, "Error");
            }
            else if (res.status == 3) {
                _this.toaster.error(res.message, "AML Blocked");
                _this.router.navigate(['loan-origination/landing']);
            }
            else if (res.status == 5) {
                _this.toaster.error(res.message, "AML Blocked");
            }
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error(error.error.text, "Error");
            console.log('err', error);
        });
    };
    SubmitApplicationComponent.prototype.openRejectModal = function () {
        $('#RejectLoanApplication').modal('show');
    };
    SubmitApplicationComponent.prototype.approveApplication = function () {
        var _this = this;
        this.amlNameMtch = "";
        this.model.loanAppSeq = this.loanAppSeq;
        console.log(this.clientNomineeData);
        // if (this.clientNomineeData.relationKey == 545 && ) {
        // }
        for (var a = 0; a < this.clientInsuranceData.length; a++) {
            if (this.clientInsuranceData[a].relKey == 434 && this.clientNomineeData.relationKey == 545 && this.model.loanProd == 4) {
                // console.log(this.clientInsuranceData[a].relKey)
                // console.log(this.clientNomineeData.relationKey)
                // console.log('i am in approve')
                this.toaster.info('Duplicate Husbands cannot be added, Please remove one record', "Information");
                return;
            }
        }
        // this.clientInsuranceData.forEach(ele => {
        //   if (ele.relKey == 434 && this.clientNomineeData.relationKey == 545) {
        //     this.toaster.info('Duplicate Husbands cannot be added, Please remove one record', "Information");
        //     return;
        //   }
        // })
        // if((+this.model.approvedAmount%1000)>0){
        //   this.toaster.error("Approved amount should be multiple of 1000");
        //   return;
        // }
        // if (this.model.approvedAmount <= 0) {
        //   this.toaster.error("Please Enter Valid Amount.");
        //   return;
        // }
        // if(this.model.reqAmount<this.model.approvedAmount){
        //   this.toaster.error("Approved amount exceeds Requested Amount");
        //   return;
        // }
        // if(this.product.maxAmount<this.model.approvedAmount){
        //   this.toaster.error("Approved amount exceeds Product's Max Amount");
        //   return;
        // }
        // if(this.product.minAmount>this.model.approvedAmount){
        //   this.toaster.error("Approved amount less than Product's Min Amount");
        //   return;
        // }
        this.spinner.show();
        this.loanService.approveApp(this.model).subscribe(function (res) {
            _this.spinner.hide();
            if (res.status == 0) {
                _this.toaster.success(res.message);
                _this.router.navigate(['loan-origination/landing']);
            }
            else if (res.status == 1) {
                _this.toaster.error(res.message, "Rule Failed");
            }
            else if (res.status == 2) {
                _this.toaster.error(res.message, "Error");
            }
            else if (res.status == 3) {
                _this.toaster.error(res.message, "AML Blocked");
                _this.router.navigate(['loan-origination/landing']);
            }
            else if (res.status == 4) {
                _this.amlNameMtch = res.message;
                $('#AMLNameDialog').modal('show');
            }
            else if (res.status == 5) {
                _this.toaster.error(res.message, "AML Blocked");
            }
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error("Something Went Wrong", "Error");
            console.log('err', error);
        });
    };
    SubmitApplicationComponent.prototype.closeAMlDialog = function () {
        $('#AMLNameDialog').modal('hide');
        this.router.navigate(['loan-origination/landing']);
    };
    SubmitApplicationComponent.prototype.sendBackApplication = function () {
        var _this = this;
        // this.model.loanAppSeq = this.loanAppSeq;
        if (this.comment == null) {
            this.toaster.error("Please provide some reasoning");
            return;
        }
        if (this.comment.length <= 0) {
            this.toaster.error("Please provide Comments");
            return;
        }
        this.spinner.show();
        this.addCommentsToModel();
        this.loanService.sendbackApp(this.model).subscribe(function (res) {
            _this.spinner.hide();
            _this.toaster.success("Application Sent Back for Clarification");
            $('#SendBack').modal('hide');
            _this.router.navigate(['loan-origination/landing']);
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error("Something Went Wrong", "Error");
            console.log('err', error);
        });
    };
    SubmitApplicationComponent.prototype.calculateTotalCharge = function (chargers) {
        var amt = 0;
        chargers.forEach(function (ch) {
            amt = amt + ch.amt;
        });
        return amt;
    };
    SubmitApplicationComponent.prototype.rejectApplication = function () {
        var _this = this;
        // this.model.loanAppSeq = this.loanAppSeq;
        console.log(this.model.rejectionReasonCd);
        console.log(this.model);
        if (this.model.rejectionReasonCd == null || this.model.rejectionReasonCd == 0) {
            this.toaster.error("Please select a Reason");
            return;
        }
        this.spinner.show();
        this.loanService.rejectApplication(this.model).subscribe(function (res) {
            _this.spinner.hide();
            _this.toaster.success("Application Rejected");
            $('#RejectLoanApplication').modal('hide');
            _this.router.navigate(['loan-origination/landing']);
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error("Something Went Wrong", "Error");
            console.log('err', error);
        });
    };
    SubmitApplicationComponent.prototype.onlyNumbers = function (event) {
        var pattern = /[0-9]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.charCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    SubmitApplicationComponent.prototype.cancelApplication = function () {
        this.deleteLoan(this.model.loanAppSeq);
    };
    SubmitApplicationComponent.prototype.deleteLoan = function (loanAppId) {
        this.loanAppIdToBeDeleted = loanAppId;
        $('#deleteConfirmation').modal('show');
    };
    SubmitApplicationComponent.prototype.confirmDelete = function () {
        var _this = this;
        this.spinner.show();
        $('#deleteConfirmation').modal('hide');
        this.loanService.deleteLoan(this.loanAppIdToBeDeleted).subscribe(function (res) {
            _this.spinner.hide();
            _this.router.navigate(['loan-origination']);
        }, function (error) {
            _this.spinner.hide();
            console.log(error);
        });
    };
    SubmitApplicationComponent.prototype.onPaymentScheduleClick = function () {
        var _this = this;
        this.spinner.show();
        this.loanService.getPaymentSchedule(this.model.loanAppSeq).subscribe(function (res) {
            _this.spinner.hide();
            _this.paymentSchedule = res;
            $('#scheduleModal').modal('show');
        }, function (error) {
            _this.spinner.hide();
            _this.toaster.error("Something Went Wrong", "Error");
            console.log('err', error);
        });
    };
    SubmitApplicationComponent.prototype.loadModal = function (docimg, caption) {
        document.getElementById('myModal').style.display = "block";
        this.modelSrc = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' + docimg);
        this.modalCaption = caption;
    };
    SubmitApplicationComponent.prototype.closeModal = function () {
        document.getElementById('myModal').style.display = "none";
    };
    SubmitApplicationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-submit-application',
            template: __webpack_require__(/*! ./submit-application.component.html */ "./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.html"),
            styles: [__webpack_require__(/*! ./submit-application.component.css */ "./src/app/pages/loan-origination/loan-app/submit-application/submit-application.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _shared_services_loan_service__WEBPACK_IMPORTED_MODULE_2__["LoanService"],
            _shared_providers_breadcrumb__WEBPACK_IMPORTED_MODULE_3__["BreadcrumbProvider"], ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"],
            _shared_services_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["DomSanitizer"]])
    ], SubmitApplicationComponent);
    return SubmitApplicationComponent;
}());

var LocationInfo = /** @class */ (function () {
    function LocationInfo() {
        this.portName = "";
        this.branchCode = "";
        this.branchName = "";
        this.areaName = "";
        this.regName = "";
    }
    return LocationInfo;
}());



/***/ }),

/***/ "./src/app/shared/adapters/moment-date-adapter.ts":
/*!********************************************************!*\
  !*** ./src/app/shared/adapters/moment-date-adapter.ts ***!
  \********************************************************/
/*! exports provided: MomentUtcDateAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MomentUtcDateAdapter", function() { return MomentUtcDateAdapter; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};




var MomentUtcDateAdapter = /** @class */ (function (_super) {
    __extends(MomentUtcDateAdapter, _super);
    function MomentUtcDateAdapter(dateLocale) {
        return _super.call(this, dateLocale) || this;
    }
    MomentUtcDateAdapter.prototype.createDate = function (year, month, date) {
        // Moment.js will create an invalid date if any of the components are out of bounds, but we
        // explicitly check each case so we can throw more descriptive errors.
        if (month < 0 || month > 11) {
            throw Error("Invalid month index \"" + month + "\". Month index has to be between 0 and 11.");
        }
        if (date < 1) {
            throw Error("Invalid date \"" + date + "\". Date has to be greater than 0.");
        }
        var result = moment__WEBPACK_IMPORTED_MODULE_3__["utc"]({ year: year, month: month, date: date }).locale(this.locale);
        // If the result isn't valid, the date must have been out of bounds for this month.
        if (!result.isValid()) {
            throw Error("Invalid date \"" + date + "\" for month with index \"" + month + "\".");
        }
        return result;
    };
    MomentUtcDateAdapter = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DATE_LOCALE"])),
        __metadata("design:paramtypes", [String])
    ], MomentUtcDateAdapter);
    return MomentUtcDateAdapter;
}(_angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_2__["MomentDateAdapter"]));



/***/ }),

/***/ "./src/app/shared/helpers/MyErrorStateMatcher.helper.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/helpers/MyErrorStateMatcher.helper.ts ***!
  \**************************************************************/
/*! exports provided: MyErrorStateMatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyErrorStateMatcher", function() { return MyErrorStateMatcher; });
var MyErrorStateMatcher = /** @class */ (function () {
    function MyErrorStateMatcher() {
    }
    MyErrorStateMatcher.prototype.isErrorState = function (control, form) {
        var isSubmitted = form && form.submitted;
        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));
    };
    return MyErrorStateMatcher;
}());



/***/ }),

/***/ "./src/app/shared/models/BusinessAppraisal.model.ts":
/*!**********************************************************!*\
  !*** ./src/app/shared/models/BusinessAppraisal.model.ts ***!
  \**********************************************************/
/*! exports provided: BusinessAppraisal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BusinessAppraisal", function() { return BusinessAppraisal; });
/* harmony import */ var _address_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.model */ "./src/app/shared/models/address.model.ts");

var BusinessAppraisal = /** @class */ (function () {
    function BusinessAppraisal(loanAppSeq, formSeq) {
        // Address
        this.businessAddress = new _address_model__WEBPACK_IMPORTED_MODULE_0__["Address"]();
        this.isbizAddrSAC = false;
        this.primaryIncome = [];
        this.secondaryIncome = [];
        this.businessExpense = [];
        this.householdExpense = [];
        // livestock
        this.estLvStk = [];
        this.extngLvStk = [];
        this.loanAppSeq = loanAppSeq;
        this.formSeq = formSeq;
    }
    return BusinessAppraisal;
}());



/***/ }),

/***/ "./src/app/shared/models/BusinessExpense.model.ts":
/*!********************************************************!*\
  !*** ./src/app/shared/models/BusinessExpense.model.ts ***!
  \********************************************************/
/*! exports provided: BusinessExpense */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BusinessExpense", function() { return BusinessExpense; });
var BusinessExpense = /** @class */ (function () {
    function BusinessExpense() {
        this.DSED = false;
    }
    return BusinessExpense;
}());



/***/ }),

/***/ "./src/app/shared/models/EstimatedLivestock.model.ts":
/*!***********************************************************!*\
  !*** ./src/app/shared/models/EstimatedLivestock.model.ts ***!
  \***********************************************************/
/*! exports provided: EstimatedLivestock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EstimatedLivestock", function() { return EstimatedLivestock; });
var EstimatedLivestock = /** @class */ (function () {
    function EstimatedLivestock() {
    }
    return EstimatedLivestock;
}());



/***/ }),

/***/ "./src/app/shared/models/ExistingLivestock.model.ts":
/*!**********************************************************!*\
  !*** ./src/app/shared/models/ExistingLivestock.model.ts ***!
  \**********************************************************/
/*! exports provided: ExistingLivestock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExistingLivestock", function() { return ExistingLivestock; });
var ExistingLivestock = /** @class */ (function () {
    function ExistingLivestock() {
    }
    return ExistingLivestock;
}());



/***/ }),

/***/ "./src/app/shared/models/InsuranceMembers.model.ts":
/*!*********************************************************!*\
  !*** ./src/app/shared/models/InsuranceMembers.model.ts ***!
  \*********************************************************/
/*! exports provided: InsuranceMember */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InsuranceMember", function() { return InsuranceMember; });
var InsuranceMember = /** @class */ (function () {
    function InsuranceMember(loanAppSeq) {
        this.loanAppSeq = loanAppSeq;
    }
    return InsuranceMember;
}());



/***/ }),

/***/ "./src/app/shared/models/InsurancePlan.model.ts":
/*!******************************************************!*\
  !*** ./src/app/shared/models/InsurancePlan.model.ts ***!
  \******************************************************/
/*! exports provided: InsurancePlan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InsurancePlan", function() { return InsurancePlan; });
var InsurancePlan = /** @class */ (function () {
    function InsurancePlan() {
    }
    return InsurancePlan;
}());



/***/ }),

/***/ "./src/app/shared/models/LoanUtilization.model.ts":
/*!********************************************************!*\
  !*** ./src/app/shared/models/LoanUtilization.model.ts ***!
  \********************************************************/
/*! exports provided: LoanUtilization */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanUtilization", function() { return LoanUtilization; });
var LoanUtilization = /** @class */ (function () {
    function LoanUtilization(seq, formSeq) {
        this.loanAppSeq = seq;
        this.formSeq = formSeq;
    }
    return LoanUtilization;
}());



/***/ }),

/***/ "./src/app/shared/models/PrimaryIncome.model.ts":
/*!******************************************************!*\
  !*** ./src/app/shared/models/PrimaryIncome.model.ts ***!
  \******************************************************/
/*! exports provided: PrimaryIncome */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrimaryIncome", function() { return PrimaryIncome; });
var PrimaryIncome = /** @class */ (function () {
    function PrimaryIncome() {
    }
    return PrimaryIncome;
}());



/***/ }),

/***/ "./src/app/shared/models/SchoolInformation.model.ts":
/*!**********************************************************!*\
  !*** ./src/app/shared/models/SchoolInformation.model.ts ***!
  \**********************************************************/
/*! exports provided: SchoolInformation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolInformation", function() { return SchoolInformation; });
var SchoolInformation = /** @class */ (function () {
    function SchoolInformation() {
    }
    return SchoolInformation;
}());



/***/ }),

/***/ "./src/app/shared/models/mfcib.model.ts":
/*!**********************************************!*\
  !*** ./src/app/shared/models/mfcib.model.ts ***!
  \**********************************************/
/*! exports provided: MFCIBLoan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MFCIBLoan", function() { return MFCIBLoan; });
var MFCIBLoan = /** @class */ (function () {
    function MFCIBLoan(seq, formSeq) {
        this.loanAppSeq = seq;
        this.formSeq = formSeq;
    }
    return MFCIBLoan;
}());



/***/ }),

/***/ "./src/app/shared/models/schoolAppraisal.model.ts":
/*!********************************************************!*\
  !*** ./src/app/shared/models/schoolAppraisal.model.ts ***!
  \********************************************************/
/*! exports provided: SchoolAppraisal, SchoolGradeDto */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolAppraisal", function() { return SchoolAppraisal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolGradeDto", function() { return SchoolGradeDto; });
/* harmony import */ var _address_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.model */ "./src/app/shared/models/address.model.ts");

var SchoolAppraisal = /** @class */ (function () {
    function SchoolAppraisal() {
        this.addressDto = new _address_model__WEBPACK_IMPORTED_MODULE_0__["Address"]();
        this.primaryIncome = [];
        this.secondaryIncome = [];
        this.businessExpense = [];
        this.householdExpense = [];
        this.hasBasic = false;
        this.hasAddress = false;
        this.hasGrade = false;
        this.hasIncome = false;
        this.hasExpense = false;
        this.hasQltyChck = false;
        this.formComplete = false;
        this.hasAttend = false;
        // "totMaleTchrs": "1",
        // "totFemTchrs": "2",
        // "lastYrDrop": "3",
    }
    return SchoolAppraisal;
}());

var SchoolGradeDto = /** @class */ (function () {
    function SchoolGradeDto() {
        this.schoolRevenue = 0;
        this.totalFee = 0;
        this.totalBusinessincome = 0;
        this.totalPrimaryIncome = 0;
        this.totalSecondaryIncome = 0;
        this.totalhouseholdExpense = 0;
        this.avgFee = 0;
        this.totMaleStdnt = 0;
        this.totFemStdnt = 0;
        this.noFeeStdnt = 0;
        this.femStdntPrsnt = 0;
        this.maleStdntPrsnt = 0;
        this.gradeFlag = 'a';
        this.totalStudents = 0;
    }
    return SchoolGradeDto;
}());



/***/ }),

/***/ "./src/app/shared/models/schoolQA.model.ts":
/*!*************************************************!*\
  !*** ./src/app/shared/models/schoolQA.model.ts ***!
  \*************************************************/
/*! exports provided: SchoolQA, SchoolQuestion, SchoolQualityCheckDto, SchoolQAArray, SchoolQARaw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolQA", function() { return SchoolQA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolQuestion", function() { return SchoolQuestion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolQualityCheckDto", function() { return SchoolQualityCheckDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolQAArray", function() { return SchoolQAArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchoolQARaw", function() { return SchoolQARaw; });
var SchoolQA = /** @class */ (function () {
    function SchoolQA() {
    }
    return SchoolQA;
}());

var SchoolQuestion = /** @class */ (function () {
    function SchoolQuestion(obj) {
        Object.assign(this, obj);
    }
    return SchoolQuestion;
}());

var SchoolQualityCheckDto = /** @class */ (function () {
    function SchoolQualityCheckDto(obj) {
        Object.assign(this, obj);
    }
    return SchoolQualityCheckDto;
}());

var SchoolQAArray = /** @class */ (function () {
    function SchoolQAArray() {
    }
    return SchoolQAArray;
}());

var SchoolQARaw = /** @class */ (function () {
    function SchoolQARaw() {
    }
    return SchoolQARaw;
}());



/***/ })

}]);
//# sourceMappingURL=loan-app-loan-app-module.js.map